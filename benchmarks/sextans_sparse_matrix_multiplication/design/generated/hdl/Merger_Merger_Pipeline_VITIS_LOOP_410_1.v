// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module Merger_Merger_Pipeline_VITIS_LOOP_410_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_out_din,
        fifo_out_full_n,
        fifo_out_write,
        fifo_in_0_dout,
        fifo_in_0_empty_n,
        fifo_in_0_read,
        fifo_in_1_dout,
        fifo_in_1_empty_n,
        fifo_in_1_read
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [512:0] fifo_out_din;
input   fifo_out_full_n;
output   fifo_out_write;
input  [256:0] fifo_in_0_dout;
input   fifo_in_0_empty_n;
output   fifo_in_0_read;
input  [256:0] fifo_in_1_dout;
input   fifo_in_1_empty_n;
output   fifo_in_1_read;

reg ap_done;
reg ap_idle;
reg fifo_out_write;
reg fifo_in_0_read;
reg fifo_in_1_read;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] elem_val_M_elems_1_fu_209_p4;
wire    ap_CS_fsm_state2;
wire   [0:0] and_ln412_1_fu_191_p2;
wire   [31:0] tmp_5_fu_220_p4;
wire   [31:0] tmp_6_fu_231_p4;
wire   [31:0] tmp_7_fu_242_p4;
wire   [31:0] elem_val_M_elems_3_fu_265_p4;
wire   [31:0] tmp_3_fu_276_p4;
wire   [31:0] tmp_4_fu_287_p4;
wire   [31:0] tmp_s_fu_298_p4;
wire   [0:0] tmp_1_nbreadreq_fu_70_p3;
wire   [0:0] tmp_2_nbreadreq_fu_78_p3;
wire   [0:0] and_ln412_fu_185_p2;
wire   [0:0] and_ln412_1_fu_191_p1;
wire   [95:0] tmp_8_fu_309_p4;
wire   [31:0] elem_val_M_elems_2_fu_261_p1;
wire   [95:0] tmp_9_fu_319_p4;
wire   [31:0] elem_val_M_elems_fu_205_p1;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln412_1_fu_191_p2) & (fifo_in_0_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_in_0_read = 1'b1;
    end else begin
        fifo_in_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln412_1_fu_191_p2) & (fifo_in_1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_in_1_read = 1'b1;
    end else begin
        fifo_in_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln412_1_fu_191_p2) & (fifo_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_out_write = 1'b1;
    end else begin
        fifo_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln412_1_fu_191_p1 = fifo_out_full_n;

assign and_ln412_1_fu_191_p2 = (and_ln412_fu_185_p2 & and_ln412_1_fu_191_p1);

assign and_ln412_fu_185_p2 = (tmp_2_nbreadreq_fu_78_p3 & tmp_1_nbreadreq_fu_70_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_ready = 1'b0;

assign elem_val_M_elems_1_fu_209_p4 = {{fifo_in_0_dout[63:32]}};

assign elem_val_M_elems_2_fu_261_p1 = fifo_in_1_dout[31:0];

assign elem_val_M_elems_3_fu_265_p4 = {{fifo_in_1_dout[63:32]}};

assign elem_val_M_elems_fu_205_p1 = fifo_in_0_dout[31:0];

assign fifo_out_din = {{{{{{{{{{{{{{{{{{{{{{{{1'd0}, {tmp_8_fu_309_p4}}}, {tmp_s_fu_298_p4}}}, {tmp_4_fu_287_p4}}}, {tmp_3_fu_276_p4}}}, {elem_val_M_elems_3_fu_265_p4}}}, {elem_val_M_elems_2_fu_261_p1}}}, {tmp_9_fu_319_p4}}}, {tmp_7_fu_242_p4}}}, {tmp_6_fu_231_p4}}}, {tmp_5_fu_220_p4}}}, {elem_val_M_elems_1_fu_209_p4}}}, {elem_val_M_elems_fu_205_p1}};

assign tmp_1_nbreadreq_fu_70_p3 = fifo_in_0_empty_n;

assign tmp_2_nbreadreq_fu_78_p3 = fifo_in_1_empty_n;

assign tmp_3_fu_276_p4 = {{fifo_in_1_dout[95:64]}};

assign tmp_4_fu_287_p4 = {{fifo_in_1_dout[127:96]}};

assign tmp_5_fu_220_p4 = {{fifo_in_0_dout[95:64]}};

assign tmp_6_fu_231_p4 = {{fifo_in_0_dout[127:96]}};

assign tmp_7_fu_242_p4 = {{fifo_in_0_dout[159:128]}};

assign tmp_8_fu_309_p4 = {{fifo_in_1_dout[255:160]}};

assign tmp_9_fu_319_p4 = {{fifo_in_0_dout[255:160]}};

assign tmp_s_fu_298_p4 = {{fifo_in_1_dout[159:128]}};

endmodule //Merger_Merger_Pipeline_VITIS_LOOP_410_1
