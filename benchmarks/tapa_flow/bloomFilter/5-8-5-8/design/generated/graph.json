{
    "cflags": [
        "-std=c++17",
        "-I",
        "/home/ylxiao/.local/lib/python3.8/site-packages/tapa/../../../src",
        "-isystem",
        "/tools/Xilinx/Vitis_HLS/2022.2/include"
    ],
    "tasks": {
        "bloom_aggregate_SPLIT": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n){\n\n\n#pragma HLS disaggregate variable = reconstruct_stream\n#pragma HLS array_partition variable = reconstruct_stream complete\n#pragma HLS interface ap_fifo port = reconstruct_stream[0]._\n#pragma HLS aggregate variable = reconstruct_stream[0]._ bit\n#pragma HLS interface ap_fifo port = reconstruct_stream[0]._peek\n#pragma HLS aggregate variable = reconstruct_stream[0]._peek bit\nvoid(reconstruct_stream[0]._.empty());\nvoid(reconstruct_stream[0]._peek.empty());\n#pragma HLS interface ap_fifo port = reconstruct_stream[1]._\n#pragma HLS aggregate variable = reconstruct_stream[1]._ bit\n#pragma HLS interface ap_fifo port = reconstruct_stream[1]._peek\n#pragma HLS aggregate variable = reconstruct_stream[1]._peek bit\nvoid(reconstruct_stream[1]._.empty());\nvoid(reconstruct_stream[1]._peek.empty());\n#pragma HLS interface ap_fifo port = reconstruct_stream[2]._\n#pragma HLS aggregate variable = reconstruct_stream[2]._ bit\n#pragma HLS interface ap_fifo port = reconstruct_stream[2]._peek\n#pragma HLS aggregate variable = reconstruct_stream[2]._peek bit\nvoid(reconstruct_stream[2]._.empty());\nvoid(reconstruct_stream[2]._peek.empty());\n#pragma HLS interface ap_fifo port = reconstruct_stream[3]._\n#pragma HLS aggregate variable = reconstruct_stream[3]._ bit\n#pragma HLS interface ap_fifo port = reconstruct_stream[3]._peek\n#pragma HLS aggregate variable = reconstruct_stream[3]._peek bit\nvoid(reconstruct_stream[3]._.empty());\nvoid(reconstruct_stream[3]._peek.empty());\n#pragma HLS interface ap_fifo port = reconstruct_stream[4]._\n#pragma HLS aggregate variable = reconstruct_stream[4]._ bit\n#pragma HLS interface ap_fifo port = reconstruct_stream[4]._peek\n#pragma HLS aggregate variable = reconstruct_stream[4]._peek bit\nvoid(reconstruct_stream[4]._.empty());\nvoid(reconstruct_stream[4]._peek.empty());\n\n#pragma HLS disaggregate variable = aggregate_stream\n#pragma HLS interface ap_fifo port = aggregate_stream._\n#pragma HLS aggregate variable = aggregate_stream._ bit\nvoid(aggregate_stream._.full());\n\n    int num_writes_TOTAL = 0;\n    int num_reads = 0;\n    int all_hashes_available = 0;\n    uint32_t result = 1;\n    while (num_writes_TOTAL < KEYPAIRS_PER_STM)\n    {\n#pragma HLS PIPELINE=1\n        // Check if all of our hash values are available:\n        all_hashes_available = 1;\n        for (int i = 0; i < (5); ++i) {\n            if (reconstruct_stream[i].empty()) {\n                all_hashes_available = 0;\n            }\n        }\n        if (all_hashes_available)\n        {\n            result = 1;\n            for (int i = 0; i < (5); ++i) {\n                result &= reconstruct_stream[i].read();\n            }\n            num_reads++;\n            aggregate_stream.write(result);\n            num_writes_TOTAL++;\n        }\n    }\n    return;\n}\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n;\n",
            "level": "lower",
            "target": "hls",
            "vendor": "xilinx"
        },
        "bloom_arb_forwarder": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n){\n\n\n#pragma HLS disaggregate variable = hash_stream\n#pragma HLS array_partition variable = hash_stream complete\n#pragma HLS interface ap_fifo port = hash_stream[0]._\n#pragma HLS aggregate variable = hash_stream[0]._ bit\n#pragma HLS interface ap_fifo port = hash_stream[0]._peek\n#pragma HLS aggregate variable = hash_stream[0]._peek bit\nvoid(hash_stream[0]._.empty());\nvoid(hash_stream[0]._peek.empty());\n#pragma HLS interface ap_fifo port = hash_stream[1]._\n#pragma HLS aggregate variable = hash_stream[1]._ bit\n#pragma HLS interface ap_fifo port = hash_stream[1]._peek\n#pragma HLS aggregate variable = hash_stream[1]._peek bit\nvoid(hash_stream[1]._.empty());\nvoid(hash_stream[1]._peek.empty());\n#pragma HLS interface ap_fifo port = hash_stream[2]._\n#pragma HLS aggregate variable = hash_stream[2]._ bit\n#pragma HLS interface ap_fifo port = hash_stream[2]._peek\n#pragma HLS aggregate variable = hash_stream[2]._peek bit\nvoid(hash_stream[2]._.empty());\nvoid(hash_stream[2]._peek.empty());\n#pragma HLS interface ap_fifo port = hash_stream[3]._\n#pragma HLS aggregate variable = hash_stream[3]._ bit\n#pragma HLS interface ap_fifo port = hash_stream[3]._peek\n#pragma HLS aggregate variable = hash_stream[3]._peek bit\nvoid(hash_stream[3]._.empty());\nvoid(hash_stream[3]._peek.empty());\n#pragma HLS interface ap_fifo port = hash_stream[4]._\n#pragma HLS aggregate variable = hash_stream[4]._ bit\n#pragma HLS interface ap_fifo port = hash_stream[4]._peek\n#pragma HLS aggregate variable = hash_stream[4]._peek bit\nvoid(hash_stream[4]._.empty());\nvoid(hash_stream[4]._peek.empty());\n\n#pragma HLS disaggregate variable = arb_stream\n#pragma HLS array_partition variable = arb_stream complete\n#pragma HLS interface ap_fifo port = arb_stream[0]._\n#pragma HLS aggregate variable = arb_stream[0]._ bit\nvoid(arb_stream[0]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[1]._\n#pragma HLS aggregate variable = arb_stream[1]._ bit\nvoid(arb_stream[1]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[2]._\n#pragma HLS aggregate variable = arb_stream[2]._ bit\nvoid(arb_stream[2]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[3]._\n#pragma HLS aggregate variable = arb_stream[3]._ bit\nvoid(arb_stream[3]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[4]._\n#pragma HLS aggregate variable = arb_stream[4]._ bit\nvoid(arb_stream[4]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[5]._\n#pragma HLS aggregate variable = arb_stream[5]._ bit\nvoid(arb_stream[5]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[6]._\n#pragma HLS aggregate variable = arb_stream[6]._ bit\nvoid(arb_stream[6]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[7]._\n#pragma HLS aggregate variable = arb_stream[7]._ bit\nvoid(arb_stream[7]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[8]._\n#pragma HLS aggregate variable = arb_stream[8]._ bit\nvoid(arb_stream[8]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[9]._\n#pragma HLS aggregate variable = arb_stream[9]._ bit\nvoid(arb_stream[9]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[10]._\n#pragma HLS aggregate variable = arb_stream[10]._ bit\nvoid(arb_stream[10]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[11]._\n#pragma HLS aggregate variable = arb_stream[11]._ bit\nvoid(arb_stream[11]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[12]._\n#pragma HLS aggregate variable = arb_stream[12]._ bit\nvoid(arb_stream[12]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[13]._\n#pragma HLS aggregate variable = arb_stream[13]._ bit\nvoid(arb_stream[13]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[14]._\n#pragma HLS aggregate variable = arb_stream[14]._ bit\nvoid(arb_stream[14]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[15]._\n#pragma HLS aggregate variable = arb_stream[15]._ bit\nvoid(arb_stream[15]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[16]._\n#pragma HLS aggregate variable = arb_stream[16]._ bit\nvoid(arb_stream[16]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[17]._\n#pragma HLS aggregate variable = arb_stream[17]._ bit\nvoid(arb_stream[17]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[18]._\n#pragma HLS aggregate variable = arb_stream[18]._ bit\nvoid(arb_stream[18]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[19]._\n#pragma HLS aggregate variable = arb_stream[19]._ bit\nvoid(arb_stream[19]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[20]._\n#pragma HLS aggregate variable = arb_stream[20]._ bit\nvoid(arb_stream[20]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[21]._\n#pragma HLS aggregate variable = arb_stream[21]._ bit\nvoid(arb_stream[21]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[22]._\n#pragma HLS aggregate variable = arb_stream[22]._ bit\nvoid(arb_stream[22]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[23]._\n#pragma HLS aggregate variable = arb_stream[23]._ bit\nvoid(arb_stream[23]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[24]._\n#pragma HLS aggregate variable = arb_stream[24]._ bit\nvoid(arb_stream[24]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[25]._\n#pragma HLS aggregate variable = arb_stream[25]._ bit\nvoid(arb_stream[25]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[26]._\n#pragma HLS aggregate variable = arb_stream[26]._ bit\nvoid(arb_stream[26]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[27]._\n#pragma HLS aggregate variable = arb_stream[27]._ bit\nvoid(arb_stream[27]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[28]._\n#pragma HLS aggregate variable = arb_stream[28]._ bit\nvoid(arb_stream[28]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[29]._\n#pragma HLS aggregate variable = arb_stream[29]._ bit\nvoid(arb_stream[29]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[30]._\n#pragma HLS aggregate variable = arb_stream[30]._ bit\nvoid(arb_stream[30]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[31]._\n#pragma HLS aggregate variable = arb_stream[31]._ bit\nvoid(arb_stream[31]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[32]._\n#pragma HLS aggregate variable = arb_stream[32]._ bit\nvoid(arb_stream[32]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[33]._\n#pragma HLS aggregate variable = arb_stream[33]._ bit\nvoid(arb_stream[33]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[34]._\n#pragma HLS aggregate variable = arb_stream[34]._ bit\nvoid(arb_stream[34]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[35]._\n#pragma HLS aggregate variable = arb_stream[35]._ bit\nvoid(arb_stream[35]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[36]._\n#pragma HLS aggregate variable = arb_stream[36]._ bit\nvoid(arb_stream[36]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[37]._\n#pragma HLS aggregate variable = arb_stream[37]._ bit\nvoid(arb_stream[37]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[38]._\n#pragma HLS aggregate variable = arb_stream[38]._ bit\nvoid(arb_stream[38]._.full());\n#pragma HLS interface ap_fifo port = arb_stream[39]._\n#pragma HLS aggregate variable = arb_stream[39]._ bit\nvoid(arb_stream[39]._.full());\n\n    typedef struct {\n        ap_uint<1> valid;\n        PACKED_HASH_DTYPE value;\n        uint32_t target_partition_idx;\n    } XBAR_DTYPE;\n    const int READ_STOP_COUNT = (5) * KEYPAIRS_PER_STM;\n    const int WRITE_STOP_COUNT = KEYPAIRS_PER_STM;\n    int total_num_reads = 0;\n    int total_num_writes = 0;\n    int num_writes_per_stm[(5)];\n#pragma HLS ARRAY_PARTITION variable=num_writes_per_stm dim=0 complete\n    /* TAPA Known-issue: Static keyword fails CSIM because this\n       isnt thread-safe. But when running the HW build, it will\n       instantiate several copies of this function. So this is OK.\n    */\n    static\n    ap_uint<INPUT_IDX_BITWIDTH> reads_per_input[(5)];\n#pragma HLS ARRAY_PARTITION variable=reads_per_input dim=0 complete\n    /* TAPA Known-issue: Static keyword fails CSIM because this\n       isnt thread-safe. But when running the HW build, it will\n       instantiate several copies of this function. So this is OK.\n    */\n    static\n    XBAR_DTYPE xbar[(5)];\n#pragma HLS ARRAY_PARTITION variable=xbar dim=0 complete\n    INIT_LOOP:\n    for (int i = 0; i < (5); ++i)\n    {\n        reads_per_input[i] = 0;\n        num_writes_per_stm[i] = 0;\n        xbar[i].valid = 0;\n    }\n    MAIN_LOOP:\n    while (total_num_reads < READ_STOP_COUNT ||\n            num_writes_per_stm[0] < WRITE_STOP_COUNT ||\n            num_writes_per_stm[1] < WRITE_STOP_COUNT ||\n            num_writes_per_stm[2] < WRITE_STOP_COUNT ||\n            num_writes_per_stm[3] < WRITE_STOP_COUNT ||\n            num_writes_per_stm[4] < WRITE_STOP_COUNT\n    ) {\n#pragma HLS PIPELINE II=1\n        RD_LOGIC:\n        for (int strm_idx = 0; strm_idx < (5); ++strm_idx) {\n#pragma HLS UNROLL\n            // Metadata:\n            ap_uint<INPUT_IDX_BITWIDTH> cur_input_idx;\n            ap_uint<STRM_IDX_BITWIDTH> cur_strm_idx;\n            METADATA_DTYPE cur_metadata;\n            PACKED_HASH_DTYPE packed_hashval;\n            if (xbar[strm_idx].valid == 1)\n            {\n                // Dont replace this value.\n            }\n            else if (!hash_stream[strm_idx].empty())\n            {\n                // Hash and partition data:\n                ap_uint<HASHONLY_BITWIDTH> tmp_hash = hash_stream[strm_idx].read();\n                ap_uint<HASHONLY_BITWIDTH> idx_inside_partition = tmp_hash % ( (BV_LENGTH-1)/((5)*(8) /* each sub bv is further partitioned into this chunks*/) + 1);\n                int partition_idx = (tmp_hash / ( (BV_LENGTH-1)/((5)*(8) /* each sub bv is further partitioned into this chunks*/) + 1));\n                total_num_reads++;\n                reads_per_input[strm_idx]++;\n                // Pack metadata\n                cur_metadata.sidx = strm_idx;\n                cur_metadata.iidx = reads_per_input[strm_idx];\n                // Pack final payload\n                packed_hashval.md = cur_metadata;\n                packed_hashval.hash = idx_inside_partition;\n                xbar[strm_idx].valid = 1;\n                xbar[strm_idx].value = packed_hashval;\n                xbar[strm_idx].target_partition_idx = partition_idx;\n            }\n        }\n        WR_LOGIC:\n        for (int partition_idx = 0; partition_idx < (8) /* each sub bv is further partitioned into this chunks*/; ++partition_idx)\n        {\n#pragma HLS UNROLL\n            bool found = false;\n            uint32_t found_strm_idx = 0;\n            for (int strm_idx = 0; strm_idx < (5); ++strm_idx)\n            {\n#pragma HLS UNROLL\n                int out_fifo_idx = partition_idx*(5) + strm_idx;\n                if (xbar[strm_idx].valid == 1 &&\n                    xbar[strm_idx].target_partition_idx == partition_idx)\n                {\n                    if (arb_stream[out_fifo_idx].try_write( xbar[strm_idx].value ))\n                    {\n                        num_writes_per_stm[strm_idx]++;\n                        xbar[strm_idx].valid = 0;\n                    }\n                }\n            }\n        }\n    }\n}\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n;\n",
            "level": "lower",
            "target": "hls",
            "vendor": "xilinx"
        },
        "bloom_arbiter_ratemonitor": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n){\n\n\n\n#pragma HLS disaggregate variable = arb_stream_in\n#pragma HLS array_partition variable = arb_stream_in complete\n#pragma HLS interface ap_fifo port = arb_stream_in[0]._\n#pragma HLS aggregate variable = arb_stream_in[0]._ bit\n#pragma HLS interface ap_fifo port = arb_stream_in[0]._peek\n#pragma HLS aggregate variable = arb_stream_in[0]._peek bit\nvoid(arb_stream_in[0]._.empty());\nvoid(arb_stream_in[0]._peek.empty());\n#pragma HLS interface ap_fifo port = arb_stream_in[1]._\n#pragma HLS aggregate variable = arb_stream_in[1]._ bit\n#pragma HLS interface ap_fifo port = arb_stream_in[1]._peek\n#pragma HLS aggregate variable = arb_stream_in[1]._peek bit\nvoid(arb_stream_in[1]._.empty());\nvoid(arb_stream_in[1]._peek.empty());\n#pragma HLS interface ap_fifo port = arb_stream_in[2]._\n#pragma HLS aggregate variable = arb_stream_in[2]._ bit\n#pragma HLS interface ap_fifo port = arb_stream_in[2]._peek\n#pragma HLS aggregate variable = arb_stream_in[2]._peek bit\nvoid(arb_stream_in[2]._.empty());\nvoid(arb_stream_in[2]._peek.empty());\n#pragma HLS interface ap_fifo port = arb_stream_in[3]._\n#pragma HLS aggregate variable = arb_stream_in[3]._ bit\n#pragma HLS interface ap_fifo port = arb_stream_in[3]._peek\n#pragma HLS aggregate variable = arb_stream_in[3]._peek bit\nvoid(arb_stream_in[3]._.empty());\nvoid(arb_stream_in[3]._peek.empty());\n#pragma HLS interface ap_fifo port = arb_stream_in[4]._\n#pragma HLS aggregate variable = arb_stream_in[4]._ bit\n#pragma HLS interface ap_fifo port = arb_stream_in[4]._peek\n#pragma HLS aggregate variable = arb_stream_in[4]._peek bit\nvoid(arb_stream_in[4]._.empty());\nvoid(arb_stream_in[4]._peek.empty());\n#pragma HLS interface ap_fifo port = arb_stream_in[5]._\n#pragma HLS aggregate variable = arb_stream_in[5]._ bit\n#pragma HLS interface ap_fifo port = arb_stream_in[5]._peek\n#pragma HLS aggregate variable = arb_stream_in[5]._peek bit\nvoid(arb_stream_in[5]._.empty());\nvoid(arb_stream_in[5]._peek.empty());\n#pragma HLS interface ap_fifo port = arb_stream_in[6]._\n#pragma HLS aggregate variable = arb_stream_in[6]._ bit\n#pragma HLS interface ap_fifo port = arb_stream_in[6]._peek\n#pragma HLS aggregate variable = arb_stream_in[6]._peek bit\nvoid(arb_stream_in[6]._.empty());\nvoid(arb_stream_in[6]._peek.empty());\n#pragma HLS interface ap_fifo port = arb_stream_in[7]._\n#pragma HLS aggregate variable = arb_stream_in[7]._ bit\n#pragma HLS interface ap_fifo port = arb_stream_in[7]._peek\n#pragma HLS aggregate variable = arb_stream_in[7]._peek bit\nvoid(arb_stream_in[7]._.empty());\nvoid(arb_stream_in[7]._peek.empty());\n\n#pragma HLS disaggregate variable = arb_stream_out\n#pragma HLS array_partition variable = arb_stream_out complete\n#pragma HLS interface ap_fifo port = arb_stream_out[0]._\n#pragma HLS aggregate variable = arb_stream_out[0]._ bit\nvoid(arb_stream_out[0]._.full());\n#pragma HLS interface ap_fifo port = arb_stream_out[1]._\n#pragma HLS aggregate variable = arb_stream_out[1]._ bit\nvoid(arb_stream_out[1]._.full());\n#pragma HLS interface ap_fifo port = arb_stream_out[2]._\n#pragma HLS aggregate variable = arb_stream_out[2]._ bit\nvoid(arb_stream_out[2]._.full());\n#pragma HLS interface ap_fifo port = arb_stream_out[3]._\n#pragma HLS aggregate variable = arb_stream_out[3]._ bit\nvoid(arb_stream_out[3]._.full());\n#pragma HLS interface ap_fifo port = arb_stream_out[4]._\n#pragma HLS aggregate variable = arb_stream_out[4]._ bit\nvoid(arb_stream_out[4]._.full());\n#pragma HLS interface ap_fifo port = arb_stream_out[5]._\n#pragma HLS aggregate variable = arb_stream_out[5]._ bit\nvoid(arb_stream_out[5]._.full());\n#pragma HLS interface ap_fifo port = arb_stream_out[6]._\n#pragma HLS aggregate variable = arb_stream_out[6]._ bit\nvoid(arb_stream_out[6]._.full());\n#pragma HLS interface ap_fifo port = arb_stream_out[7]._\n#pragma HLS aggregate variable = arb_stream_out[7]._ bit\nvoid(arb_stream_out[7]._.full());\n\n#pragma HLS disaggregate variable = fdbk_stream_0\n#pragma HLS array_partition variable = fdbk_stream_0 complete\n#pragma HLS interface ap_fifo port = fdbk_stream_0[0]._\n#pragma HLS aggregate variable = fdbk_stream_0[0]._ bit\nvoid(fdbk_stream_0[0]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_0[1]._\n#pragma HLS aggregate variable = fdbk_stream_0[1]._ bit\nvoid(fdbk_stream_0[1]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_0[2]._\n#pragma HLS aggregate variable = fdbk_stream_0[2]._ bit\nvoid(fdbk_stream_0[2]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_0[3]._\n#pragma HLS aggregate variable = fdbk_stream_0[3]._ bit\nvoid(fdbk_stream_0[3]._.full());\n\n#pragma HLS disaggregate variable = fdbk_stream_1\n#pragma HLS array_partition variable = fdbk_stream_1 complete\n#pragma HLS interface ap_fifo port = fdbk_stream_1[0]._\n#pragma HLS aggregate variable = fdbk_stream_1[0]._ bit\nvoid(fdbk_stream_1[0]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_1[1]._\n#pragma HLS aggregate variable = fdbk_stream_1[1]._ bit\nvoid(fdbk_stream_1[1]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_1[2]._\n#pragma HLS aggregate variable = fdbk_stream_1[2]._ bit\nvoid(fdbk_stream_1[2]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_1[3]._\n#pragma HLS aggregate variable = fdbk_stream_1[3]._ bit\nvoid(fdbk_stream_1[3]._.full());\n\n#pragma HLS disaggregate variable = fdbk_stream_2\n#pragma HLS array_partition variable = fdbk_stream_2 complete\n#pragma HLS interface ap_fifo port = fdbk_stream_2[0]._\n#pragma HLS aggregate variable = fdbk_stream_2[0]._ bit\nvoid(fdbk_stream_2[0]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_2[1]._\n#pragma HLS aggregate variable = fdbk_stream_2[1]._ bit\nvoid(fdbk_stream_2[1]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_2[2]._\n#pragma HLS aggregate variable = fdbk_stream_2[2]._ bit\nvoid(fdbk_stream_2[2]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_2[3]._\n#pragma HLS aggregate variable = fdbk_stream_2[3]._ bit\nvoid(fdbk_stream_2[3]._.full());\n\n#pragma HLS disaggregate variable = fdbk_stream_3\n#pragma HLS array_partition variable = fdbk_stream_3 complete\n#pragma HLS interface ap_fifo port = fdbk_stream_3[0]._\n#pragma HLS aggregate variable = fdbk_stream_3[0]._ bit\nvoid(fdbk_stream_3[0]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_3[1]._\n#pragma HLS aggregate variable = fdbk_stream_3[1]._ bit\nvoid(fdbk_stream_3[1]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_3[2]._\n#pragma HLS aggregate variable = fdbk_stream_3[2]._ bit\nvoid(fdbk_stream_3[2]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_3[3]._\n#pragma HLS aggregate variable = fdbk_stream_3[3]._ bit\nvoid(fdbk_stream_3[3]._.full());\n\n#pragma HLS disaggregate variable = fdbk_stream_4\n#pragma HLS array_partition variable = fdbk_stream_4 complete\n#pragma HLS interface ap_fifo port = fdbk_stream_4[0]._\n#pragma HLS aggregate variable = fdbk_stream_4[0]._ bit\nvoid(fdbk_stream_4[0]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_4[1]._\n#pragma HLS aggregate variable = fdbk_stream_4[1]._ bit\nvoid(fdbk_stream_4[1]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_4[2]._\n#pragma HLS aggregate variable = fdbk_stream_4[2]._ bit\nvoid(fdbk_stream_4[2]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_4[3]._\n#pragma HLS aggregate variable = fdbk_stream_4[3]._ bit\nvoid(fdbk_stream_4[3]._.full());\n\n#pragma HLS disaggregate variable = fdbk_stream_5\n#pragma HLS array_partition variable = fdbk_stream_5 complete\n#pragma HLS interface ap_fifo port = fdbk_stream_5[0]._\n#pragma HLS aggregate variable = fdbk_stream_5[0]._ bit\nvoid(fdbk_stream_5[0]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_5[1]._\n#pragma HLS aggregate variable = fdbk_stream_5[1]._ bit\nvoid(fdbk_stream_5[1]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_5[2]._\n#pragma HLS aggregate variable = fdbk_stream_5[2]._ bit\nvoid(fdbk_stream_5[2]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_5[3]._\n#pragma HLS aggregate variable = fdbk_stream_5[3]._ bit\nvoid(fdbk_stream_5[3]._.full());\n\n#pragma HLS disaggregate variable = fdbk_stream_6\n#pragma HLS array_partition variable = fdbk_stream_6 complete\n#pragma HLS interface ap_fifo port = fdbk_stream_6[0]._\n#pragma HLS aggregate variable = fdbk_stream_6[0]._ bit\nvoid(fdbk_stream_6[0]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_6[1]._\n#pragma HLS aggregate variable = fdbk_stream_6[1]._ bit\nvoid(fdbk_stream_6[1]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_6[2]._\n#pragma HLS aggregate variable = fdbk_stream_6[2]._ bit\nvoid(fdbk_stream_6[2]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_6[3]._\n#pragma HLS aggregate variable = fdbk_stream_6[3]._ bit\nvoid(fdbk_stream_6[3]._.full());\n\n#pragma HLS disaggregate variable = fdbk_stream_7\n#pragma HLS array_partition variable = fdbk_stream_7 complete\n#pragma HLS interface ap_fifo port = fdbk_stream_7[0]._\n#pragma HLS aggregate variable = fdbk_stream_7[0]._ bit\nvoid(fdbk_stream_7[0]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_7[1]._\n#pragma HLS aggregate variable = fdbk_stream_7[1]._ bit\nvoid(fdbk_stream_7[1]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_7[2]._\n#pragma HLS aggregate variable = fdbk_stream_7[2]._ bit\nvoid(fdbk_stream_7[2]._.full());\n#pragma HLS interface ap_fifo port = fdbk_stream_7[3]._\n#pragma HLS aggregate variable = fdbk_stream_7[3]._ bit\nvoid(fdbk_stream_7[3]._.full());\n\n    int WRITE_STOP_COUNT = 0;\n    /* Depending on which level this ratemon is in,\n     * it expects a different number of writes.\n     */\n    WRITE_STOP_COUNT = (5) * KEYPAIRS_PER_STM;\n    int writes_per_partition[(8) /* each sub bv is further partitioned into this chunks*/] = {};\n    int CRASH_COMPILATION_IF_MISTAKE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> valid;\n        PACKED_HASH_DTYPE value;\n    } XBAR_DTYPE;\n    typedef enum {\n        WR_FEEDBACK,\n        WR_OUTPUT\n    } RATEMON_MODE;\n    XBAR_DTYPE xbar[(8) /* each sub bv is further partitioned into this chunks*/];\n#pragma HLS ARRAY_PARTITION variable=xbar dim=0 complete\n    ap_uint<INPUT_IDX_BITWIDTH> min_output_idx[(5)];\n#pragma HLS ARRAY_PARTITION variable=min_output_idx dim=0 complete\n    ap_uint<BIT_BITWIDTH> idx_tracker[(5)][(8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/];\n#pragma HLS ARRAY_PARTITION variable=idx_tracker dim=0 complete\n    INIT_LOOP:\n    for (int i = 0; i < (8) /* each sub bv is further partitioned into this chunks*/; ++i) {\n        xbar[i].valid = 0;\n        writes_per_partition[i] = 0;\n    }\n    INIT_LOOP_2:\n    for (int i = 0; i < (5); ++i) {\n        min_output_idx[i] = 0;\n        for (int j = 0; j < (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; ++j) {\n            idx_tracker[i][j] = 0;\n        }\n    }\n    MAIN_LOOP:\n    while (\n            writes_per_partition[0] +\n            writes_per_partition[1] +\n            writes_per_partition[2] +\n            writes_per_partition[3] +\n            writes_per_partition[4] +\n            writes_per_partition[5] +\n            writes_per_partition[6] +\n            writes_per_partition[7]\n                                < WRITE_STOP_COUNT)\n    {\n#pragma HLS PIPELINE II=1\n        RATEMON_FEEDBACK_DTYPE feedback;\n        RD_INPUTS:\n        for (int partition_idx = 0; partition_idx < (8) /* each sub bv is further partitioned into this chunks*/; ++partition_idx) {\n            ap_uint<INPUT_IDX_BITWIDTH> cur_input_idx;\n            ap_uint<STRM_IDX_BITWIDTH> cur_strm_idx;\n            METADATA_DTYPE cur_metadata;\n            if (xbar[partition_idx].valid == 0 &&\n                !arb_stream_in[partition_idx].empty()\n            ){\n                xbar[partition_idx].valid = 1;\n                xbar[partition_idx].value = arb_stream_in[partition_idx].read();\n            }\n        }\n        ///////////////////////\n        // WR_OUTPUTS:\n        ///////////////////////\n        for (int sidx = 0; sidx < (5); ++sidx) { int offset = (xbar[0].value.md.iidx) % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (xbar[0].valid && xbar[0].value.md.sidx == sidx && !arb_stream_out[0].full()) { xbar[0].valid = 0; arb_stream_out[0].write(xbar[0].value); idx_tracker[sidx][offset] = 1; writes_per_partition[0]++; break; } }\n        for (int sidx = 0; sidx < (5); ++sidx) { int offset = (xbar[1].value.md.iidx) % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (xbar[1].valid && xbar[1].value.md.sidx == sidx && !arb_stream_out[1].full()) { xbar[1].valid = 0; arb_stream_out[1].write(xbar[1].value); idx_tracker[sidx][offset] = 1; writes_per_partition[1]++; break; } }\n        for (int sidx = 0; sidx < (5); ++sidx) { int offset = (xbar[2].value.md.iidx) % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (xbar[2].valid && xbar[2].value.md.sidx == sidx && !arb_stream_out[2].full()) { xbar[2].valid = 0; arb_stream_out[2].write(xbar[2].value); idx_tracker[sidx][offset] = 1; writes_per_partition[2]++; break; } }\n        for (int sidx = 0; sidx < (5); ++sidx) { int offset = (xbar[3].value.md.iidx) % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (xbar[3].valid && xbar[3].value.md.sidx == sidx && !arb_stream_out[3].full()) { xbar[3].valid = 0; arb_stream_out[3].write(xbar[3].value); idx_tracker[sidx][offset] = 1; writes_per_partition[3]++; break; } }\n        for (int sidx = 0; sidx < (5); ++sidx) { int offset = (xbar[4].value.md.iidx) % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (xbar[4].valid && xbar[4].value.md.sidx == sidx && !arb_stream_out[4].full()) { xbar[4].valid = 0; arb_stream_out[4].write(xbar[4].value); idx_tracker[sidx][offset] = 1; writes_per_partition[4]++; break; } }\n        for (int sidx = 0; sidx < (5); ++sidx) { int offset = (xbar[5].value.md.iidx) % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (xbar[5].valid && xbar[5].value.md.sidx == sidx && !arb_stream_out[5].full()) { xbar[5].valid = 0; arb_stream_out[5].write(xbar[5].value); idx_tracker[sidx][offset] = 1; writes_per_partition[5]++; break; } }\n        for (int sidx = 0; sidx < (5); ++sidx) { int offset = (xbar[6].value.md.iidx) % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (xbar[6].valid && xbar[6].value.md.sidx == sidx && !arb_stream_out[6].full()) { xbar[6].valid = 0; arb_stream_out[6].write(xbar[6].value); idx_tracker[sidx][offset] = 1; writes_per_partition[6]++; break; } }\n        for (int sidx = 0; sidx < (5); ++sidx) { int offset = (xbar[7].value.md.iidx) % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (xbar[7].valid && xbar[7].value.md.sidx == sidx && !arb_stream_out[7].full()) { xbar[7].valid = 0; arb_stream_out[7].write(xbar[7].value); idx_tracker[sidx][offset] = 1; writes_per_partition[7]++; break; } }\n        ///////////////////////\n        // UPDATE_IDCES:\n        ///////////////////////\n        int shuf_idx0 = (min_output_idx[0] + 1) % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (idx_tracker[0][shuf_idx0] == 1) { min_output_idx[0] += 1; idx_tracker[0][shuf_idx0] = 0; } /*#ifdef __DO_DEBUG_PRINTS__                    //printf(\"ARBITER RATEMON %d %c kp%d - Updating min_output_idx[%d]=%d\\n\",                   //        arb_idx,                  //        ratemon_ID,                   //        kp_idx,                   //        STM,                  //        min_output_idx[STM].to_int()                  //);                    //#endif    \n*/ int shuf_idx1 = (min_output_idx[1] + 1) % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (idx_tracker[1][shuf_idx1] == 1) { min_output_idx[1] += 1; idx_tracker[1][shuf_idx1] = 0; } /*#ifdef __DO_DEBUG_PRINTS__                    //printf(\"ARBITER RATEMON %d %c kp%d - Updating min_output_idx[%d]=%d\\n\",                   //        arb_idx,                  //        ratemon_ID,                   //        kp_idx,                   //        STM,                  //        min_output_idx[STM].to_int()                  //);                    //#endif    \n*/ int shuf_idx2 = (min_output_idx[2] + 1) % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (idx_tracker[2][shuf_idx2] == 1) { min_output_idx[2] += 1; idx_tracker[2][shuf_idx2] = 0; } /*#ifdef __DO_DEBUG_PRINTS__                    //printf(\"ARBITER RATEMON %d %c kp%d - Updating min_output_idx[%d]=%d\\n\",                   //        arb_idx,                  //        ratemon_ID,                   //        kp_idx,                   //        STM,                  //        min_output_idx[STM].to_int()                  //);                    //#endif    \n*/ int shuf_idx3 = (min_output_idx[3] + 1) % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (idx_tracker[3][shuf_idx3] == 1) { min_output_idx[3] += 1; idx_tracker[3][shuf_idx3] = 0; } /*#ifdef __DO_DEBUG_PRINTS__                    //printf(\"ARBITER RATEMON %d %c kp%d - Updating min_output_idx[%d]=%d\\n\",                   //        arb_idx,                  //        ratemon_ID,                   //        kp_idx,                   //        STM,                  //        min_output_idx[STM].to_int()                  //);                    //#endif    \n*/ int shuf_idx4 = (min_output_idx[4] + 1) % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (idx_tracker[4][shuf_idx4] == 1) { min_output_idx[4] += 1; idx_tracker[4][shuf_idx4] = 0; } /*#ifdef __DO_DEBUG_PRINTS__                    //printf(\"ARBITER RATEMON %d %c kp%d - Updating min_output_idx[%d]=%d\\n\",                   //        arb_idx,                  //        ratemon_ID,                   //        kp_idx,                   //        STM,                  //        min_output_idx[STM].to_int()                  //);                    //#endif    \n*/\n        WRITE_FEEDBACK:\n        /* For the ratemonitors NOT in the last level, we dont\n         * have the data from all 4 streams. So dont attempt to ratelimit\n         * based on data we cant get.\n         */\n        feedback.strm0_out_idx = min_output_idx[0];\n        feedback.strm1_out_idx = min_output_idx[1];\n        feedback.strm2_out_idx = min_output_idx[2];\n        feedback.strm3_out_idx = min_output_idx[3];\n        feedback.strm4_out_idx = min_output_idx[4];\n        for (int i = 0; i < ((5) - 1); ++i) {\n            fdbk_stream_0[i].try_write(feedback);\n            fdbk_stream_1[i].try_write(feedback);\n            fdbk_stream_2[i].try_write(feedback);\n            fdbk_stream_3[i].try_write(feedback);\n            fdbk_stream_4[i].try_write(feedback);\n            fdbk_stream_5[i].try_write(feedback);\n            fdbk_stream_6[i].try_write(feedback);\n            fdbk_stream_7[i].try_write(feedback);\n        }\n    }\n}\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n;\n",
            "level": "lower",
            "target": "hls",
            "vendor": "xilinx"
        },
        "bloom_hier_arbiter_atom": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n){\n\n\n\n\n#pragma HLS disaggregate variable = ratemon_stream\n#pragma HLS interface ap_fifo port = ratemon_stream._\n#pragma HLS aggregate variable = ratemon_stream._ bit\n#pragma HLS interface ap_fifo port = ratemon_stream._peek\n#pragma HLS aggregate variable = ratemon_stream._peek bit\nvoid(ratemon_stream._.empty());\nvoid(ratemon_stream._peek.empty());\n\n#pragma HLS disaggregate variable = in_stream0\n#pragma HLS interface ap_fifo port = in_stream0._\n#pragma HLS aggregate variable = in_stream0._ bit\n#pragma HLS interface ap_fifo port = in_stream0._peek\n#pragma HLS aggregate variable = in_stream0._peek bit\nvoid(in_stream0._.empty());\nvoid(in_stream0._peek.empty());\n\n#pragma HLS disaggregate variable = in_stream1\n#pragma HLS interface ap_fifo port = in_stream1._\n#pragma HLS aggregate variable = in_stream1._ bit\n#pragma HLS interface ap_fifo port = in_stream1._peek\n#pragma HLS aggregate variable = in_stream1._peek bit\nvoid(in_stream1._.empty());\nvoid(in_stream1._peek.empty());\n\n#pragma HLS disaggregate variable = out_stream\n#pragma HLS interface ap_fifo port = out_stream._\n#pragma HLS aggregate variable = out_stream._ bit\nvoid(out_stream._.full());\n\n    typedef struct {\n        ap_uint<1> valid;\n        PACKED_HASH_DTYPE value;\n    } XBAR_DTYPE;\n    XBAR_DTYPE xbar[2];\n#pragma HLS ARRAY_PARTITION variable=xbar dim=0 complete\n    RATEMON_FEEDBACK_DTYPE feedback;\n    ap_uint<INPUT_IDX_BITWIDTH> min_output_idx_s0 = 0;\n    ap_uint<INPUT_IDX_BITWIDTH> min_output_idx_s1 = 0;\n    ap_uint<INPUT_IDX_BITWIDTH> min_output_idx_s2 = 0;\n    ap_uint<INPUT_IDX_BITWIDTH> min_output_idx_s3 = 0;\n    ap_uint<INPUT_IDX_BITWIDTH> min_output_idx_s4 = 0;\n    /* Initialize for SW_EMU... but will this guaranteed work for HW builds?\n     * It might not be needed for HW builds because each xbar entry should just\n     * be invalidated anyways, after writing.\n     */\n    INIT_LOOP:\n    for (int i = 0; i < 2; ++i) {\n        xbar[i].valid = 0;\n    }\n    MAIN_LOOP:\n    while (1) {\n#pragma HLS PIPELINE II=1\n        RATEMON_LOGIC:\n        if (!ratemon_stream.empty()) {\n            feedback = ratemon_stream.read();\n    // Manually unroll the min_output_idx logic, to reduce latency within the atoms.\n    // With only one variable this takes one more cycle.\n            min_output_idx_s0 = feedback.strm0_out_idx;\n            min_output_idx_s1 = feedback.strm1_out_idx;\n            min_output_idx_s2 = feedback.strm2_out_idx;\n            min_output_idx_s3 = feedback.strm3_out_idx;\n            min_output_idx_s4 = feedback.strm4_out_idx;\n        }\n        RD_LOGIC:\n        if (xbar[0].valid == 1) {\n            // Dont overwrite it\n        }\n        else if (!in_stream0.empty()) {\n            PACKED_HASH_DTYPE packed_val = in_stream0.read();\n            xbar[0].value = packed_val;\n            xbar[0].valid = 1;\n        }\n        if (xbar[1].valid == 1) {\n            // Dont overwrite it\n        }\n        else if (!in_stream1.empty()) {\n            PACKED_HASH_DTYPE packed_val = in_stream1.read();\n            xbar[1].value = packed_val;\n            xbar[1].valid = 1;\n        }\n        WR_LOGIC:\n        int valid_idxes = 0;\n        int allowed_idx_s0 = min_output_idx_s0 + ((8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/);\n        int allowed_idx_s1 = min_output_idx_s1 + ((8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/);\n        int allowed_idx_s2 = min_output_idx_s2 + ((8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/);\n        int allowed_idx_s3 = min_output_idx_s3 + ((8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/);\n        int allowed_idx_s4 = min_output_idx_s4 + ((8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/);\n        if (xbar[0].valid &&\n            xbar[0].value.md.iidx <= allowed_idx_s0 &&\n            xbar[0].value.md.iidx <= allowed_idx_s1 &&\n            xbar[0].value.md.iidx <= allowed_idx_s2 &&\n            xbar[0].value.md.iidx <= allowed_idx_s3 &&\n            xbar[0].value.md.iidx <= allowed_idx_s4\n        ) { valid_idxes += 1; }\n        if (xbar[1].valid &&\n            xbar[1].value.md.iidx <= allowed_idx_s0 &&\n            xbar[1].value.md.iidx <= allowed_idx_s1 &&\n            xbar[1].value.md.iidx <= allowed_idx_s2 &&\n            xbar[1].value.md.iidx <= allowed_idx_s3 &&\n            xbar[1].value.md.iidx <= allowed_idx_s4\n        ) { valid_idxes += 2; }\n        if (valid_idxes == 3) {\n            if (xbar[1].value.md.iidx <= xbar[0].value.md.iidx) {\n                if (out_stream.try_write(xbar[1].value)) {\n                    xbar[1].valid = 0;\n                }\n            }\n            else {\n                if (out_stream.try_write(xbar[0].value)) {\n                    xbar[0].valid = 0;\n                }\n            }\n        }\n        else if (valid_idxes == 2) {\n            if (out_stream.try_write(xbar[1].value)) {\n                xbar[1].valid = 0;\n            }\n        }\n        else if (valid_idxes == 1) {\n            if (out_stream.try_write(xbar[0].value)) {\n                xbar[0].valid = 0;\n            }\n        }\n    }\n}\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n;\n",
            "level": "lower",
            "target": "hls",
            "vendor": "xilinx"
        },
        "computeHash_Computer": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n){\n\n\n\n#pragma HLS disaggregate variable = key_stream\n#pragma HLS interface ap_fifo port = key_stream._\n#pragma HLS aggregate variable = key_stream._ bit\n#pragma HLS interface ap_fifo port = key_stream._peek\n#pragma HLS aggregate variable = key_stream._peek bit\nvoid(key_stream._.empty());\nvoid(key_stream._peek.empty());\n\n#pragma HLS disaggregate variable = hash_stream\n#pragma HLS interface ap_fifo port = hash_stream._\n#pragma HLS aggregate variable = hash_stream._ bit\nvoid(hash_stream._.full());\n\n    int module_idx = stm_idx*(5) + hash_idx;\n    const int WRITE_STOP_COUNT = KEYPAIRS_PER_STM;\n    int total_num_writes = 0;\n    int input_idx = 0;\n    MAIN_LOOP:\n    while ( total_num_writes < WRITE_STOP_COUNT){\n#pragma HLS PIPELINE II=1\n        ap_uint<(32)> key = key_stream.read();\n        uint32_t hash = MurmurHash3_x86_32(key, hash_idx);\n        hash %= ( (BV_LENGTH-1)/(5) + 1);\n        hash_stream.write(hash);\n        total_num_writes++;\n    }\n}\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n;\n",
            "level": "lower",
            "target": "hls",
            "vendor": "xilinx"
        },
        "computeHash_Feeder": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n){\n\n\n#pragma HLS disaggregate variable = key_in_stream\n#pragma HLS interface ap_fifo port = key_in_stream._\n#pragma HLS aggregate variable = key_in_stream._ bit\n#pragma HLS interface ap_fifo port = key_in_stream._peek\n#pragma HLS aggregate variable = key_in_stream._peek bit\nvoid(key_in_stream._.empty());\nvoid(key_in_stream._peek.empty());\n\n#pragma HLS disaggregate variable = key_out_stream\n#pragma HLS array_partition variable = key_out_stream complete\n#pragma HLS interface ap_fifo port = key_out_stream[0]._\n#pragma HLS aggregate variable = key_out_stream[0]._ bit\nvoid(key_out_stream[0]._.full());\n#pragma HLS interface ap_fifo port = key_out_stream[1]._\n#pragma HLS aggregate variable = key_out_stream[1]._ bit\nvoid(key_out_stream[1]._.full());\n#pragma HLS interface ap_fifo port = key_out_stream[2]._\n#pragma HLS aggregate variable = key_out_stream[2]._ bit\nvoid(key_out_stream[2]._.full());\n#pragma HLS interface ap_fifo port = key_out_stream[3]._\n#pragma HLS aggregate variable = key_out_stream[3]._ bit\nvoid(key_out_stream[3]._.full());\n#pragma HLS interface ap_fifo port = key_out_stream[4]._\n#pragma HLS aggregate variable = key_out_stream[4]._ bit\nvoid(key_out_stream[4]._.full());\n\n    const int READ_STOP_COUNT = KEYPAIRS_PER_STM;\n    const int WRITE_STOP_COUNT = KEYPAIRS_PER_STM*(5);\n    int total_num_reads = 0;\n    int total_num_writes = 0;\n    int input_idx = 0;\n    ap_uint<(32)> key;\n    bool key_written[(5)];\n#pragma HLS ARRAY_PARTITION variable=key_written dim=0 complete\n    INIT_KEY_WRITTEN:\n    for (int i = 0; i < (5); ++i) {\n        key_written[i] = 1;\n    }\n    while (total_num_reads < READ_STOP_COUNT ||\n            total_num_writes < WRITE_STOP_COUNT\n    ) {\n#pragma HLS PIPELINE II=1\n        bool do_read = 1;\n        HASH_RD_LOOP:\n        for(int hash_idx = 0; hash_idx < (5); ++hash_idx){\n            if (key_written[hash_idx] == 0) {\n                do_read = 0;\n            }\n        }\n        if (do_read &&\n            input_idx < KEYPAIRS_PER_STM\n        ){\n            ///////////////////////////////////\n            // READ LOGIC:\n            // NOTE: This blocking read is ok because we only have one input stream\n            key = key_in_stream.read();\n            total_num_reads++;\n            input_idx++;\n            for (int j = 0; j < (5); ++j) {\n                key_written[j] = 0;\n            }\n        }\n        ///////////////////////////////////\n        // WRITE LOGIC:\n        for (int hash_idx = 0; hash_idx < (5); ++hash_idx) {\n#pragma HLS UNROLL\n            if (key_written[hash_idx] == 0) {\n                if (key_out_stream[hash_idx].try_write(key)) {\n                    total_num_writes++;\n                    key_written[hash_idx] = 1;\n                }\n            }\n        }\n    }\n    return;\n}\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n;\n",
            "level": "lower",
            "target": "hls",
            "vendor": "xilinx"
        },
        "loadBV": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    tapa::async_mmap<BV_LOAD_DTYPE> & input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n){\n#pragma HLS disaggregate variable = input_bv\n#pragma HLS interface ap_fifo port = input_bv.read_addr._\n#pragma HLS aggregate variable = input_bv.read_addr._  bit\n#pragma HLS interface ap_fifo port = input_bv.read_data._\n#pragma HLS aggregate variable = input_bv.read_data._  bit\n#pragma HLS interface ap_fifo port = input_bv.write_addr._\n#pragma HLS aggregate variable = input_bv.write_addr._  bit\n#pragma HLS interface ap_fifo port = input_bv.write_data._\n#pragma HLS aggregate variable = input_bv.write_data._  bit\n#pragma HLS interface ap_fifo port = input_bv.write_resp._\n#pragma HLS aggregate variable = input_bv.write_resp._  bit\n#pragma HLS disaggregate variable = input_bv .read_data\n#pragma HLS interface ap_fifo port = input_bv.read_data._peek\n#pragma HLS aggregate variable = input_bv.read_data._peek bit\n#pragma HLS disaggregate variable = input_bv .write_resp\n#pragma HLS interface ap_fifo port = input_bv.write_resp._peek\n#pragma HLS aggregate variable = input_bv.write_resp._peek bit\nvoid(input_bv.read_addr._.full());\nvoid(input_bv.read_data._.empty());\nvoid(input_bv.read_data._peek.empty());\nvoid(input_bv.write_addr._.full());\nvoid(input_bv.write_data._.full());\nvoid(input_bv.write_resp._.empty());\nvoid(input_bv.write_resp._peek.empty());\n\n#pragma HLS disaggregate variable = bv_load_stream_0\n#pragma HLS interface ap_fifo port = bv_load_stream_0._\n#pragma HLS aggregate variable = bv_load_stream_0._ bit\nvoid(bv_load_stream_0._.full());\n\n#pragma HLS disaggregate variable = bv_load_stream_1\n#pragma HLS interface ap_fifo port = bv_load_stream_1._\n#pragma HLS aggregate variable = bv_load_stream_1._ bit\nvoid(bv_load_stream_1._.full());\n\n#pragma HLS disaggregate variable = bv_load_stream_2\n#pragma HLS interface ap_fifo port = bv_load_stream_2._\n#pragma HLS aggregate variable = bv_load_stream_2._ bit\nvoid(bv_load_stream_2._.full());\n\n#pragma HLS disaggregate variable = bv_load_stream_3\n#pragma HLS interface ap_fifo port = bv_load_stream_3._\n#pragma HLS aggregate variable = bv_load_stream_3._ bit\nvoid(bv_load_stream_3._.full());\n\n#pragma HLS disaggregate variable = bv_load_stream_4\n#pragma HLS interface ap_fifo port = bv_load_stream_4._\n#pragma HLS aggregate variable = bv_load_stream_4._ bit\nvoid(bv_load_stream_4._.full());\n\n    int section_idx = 0;\n    BV_LOAD_DTYPE cur_bv_val;\n    for (int i_req = 0, i_resp = 0;\n            i_resp < ( (BV_LENGTH-1)/(BV_PACKED_BITWIDTH * (5)) + 1); )\n    {\n#pragma HLS PIPELINE II=1\n        if (i_req < ( (BV_LENGTH-1)/(BV_PACKED_BITWIDTH * (5)) + 1) && input_bv.read_addr.try_write(i_req)) {\n            ++i_req;\n        }\n        if (!input_bv.read_data.empty()) {\n            cur_bv_val = input_bv.read_data.read(nullptr);\n            bv_load_stream_0.write(cur_bv_val.section0);\n            bv_load_stream_1.write(cur_bv_val.section1);\n            bv_load_stream_2.write(cur_bv_val.section2);\n            bv_load_stream_3.write(cur_bv_val.section3);\n            bv_load_stream_4.write(cur_bv_val.section4);\n            ++i_resp;\n        }\n    }\n    return;\n}\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n;\n",
            "level": "lower",
            "target": "hls",
            "vendor": "xilinx"
        },
        "loadKey": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        tapa::async_mmap<LOAD_DTYPE> & key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n){\n#pragma HLS disaggregate variable = key_in\n#pragma HLS interface ap_fifo port = key_in.read_addr._\n#pragma HLS aggregate variable = key_in.read_addr._  bit\n#pragma HLS interface ap_fifo port = key_in.read_data._\n#pragma HLS aggregate variable = key_in.read_data._  bit\n#pragma HLS interface ap_fifo port = key_in.write_addr._\n#pragma HLS aggregate variable = key_in.write_addr._  bit\n#pragma HLS interface ap_fifo port = key_in.write_data._\n#pragma HLS aggregate variable = key_in.write_data._  bit\n#pragma HLS interface ap_fifo port = key_in.write_resp._\n#pragma HLS aggregate variable = key_in.write_resp._  bit\n#pragma HLS disaggregate variable = key_in .read_data\n#pragma HLS interface ap_fifo port = key_in.read_data._peek\n#pragma HLS aggregate variable = key_in.read_data._peek bit\n#pragma HLS disaggregate variable = key_in .write_resp\n#pragma HLS interface ap_fifo port = key_in.write_resp._peek\n#pragma HLS aggregate variable = key_in.write_resp._peek bit\nvoid(key_in.read_addr._.full());\nvoid(key_in.read_data._.empty());\nvoid(key_in.read_data._peek.empty());\nvoid(key_in.write_addr._.full());\nvoid(key_in.write_data._.full());\nvoid(key_in.write_resp._.empty());\nvoid(key_in.write_resp._peek.empty());\n\n#pragma HLS disaggregate variable = key_stream_kp0\n#pragma HLS array_partition variable = key_stream_kp0 complete\n#pragma HLS interface ap_fifo port = key_stream_kp0[0]._\n#pragma HLS aggregate variable = key_stream_kp0[0]._ bit\nvoid(key_stream_kp0[0]._.full());\n#pragma HLS interface ap_fifo port = key_stream_kp0[1]._\n#pragma HLS aggregate variable = key_stream_kp0[1]._ bit\nvoid(key_stream_kp0[1]._.full());\n#pragma HLS interface ap_fifo port = key_stream_kp0[2]._\n#pragma HLS aggregate variable = key_stream_kp0[2]._ bit\nvoid(key_stream_kp0[2]._.full());\n#pragma HLS interface ap_fifo port = key_stream_kp0[3]._\n#pragma HLS aggregate variable = key_stream_kp0[3]._ bit\nvoid(key_stream_kp0[3]._.full());\n#pragma HLS interface ap_fifo port = key_stream_kp0[4]._\n#pragma HLS aggregate variable = key_stream_kp0[4]._ bit\nvoid(key_stream_kp0[4]._.full());\n\n#pragma HLS disaggregate variable = key_stream_kp1\n#pragma HLS array_partition variable = key_stream_kp1 complete\n#pragma HLS interface ap_fifo port = key_stream_kp1[0]._\n#pragma HLS aggregate variable = key_stream_kp1[0]._ bit\nvoid(key_stream_kp1[0]._.full());\n#pragma HLS interface ap_fifo port = key_stream_kp1[1]._\n#pragma HLS aggregate variable = key_stream_kp1[1]._ bit\nvoid(key_stream_kp1[1]._.full());\n#pragma HLS interface ap_fifo port = key_stream_kp1[2]._\n#pragma HLS aggregate variable = key_stream_kp1[2]._ bit\nvoid(key_stream_kp1[2]._.full());\n#pragma HLS interface ap_fifo port = key_stream_kp1[3]._\n#pragma HLS aggregate variable = key_stream_kp1[3]._ bit\nvoid(key_stream_kp1[3]._.full());\n#pragma HLS interface ap_fifo port = key_stream_kp1[4]._\n#pragma HLS aggregate variable = key_stream_kp1[4]._ bit\nvoid(key_stream_kp1[4]._.full());\n\n    LOAD_DTYPE cur_load;\n    for (int i_req = 0, i_resp = 0;\n            i_resp < KEYPAIRS_PER_STM; )\n    {\n#pragma HLS PIPELINE II=1\n        if (i_req < KEYPAIRS_PER_STM && key_in.read_addr.try_write(i_req)) {\n            ++i_req;\n        }\n        if (!key_in.read_data.empty()) {\n            cur_load = key_in.read_data.read(nullptr);\n            key_stream_kp0[0].write(cur_load.s0_k0); key_stream_kp1[0].write(cur_load.s0_k1);\n            key_stream_kp0[1].write(cur_load.s1_k0); key_stream_kp1[1].write(cur_load.s1_k1);\n            key_stream_kp0[2].write(cur_load.s2_k0); key_stream_kp1[2].write(cur_load.s2_k1);\n            key_stream_kp0[3].write(cur_load.s3_k0); key_stream_kp1[3].write(cur_load.s3_k1);\n            key_stream_kp0[4].write(cur_load.s4_k0); key_stream_kp1[4].write(cur_load.s4_k1);\n            ++i_resp;\n        }\n    }\n    return;\n}\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n;\n",
            "level": "lower",
            "target": "hls",
            "vendor": "xilinx"
        },
        "packOutput": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) {\n\n\n#pragma HLS disaggregate variable = aggregate_stream\n#pragma HLS interface ap_fifo port = aggregate_stream._\n#pragma HLS aggregate variable = aggregate_stream._ bit\n#pragma HLS interface ap_fifo port = aggregate_stream._peek\n#pragma HLS aggregate variable = aggregate_stream._peek bit\nvoid(aggregate_stream._.empty());\nvoid(aggregate_stream._peek.empty());\n\n#pragma HLS disaggregate variable = packed_outputs_stream\n#pragma HLS interface ap_fifo port = packed_outputs_stream._\n#pragma HLS aggregate variable = packed_outputs_stream._ bit\nvoid(packed_outputs_stream._.full());\n\n    int pk_idx;\n    ap_uint<((32))> packed;\n    ap_uint<BIT_BITWIDTH> val;\n    for (int i = 0; i < KEYPAIRS_PER_STM; ++i) {\n        pk_idx = i % ((32));\n        val = aggregate_stream.read();\n        packed.range(pk_idx, pk_idx) = val.range(0, 0);\n        if (pk_idx == ((32)) - 1){\n            packed_outputs_stream.write(packed);\n            packed = 0;\n        }\n    }\n}\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n;\n",
            "level": "lower",
            "target": "hls",
            "vendor": "xilinx"
        },
        "queryResult_per_hash": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) {\n\n#pragma HLS disaggregate variable = bv_load_stream\n#pragma HLS interface ap_fifo port = bv_load_stream._\n#pragma HLS aggregate variable = bv_load_stream._ bit\n#pragma HLS interface ap_fifo port = bv_load_stream._peek\n#pragma HLS aggregate variable = bv_load_stream._peek bit\nvoid(bv_load_stream._.empty());\nvoid(bv_load_stream._peek.empty());\n\n#pragma HLS disaggregate variable = bv_lookup_stream_kp0\n#pragma HLS array_partition variable = bv_lookup_stream_kp0 complete\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[0]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[0]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[0]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[0]._peek bit\nvoid(bv_lookup_stream_kp0[0]._.empty());\nvoid(bv_lookup_stream_kp0[0]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[1]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[1]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[1]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[1]._peek bit\nvoid(bv_lookup_stream_kp0[1]._.empty());\nvoid(bv_lookup_stream_kp0[1]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[2]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[2]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[2]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[2]._peek bit\nvoid(bv_lookup_stream_kp0[2]._.empty());\nvoid(bv_lookup_stream_kp0[2]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[3]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[3]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[3]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[3]._peek bit\nvoid(bv_lookup_stream_kp0[3]._.empty());\nvoid(bv_lookup_stream_kp0[3]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[4]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[4]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[4]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[4]._peek bit\nvoid(bv_lookup_stream_kp0[4]._.empty());\nvoid(bv_lookup_stream_kp0[4]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[5]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[5]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[5]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[5]._peek bit\nvoid(bv_lookup_stream_kp0[5]._.empty());\nvoid(bv_lookup_stream_kp0[5]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[6]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[6]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[6]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[6]._peek bit\nvoid(bv_lookup_stream_kp0[6]._.empty());\nvoid(bv_lookup_stream_kp0[6]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[7]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[7]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp0[7]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp0[7]._peek bit\nvoid(bv_lookup_stream_kp0[7]._.empty());\nvoid(bv_lookup_stream_kp0[7]._peek.empty());\n\n#pragma HLS disaggregate variable = bv_lookup_stream_kp1\n#pragma HLS array_partition variable = bv_lookup_stream_kp1 complete\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[0]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[0]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[0]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[0]._peek bit\nvoid(bv_lookup_stream_kp1[0]._.empty());\nvoid(bv_lookup_stream_kp1[0]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[1]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[1]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[1]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[1]._peek bit\nvoid(bv_lookup_stream_kp1[1]._.empty());\nvoid(bv_lookup_stream_kp1[1]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[2]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[2]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[2]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[2]._peek bit\nvoid(bv_lookup_stream_kp1[2]._.empty());\nvoid(bv_lookup_stream_kp1[2]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[3]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[3]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[3]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[3]._peek bit\nvoid(bv_lookup_stream_kp1[3]._.empty());\nvoid(bv_lookup_stream_kp1[3]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[4]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[4]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[4]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[4]._peek bit\nvoid(bv_lookup_stream_kp1[4]._.empty());\nvoid(bv_lookup_stream_kp1[4]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[5]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[5]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[5]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[5]._peek bit\nvoid(bv_lookup_stream_kp1[5]._.empty());\nvoid(bv_lookup_stream_kp1[5]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[6]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[6]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[6]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[6]._peek bit\nvoid(bv_lookup_stream_kp1[6]._.empty());\nvoid(bv_lookup_stream_kp1[6]._peek.empty());\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[7]._\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[7]._ bit\n#pragma HLS interface ap_fifo port = bv_lookup_stream_kp1[7]._peek\n#pragma HLS aggregate variable = bv_lookup_stream_kp1[7]._peek bit\nvoid(bv_lookup_stream_kp1[7]._.empty());\nvoid(bv_lookup_stream_kp1[7]._peek.empty());\n\n#pragma HLS disaggregate variable = query_bv_packed_stream_kp0\n#pragma HLS array_partition variable = query_bv_packed_stream_kp0 complete\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp0[0]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp0[0]._ bit\nvoid(query_bv_packed_stream_kp0[0]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp0[1]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp0[1]._ bit\nvoid(query_bv_packed_stream_kp0[1]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp0[2]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp0[2]._ bit\nvoid(query_bv_packed_stream_kp0[2]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp0[3]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp0[3]._ bit\nvoid(query_bv_packed_stream_kp0[3]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp0[4]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp0[4]._ bit\nvoid(query_bv_packed_stream_kp0[4]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp0[5]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp0[5]._ bit\nvoid(query_bv_packed_stream_kp0[5]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp0[6]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp0[6]._ bit\nvoid(query_bv_packed_stream_kp0[6]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp0[7]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp0[7]._ bit\nvoid(query_bv_packed_stream_kp0[7]._.full());\n\n#pragma HLS disaggregate variable = query_bv_packed_stream_kp1\n#pragma HLS array_partition variable = query_bv_packed_stream_kp1 complete\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp1[0]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp1[0]._ bit\nvoid(query_bv_packed_stream_kp1[0]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp1[1]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp1[1]._ bit\nvoid(query_bv_packed_stream_kp1[1]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp1[2]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp1[2]._ bit\nvoid(query_bv_packed_stream_kp1[2]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp1[3]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp1[3]._ bit\nvoid(query_bv_packed_stream_kp1[3]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp1[4]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp1[4]._ bit\nvoid(query_bv_packed_stream_kp1[4]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp1[5]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp1[5]._ bit\nvoid(query_bv_packed_stream_kp1[5]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp1[6]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp1[6]._ bit\nvoid(query_bv_packed_stream_kp1[6]._.full());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream_kp1[7]._\n#pragma HLS aggregate variable = query_bv_packed_stream_kp1[7]._ bit\nvoid(query_bv_packed_stream_kp1[7]._.full());\n\n    const int MAX_NUM_WRITES = (5)*KEYS_PER_STM;\n    int num_writes = 0;\n    int num_reads = 0;\n    ap_uint<BV_PACKED_BITWIDTH> bv_buf_BRAMS[( ((8) /* each sub bv is further partitioned into this chunks*/-1)/2 + 1)][( (BV_LENGTH-1)/((5)*BV_PACKED_BITWIDTH*(8) /* each sub bv is further partitioned into this chunks*/) + 1)];\n#pragma HLS BIND_STORAGE variable=bv_buf_BRAMS type=RAM_T2P impl=bram\n#pragma HLS ARRAY_PARTITION variable=bv_buf_BRAMS dim=1 complete\n    ap_uint<BV_PACKED_BITWIDTH> bv_buf_URAMS[((8) /* each sub bv is further partitioned into this chunks*/ / 2)][( (BV_LENGTH-1)/((5)*BV_PACKED_BITWIDTH*(8) /* each sub bv is further partitioned into this chunks*/) + 1)];\n#pragma HLS BIND_STORAGE variable=bv_buf_URAMS type=RAM_T2P impl=uram\n#pragma HLS ARRAY_PARTITION variable=bv_buf_URAMS dim=1 complete\n    ap_uint<BV_PACKED_BITWIDTH> cur_bv_val;\n    typedef struct {\n        ap_uint<1> valid;\n        BV_PLUS_METADATA_PACKED_DTYPE data;\n    } TO_WRITE_DTYPE;\n    TO_WRITE_DTYPE bram_queried_vals_buf[( ((8) /* each sub bv is further partitioned into this chunks*/-1)/2 + 1)][2];\n#pragma HLS ARRAY_PARTITION variable=bram_queried_vals_buf dim=0 complete\n    TO_WRITE_DTYPE uram_queried_vals_buf[((8) /* each sub bv is further partitioned into this chunks*/ / 2)][2];\n#pragma HLS ARRAY_PARTITION variable=uram_queried_vals_buf dim=0 complete\n    INIT_BRAM_QUERIED_VALS_BUF:\n    for (int j = 0; j < ( ((8) /* each sub bv is further partitioned into this chunks*/-1)/2 + 1); ++j) {\n#pragma HLS UNROLL\n        bram_queried_vals_buf[j][0].valid=0;\n        bram_queried_vals_buf[j][1].valid=0;\n    }\n    INIT_URAM_QUERIED_VALS_BUF:\n    for (int j = 0; j < ((8) /* each sub bv is further partitioned into this chunks*/ / 2); ++j) {\n#pragma HLS UNROLL\n        uram_queried_vals_buf[j][0].valid=0;\n        uram_queried_vals_buf[j][1].valid=0;\n    }\n    LOAD_BV_VALUES:\n    for (int i = 0; i < ( (BV_LENGTH-1)/((5)*BV_PACKED_BITWIDTH) + 1); ++i) {\n#pragma HLS PIPELINE II=1\n        cur_bv_val = bv_load_stream.read();\n        int partition_idx = i/( (BV_LENGTH-1)/((5)*BV_PACKED_BITWIDTH*(8) /* each sub bv is further partitioned into this chunks*/) + 1);\n        int element_idx = i%( (BV_LENGTH-1)/((5)*BV_PACKED_BITWIDTH*(8) /* each sub bv is further partitioned into this chunks*/) + 1);\n        if (partition_idx < ( ((8) /* each sub bv is further partitioned into this chunks*/-1)/2 + 1)) {\n            bv_buf_BRAMS[partition_idx][element_idx] = cur_bv_val;\n        }\n        else {\n            bv_buf_URAMS[partition_idx-( ((8) /* each sub bv is further partitioned into this chunks*/-1)/2 + 1)][element_idx] = cur_bv_val;\n        }\n    }\n    PROCESS_QUERIES:\n    while (num_writes < MAX_NUM_WRITES){\n#pragma HLS PIPELINE II=1\n        BV_BRAM_PARTITION_LOOP:\n        for (int bram_partition_idx = 0; bram_partition_idx < ( ((8) /* each sub bv is further partitioned into this chunks*/-1)/2 + 1); ++bram_partition_idx) {\n#pragma HLS UNROLL\n            //////////////////////////////////////////////////////////\n            // READ LOGIC\n            // READ PORT 0\n            if (!bv_lookup_stream_kp0[bram_partition_idx].empty() &&\n                !bram_queried_vals_buf[bram_partition_idx][0].valid)\n            {\n                PACKED_HASH_DTYPE packed_hash;\n                METADATA_DTYPE cur_metadata;\n                ap_uint<HASHONLY_BITWIDTH> bv_lookup_idx;\n                ap_uint<BIT_BITWIDTH> cur_bv_val;\n                BV_PLUS_METADATA_PACKED_DTYPE data_to_write;\n                ap_uint<HASHONLY_BITWIDTH> bv_outer_idx;\n                ap_uint<HASHONLY_BITWIDTH> bv_inner_idx;\n                packed_hash = bv_lookup_stream_kp0[bram_partition_idx].read();\n                // Unpack the values\n                cur_metadata = packed_hash.md;\n                bv_lookup_idx = packed_hash.hash;\n                // Read the bitvector\n                bv_outer_idx = bv_lookup_idx/BV_PACKED_BITWIDTH;\n                bv_inner_idx = bv_lookup_idx%BV_PACKED_BITWIDTH;\n                cur_bv_val.range(0, 0) =\n                    bv_buf_BRAMS[bram_partition_idx][bv_outer_idx].range(bv_inner_idx, bv_inner_idx);\n                // Pack final payload\n                data_to_write.md = cur_metadata;\n                data_to_write.bv_val = cur_bv_val;\n                bram_queried_vals_buf[bram_partition_idx][0].valid = 1;\n                bram_queried_vals_buf[bram_partition_idx][0].data = data_to_write;\n            }\n            // READ PORT 1\n            if (!bv_lookup_stream_kp1[bram_partition_idx].empty() &&\n                !bram_queried_vals_buf[bram_partition_idx][1].valid)\n            {\n                PACKED_HASH_DTYPE packed_hash;\n                METADATA_DTYPE cur_metadata;\n                ap_uint<HASHONLY_BITWIDTH> bv_lookup_idx;\n                ap_uint<BIT_BITWIDTH> cur_bv_val;\n                BV_PLUS_METADATA_PACKED_DTYPE data_to_write;\n                ap_uint<HASHONLY_BITWIDTH> bv_outer_idx;\n                ap_uint<HASHONLY_BITWIDTH> bv_inner_idx;\n                packed_hash = bv_lookup_stream_kp1[bram_partition_idx].read();\n                // Unpack the values\n                cur_metadata = packed_hash.md;\n                bv_lookup_idx = packed_hash.hash;\n                // Read the bitvector\n                bv_outer_idx = bv_lookup_idx/BV_PACKED_BITWIDTH;\n                bv_inner_idx = bv_lookup_idx%BV_PACKED_BITWIDTH;\n                cur_bv_val.range(0, 0) =\n                    bv_buf_BRAMS[bram_partition_idx][bv_outer_idx].range(bv_inner_idx, bv_inner_idx);\n                // Pack final payload\n                data_to_write.md = cur_metadata;\n                data_to_write.bv_val = cur_bv_val;\n                bram_queried_vals_buf[bram_partition_idx][1].valid = 1;\n                bram_queried_vals_buf[bram_partition_idx][1].data = data_to_write;\n            }\n            //////////////////////////////////////////////////////////\n            // WRITE LOGIC\n            // WRITE PORT 0\n            if (bram_queried_vals_buf[bram_partition_idx][0].valid &&\n                query_bv_packed_stream_kp0[bram_partition_idx].try_write(\n                    bram_queried_vals_buf[bram_partition_idx][0].data\n                )\n            ) {\n                ++num_writes;\n                bram_queried_vals_buf[bram_partition_idx][0].valid = 0;\n            }\n            // WRITE PORT 1\n            if (bram_queried_vals_buf[bram_partition_idx][1].valid &&\n                query_bv_packed_stream_kp1[bram_partition_idx].try_write(\n                    bram_queried_vals_buf[bram_partition_idx][1].data\n                )\n            ) {\n                ++num_writes;\n                bram_queried_vals_buf[bram_partition_idx][1].valid = 0;\n            }\n        }\n        BV_URAM_PARTITION_LOOP:\n        for (int uram_partition_idx = 0; uram_partition_idx < ((8) /* each sub bv is further partitioned into this chunks*/ / 2); ++uram_partition_idx) {\n#pragma HLS UNROLL\n            //////////////////////////////////////////////////////////\n            // READ LOGIC\n            // READ PORT 0\n            if (!bv_lookup_stream_kp0[uram_partition_idx + ( ((8) /* each sub bv is further partitioned into this chunks*/-1)/2 + 1)].empty() &&\n                !uram_queried_vals_buf[uram_partition_idx][0].valid)\n            {\n                PACKED_HASH_DTYPE packed_hash;\n                METADATA_DTYPE cur_metadata;\n                ap_uint<HASHONLY_BITWIDTH> bv_lookup_idx;\n                ap_uint<BIT_BITWIDTH> cur_bv_val;\n                BV_PLUS_METADATA_PACKED_DTYPE data_to_write;\n                ap_uint<HASHONLY_BITWIDTH> bv_outer_idx;\n                ap_uint<HASHONLY_BITWIDTH> bv_inner_idx;\n                packed_hash = bv_lookup_stream_kp0[uram_partition_idx + ( ((8) /* each sub bv is further partitioned into this chunks*/-1)/2 + 1)].read();\n                // Unpack the values\n                cur_metadata = packed_hash.md;\n                bv_lookup_idx = packed_hash.hash;\n                // Read the bitvector\n                bv_outer_idx = bv_lookup_idx/BV_PACKED_BITWIDTH;\n                bv_inner_idx = bv_lookup_idx%BV_PACKED_BITWIDTH;\n                cur_bv_val.range(0, 0) =\n                    bv_buf_URAMS[uram_partition_idx][bv_outer_idx].range(bv_inner_idx, bv_inner_idx);\n                // Pack final payload\n                data_to_write.md = cur_metadata;\n                data_to_write.bv_val = cur_bv_val;\n                uram_queried_vals_buf[uram_partition_idx][0].valid = 1;\n                uram_queried_vals_buf[uram_partition_idx][0].data = data_to_write;\n            }\n            // READ PORT 1\n            if (!bv_lookup_stream_kp1[uram_partition_idx + ( ((8) /* each sub bv is further partitioned into this chunks*/-1)/2 + 1)].empty() &&\n                !uram_queried_vals_buf[uram_partition_idx][1].valid)\n            {\n                PACKED_HASH_DTYPE packed_hash;\n                METADATA_DTYPE cur_metadata;\n                ap_uint<HASHONLY_BITWIDTH> bv_lookup_idx;\n                ap_uint<BIT_BITWIDTH> cur_bv_val;\n                BV_PLUS_METADATA_PACKED_DTYPE data_to_write;\n                ap_uint<HASHONLY_BITWIDTH> bv_outer_idx;\n                ap_uint<HASHONLY_BITWIDTH> bv_inner_idx;\n                packed_hash = bv_lookup_stream_kp1[uram_partition_idx + ( ((8) /* each sub bv is further partitioned into this chunks*/-1)/2 + 1)].read();\n                // Unpack the values\n                cur_metadata = packed_hash.md;\n                bv_lookup_idx = packed_hash.hash;\n                // Read the bitvector\n                bv_outer_idx = bv_lookup_idx/BV_PACKED_BITWIDTH;\n                bv_inner_idx = bv_lookup_idx%BV_PACKED_BITWIDTH;\n                cur_bv_val.range(0, 0) =\n                    bv_buf_URAMS[uram_partition_idx][bv_outer_idx].range(bv_inner_idx, bv_inner_idx);\n                // Pack final payload\n                data_to_write.md = cur_metadata;\n                data_to_write.bv_val = cur_bv_val;\n                uram_queried_vals_buf[uram_partition_idx][1].valid = 1;\n                uram_queried_vals_buf[uram_partition_idx][1].data = data_to_write;\n            }\n            //////////////////////////////////////////////////////////\n            // WRITE LOGIC\n            // WRITE PORT 0\n            if (uram_queried_vals_buf[uram_partition_idx][0].valid &&\n                query_bv_packed_stream_kp0[uram_partition_idx + ( ((8) /* each sub bv is further partitioned into this chunks*/-1)/2 + 1)].try_write(\n                    uram_queried_vals_buf[uram_partition_idx][0].data\n                )\n            ) {\n                ++num_writes;\n                uram_queried_vals_buf[uram_partition_idx][0].valid = 0;\n            }\n            // WRITE PORT 1\n            if (uram_queried_vals_buf[uram_partition_idx][1].valid &&\n                query_bv_packed_stream_kp1[uram_partition_idx + ( ((8) /* each sub bv is further partitioned into this chunks*/-1)/2 + 1)].try_write(\n                    uram_queried_vals_buf[uram_partition_idx][1].data\n                )\n            ) {\n                ++num_writes;\n                uram_queried_vals_buf[uram_partition_idx][1].valid = 0;\n            }\n        }\n    }\n    return;\n}\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n;\n",
            "level": "lower",
            "target": "hls",
            "vendor": "xilinx"
        },
        "shuffle_TtoS_per_hash": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n){\n\n\n#pragma HLS disaggregate variable = query_bv_packed_stream\n#pragma HLS array_partition variable = query_bv_packed_stream complete\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[0]._\n#pragma HLS aggregate variable = query_bv_packed_stream[0]._ bit\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[0]._peek\n#pragma HLS aggregate variable = query_bv_packed_stream[0]._peek bit\nvoid(query_bv_packed_stream[0]._.empty());\nvoid(query_bv_packed_stream[0]._peek.empty());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[1]._\n#pragma HLS aggregate variable = query_bv_packed_stream[1]._ bit\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[1]._peek\n#pragma HLS aggregate variable = query_bv_packed_stream[1]._peek bit\nvoid(query_bv_packed_stream[1]._.empty());\nvoid(query_bv_packed_stream[1]._peek.empty());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[2]._\n#pragma HLS aggregate variable = query_bv_packed_stream[2]._ bit\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[2]._peek\n#pragma HLS aggregate variable = query_bv_packed_stream[2]._peek bit\nvoid(query_bv_packed_stream[2]._.empty());\nvoid(query_bv_packed_stream[2]._peek.empty());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[3]._\n#pragma HLS aggregate variable = query_bv_packed_stream[3]._ bit\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[3]._peek\n#pragma HLS aggregate variable = query_bv_packed_stream[3]._peek bit\nvoid(query_bv_packed_stream[3]._.empty());\nvoid(query_bv_packed_stream[3]._peek.empty());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[4]._\n#pragma HLS aggregate variable = query_bv_packed_stream[4]._ bit\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[4]._peek\n#pragma HLS aggregate variable = query_bv_packed_stream[4]._peek bit\nvoid(query_bv_packed_stream[4]._.empty());\nvoid(query_bv_packed_stream[4]._peek.empty());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[5]._\n#pragma HLS aggregate variable = query_bv_packed_stream[5]._ bit\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[5]._peek\n#pragma HLS aggregate variable = query_bv_packed_stream[5]._peek bit\nvoid(query_bv_packed_stream[5]._.empty());\nvoid(query_bv_packed_stream[5]._peek.empty());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[6]._\n#pragma HLS aggregate variable = query_bv_packed_stream[6]._ bit\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[6]._peek\n#pragma HLS aggregate variable = query_bv_packed_stream[6]._peek bit\nvoid(query_bv_packed_stream[6]._.empty());\nvoid(query_bv_packed_stream[6]._peek.empty());\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[7]._\n#pragma HLS aggregate variable = query_bv_packed_stream[7]._ bit\n#pragma HLS interface ap_fifo port = query_bv_packed_stream[7]._peek\n#pragma HLS aggregate variable = query_bv_packed_stream[7]._peek bit\nvoid(query_bv_packed_stream[7]._.empty());\nvoid(query_bv_packed_stream[7]._peek.empty());\n\n#pragma HLS disaggregate variable = inter_shuffle_stream\n#pragma HLS array_partition variable = inter_shuffle_stream complete\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[0]._\n#pragma HLS aggregate variable = inter_shuffle_stream[0]._ bit\nvoid(inter_shuffle_stream[0]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[1]._\n#pragma HLS aggregate variable = inter_shuffle_stream[1]._ bit\nvoid(inter_shuffle_stream[1]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[2]._\n#pragma HLS aggregate variable = inter_shuffle_stream[2]._ bit\nvoid(inter_shuffle_stream[2]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[3]._\n#pragma HLS aggregate variable = inter_shuffle_stream[3]._ bit\nvoid(inter_shuffle_stream[3]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[4]._\n#pragma HLS aggregate variable = inter_shuffle_stream[4]._ bit\nvoid(inter_shuffle_stream[4]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[5]._\n#pragma HLS aggregate variable = inter_shuffle_stream[5]._ bit\nvoid(inter_shuffle_stream[5]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[6]._\n#pragma HLS aggregate variable = inter_shuffle_stream[6]._ bit\nvoid(inter_shuffle_stream[6]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[7]._\n#pragma HLS aggregate variable = inter_shuffle_stream[7]._ bit\nvoid(inter_shuffle_stream[7]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[8]._\n#pragma HLS aggregate variable = inter_shuffle_stream[8]._ bit\nvoid(inter_shuffle_stream[8]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[9]._\n#pragma HLS aggregate variable = inter_shuffle_stream[9]._ bit\nvoid(inter_shuffle_stream[9]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[10]._\n#pragma HLS aggregate variable = inter_shuffle_stream[10]._ bit\nvoid(inter_shuffle_stream[10]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[11]._\n#pragma HLS aggregate variable = inter_shuffle_stream[11]._ bit\nvoid(inter_shuffle_stream[11]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[12]._\n#pragma HLS aggregate variable = inter_shuffle_stream[12]._ bit\nvoid(inter_shuffle_stream[12]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[13]._\n#pragma HLS aggregate variable = inter_shuffle_stream[13]._ bit\nvoid(inter_shuffle_stream[13]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[14]._\n#pragma HLS aggregate variable = inter_shuffle_stream[14]._ bit\nvoid(inter_shuffle_stream[14]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[15]._\n#pragma HLS aggregate variable = inter_shuffle_stream[15]._ bit\nvoid(inter_shuffle_stream[15]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[16]._\n#pragma HLS aggregate variable = inter_shuffle_stream[16]._ bit\nvoid(inter_shuffle_stream[16]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[17]._\n#pragma HLS aggregate variable = inter_shuffle_stream[17]._ bit\nvoid(inter_shuffle_stream[17]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[18]._\n#pragma HLS aggregate variable = inter_shuffle_stream[18]._ bit\nvoid(inter_shuffle_stream[18]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[19]._\n#pragma HLS aggregate variable = inter_shuffle_stream[19]._ bit\nvoid(inter_shuffle_stream[19]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[20]._\n#pragma HLS aggregate variable = inter_shuffle_stream[20]._ bit\nvoid(inter_shuffle_stream[20]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[21]._\n#pragma HLS aggregate variable = inter_shuffle_stream[21]._ bit\nvoid(inter_shuffle_stream[21]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[22]._\n#pragma HLS aggregate variable = inter_shuffle_stream[22]._ bit\nvoid(inter_shuffle_stream[22]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[23]._\n#pragma HLS aggregate variable = inter_shuffle_stream[23]._ bit\nvoid(inter_shuffle_stream[23]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[24]._\n#pragma HLS aggregate variable = inter_shuffle_stream[24]._ bit\nvoid(inter_shuffle_stream[24]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[25]._\n#pragma HLS aggregate variable = inter_shuffle_stream[25]._ bit\nvoid(inter_shuffle_stream[25]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[26]._\n#pragma HLS aggregate variable = inter_shuffle_stream[26]._ bit\nvoid(inter_shuffle_stream[26]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[27]._\n#pragma HLS aggregate variable = inter_shuffle_stream[27]._ bit\nvoid(inter_shuffle_stream[27]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[28]._\n#pragma HLS aggregate variable = inter_shuffle_stream[28]._ bit\nvoid(inter_shuffle_stream[28]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[29]._\n#pragma HLS aggregate variable = inter_shuffle_stream[29]._ bit\nvoid(inter_shuffle_stream[29]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[30]._\n#pragma HLS aggregate variable = inter_shuffle_stream[30]._ bit\nvoid(inter_shuffle_stream[30]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[31]._\n#pragma HLS aggregate variable = inter_shuffle_stream[31]._ bit\nvoid(inter_shuffle_stream[31]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[32]._\n#pragma HLS aggregate variable = inter_shuffle_stream[32]._ bit\nvoid(inter_shuffle_stream[32]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[33]._\n#pragma HLS aggregate variable = inter_shuffle_stream[33]._ bit\nvoid(inter_shuffle_stream[33]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[34]._\n#pragma HLS aggregate variable = inter_shuffle_stream[34]._ bit\nvoid(inter_shuffle_stream[34]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[35]._\n#pragma HLS aggregate variable = inter_shuffle_stream[35]._ bit\nvoid(inter_shuffle_stream[35]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[36]._\n#pragma HLS aggregate variable = inter_shuffle_stream[36]._ bit\nvoid(inter_shuffle_stream[36]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[37]._\n#pragma HLS aggregate variable = inter_shuffle_stream[37]._ bit\nvoid(inter_shuffle_stream[37]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[38]._\n#pragma HLS aggregate variable = inter_shuffle_stream[38]._ bit\nvoid(inter_shuffle_stream[38]._.full());\n#pragma HLS interface ap_fifo port = inter_shuffle_stream[39]._\n#pragma HLS aggregate variable = inter_shuffle_stream[39]._ bit\nvoid(inter_shuffle_stream[39]._.full());\n\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> BV;\n        ap_uint<INPUT_IDX_BITWIDTH> input_idx;\n        bool valid;\n    } PEEKED_DTYPE;\n    //int next_output_idx[NUM_STM];\n    //#pragma HLS ARRAY_PARTITION variable=next_output_idx dim=0 complete\n    // This is a buffer for data from each partition.\n    // We also introduce a NUM_STM dimension, otherwise we hang.\n    PEEKED_DTYPE shuffle_peek_emulator[(8) /* each sub bv is further partitioned into this chunks*/][(5)];\n#pragma HLS ARRAY_PARTITION variable=shuffle_peek_emulator dim=0 complete\n    //NEXT_OUTPUT_IDX_INIT:\n    //for (int i = 0; i < NUM_STM; ++i) {\n    //#pragma HLS UNROLL\n    //    next_output_idx[i] = 1;\n    //}\n    PEEK_EMULATOR_INITIALIZATION:\n    for (int j=0; j<(8) /* each sub bv is further partitioned into this chunks*/; ++j){\n#pragma HLS UNROLL\n        for (int k=0; k<(5); ++k) {\n#pragma HLS UNROLL\n            shuffle_peek_emulator[j][k].BV = 0;\n            shuffle_peek_emulator[j][k].input_idx = 0;\n            shuffle_peek_emulator[j][k].valid = 0;\n        }\n    }\n    while(1)\n    {\n#pragma HLS PIPELINE II=1\n        ////////////////////////////////////////////\n        // READ LOGIC. Read from each partition stream\n        ////////////////////////////////////////////\n        RD_BV_PARTITION_LOOP:\n        for (int partition_idx = 0;\n                partition_idx < (8) /* each sub bv is further partitioned into this chunks*/;\n                ++partition_idx)\n        {\n#pragma HLS UNROLL\n            // DATAPACKED TRANSFER:\n            ap_uint<INPUT_IDX_BITWIDTH> cur_input_idx;\n            ap_uint<STRM_IDX_BITWIDTH> cur_strm_idx;\n            ap_uint<BIT_BITWIDTH> cur_bv_val;\n            METADATA_DTYPE cur_metadata;\n            BV_PLUS_METADATA_PACKED_DTYPE cur_packed_data;\n            bool peek_success;\n            peek_success = query_bv_packed_stream[partition_idx].try_peek(\n                cur_packed_data\n            );\n            cur_metadata = cur_packed_data.md;\n            cur_bv_val = cur_packed_data.bv_val;\n            // Unpack metadata\n            cur_strm_idx = cur_metadata.sidx;\n            cur_input_idx = cur_metadata.iidx;\n                // If the current \"peeked\" value is not valid, overwrite it\n                // with valid data.\n                if (peek_success &&\n                    shuffle_peek_emulator[partition_idx][cur_strm_idx].valid == 0\n                )\n                {\n                    query_bv_packed_stream[partition_idx].read();\n                    // Write it into the buffer\n                    shuffle_peek_emulator[partition_idx]\n                        [cur_strm_idx].valid = 1;\n                    shuffle_peek_emulator[partition_idx]\n                        [cur_strm_idx].BV = cur_bv_val;\n                    shuffle_peek_emulator[partition_idx]\n                        [cur_strm_idx].input_idx = cur_input_idx;\n                }\n        }\n        ////////////////////////////////////////////\n        // WRITE OUTPUTS from the shuffle-buffer\n        ////////////////////////////////////////////\n        WR_STM_LOOP:\n        for (int strm_idx = 0; strm_idx < (5); ++strm_idx)\n        {\n            WR_BV_PARTITION_LOOP:\n            for (int partition_idx = 0;\n                    partition_idx < (8) /* each sub bv is further partitioned into this chunks*/;\n                    ++partition_idx)\n            {\n#pragma HLS UNROLL\n                BV_PLUS_IIDX_PACKED_DTYPE outval;\n                outval.bv_val = shuffle_peek_emulator[partition_idx][strm_idx].BV;\n                outval.iidx = shuffle_peek_emulator[partition_idx][strm_idx].input_idx;\n                if (shuffle_peek_emulator[partition_idx][strm_idx].valid == 1 &&\n                    inter_shuffle_stream[strm_idx*(8) /* each sub bv is further partitioned into this chunks*/ + partition_idx].try_write(outval)\n                ) {\n                    shuffle_peek_emulator[partition_idx][strm_idx].valid = 0;\n                }\n            }\n        }\n    }\n    return;\n}\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n;\n",
            "level": "lower",
            "target": "hls",
            "vendor": "xilinx"
        },
        "shuffle_reordering_per_hash": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n{\n\n\n\n#pragma HLS disaggregate variable = inter_shuffle_stream_p0\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p0._\n#pragma HLS aggregate variable = inter_shuffle_stream_p0._ bit\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p0._peek\n#pragma HLS aggregate variable = inter_shuffle_stream_p0._peek bit\nvoid(inter_shuffle_stream_p0._.empty());\nvoid(inter_shuffle_stream_p0._peek.empty());\n\n#pragma HLS disaggregate variable = inter_shuffle_stream_p1\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p1._\n#pragma HLS aggregate variable = inter_shuffle_stream_p1._ bit\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p1._peek\n#pragma HLS aggregate variable = inter_shuffle_stream_p1._peek bit\nvoid(inter_shuffle_stream_p1._.empty());\nvoid(inter_shuffle_stream_p1._peek.empty());\n\n#pragma HLS disaggregate variable = inter_shuffle_stream_p2\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p2._\n#pragma HLS aggregate variable = inter_shuffle_stream_p2._ bit\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p2._peek\n#pragma HLS aggregate variable = inter_shuffle_stream_p2._peek bit\nvoid(inter_shuffle_stream_p2._.empty());\nvoid(inter_shuffle_stream_p2._peek.empty());\n\n#pragma HLS disaggregate variable = inter_shuffle_stream_p3\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p3._\n#pragma HLS aggregate variable = inter_shuffle_stream_p3._ bit\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p3._peek\n#pragma HLS aggregate variable = inter_shuffle_stream_p3._peek bit\nvoid(inter_shuffle_stream_p3._.empty());\nvoid(inter_shuffle_stream_p3._peek.empty());\n\n#pragma HLS disaggregate variable = inter_shuffle_stream_p4\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p4._\n#pragma HLS aggregate variable = inter_shuffle_stream_p4._ bit\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p4._peek\n#pragma HLS aggregate variable = inter_shuffle_stream_p4._peek bit\nvoid(inter_shuffle_stream_p4._.empty());\nvoid(inter_shuffle_stream_p4._peek.empty());\n\n#pragma HLS disaggregate variable = inter_shuffle_stream_p5\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p5._\n#pragma HLS aggregate variable = inter_shuffle_stream_p5._ bit\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p5._peek\n#pragma HLS aggregate variable = inter_shuffle_stream_p5._peek bit\nvoid(inter_shuffle_stream_p5._.empty());\nvoid(inter_shuffle_stream_p5._peek.empty());\n\n#pragma HLS disaggregate variable = inter_shuffle_stream_p6\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p6._\n#pragma HLS aggregate variable = inter_shuffle_stream_p6._ bit\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p6._peek\n#pragma HLS aggregate variable = inter_shuffle_stream_p6._peek bit\nvoid(inter_shuffle_stream_p6._.empty());\nvoid(inter_shuffle_stream_p6._peek.empty());\n\n#pragma HLS disaggregate variable = inter_shuffle_stream_p7\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p7._\n#pragma HLS aggregate variable = inter_shuffle_stream_p7._ bit\n#pragma HLS interface ap_fifo port = inter_shuffle_stream_p7._peek\n#pragma HLS aggregate variable = inter_shuffle_stream_p7._peek bit\nvoid(inter_shuffle_stream_p7._.empty());\nvoid(inter_shuffle_stream_p7._peek.empty());\n\n#pragma HLS disaggregate variable = reconstruct_stream\n#pragma HLS interface ap_fifo port = reconstruct_stream._\n#pragma HLS aggregate variable = reconstruct_stream._ bit\nvoid(reconstruct_stream._.full());\n\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        bool valid;\n    } PEEKED_DTYPE;\n    int next_output_idx = 1;\n    PEEKED_DTYPE shufbuf[(8) /* each sub bv is further partitioned into this chunks*/][(8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/];\n#pragma HLS ARRAY_PARTITION variable=shufbuf dim=0 complete\n    PEEK_EMULATOR_INIT:\n    for (int p = 0; p < (8) /* each sub bv is further partitioned into this chunks*/; ++p) {\n        for (int i = 0; i < (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; ++i) {\n            shufbuf[p][i].bv = 0;\n            shufbuf[p][i].iidx = 0;\n            shufbuf[p][i].valid = 0;\n        }\n    }\n    MAIN_LOOP:\n    while(1)\n    {\n#pragma HLS PIPELINE II=1\n        /////////////////////////////\n        // READ LOGIC\n        /////////////////////////////\n                //#ifdef __DO_DEBUG_PRINTS__\n                //printf(\"SHUFFLE ORDERING stm%d kp%d hash%d - read BV %d from partition %d, iidx %d, into buf_idx %d\\n\",\n                //        stm_idx, kp_idx, shuffle_idx,\n                //        read_val.bv_val.to_int(),\n                //        partition_idx,\n                //        read_val.iidx.to_int(),\n                //        rd_buf_idx\n                //);\n                //#endif\n        bool peek_success_p0; int rd_buf_idx_p0; BV_PLUS_IIDX_PACKED_DTYPE read_val_p0; peek_success_p0 = inter_shuffle_stream_p0.try_peek(read_val_p0); rd_buf_idx_p0 = read_val_p0.iidx % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (peek_success_p0 && shufbuf[0][rd_buf_idx_p0].valid == 0 ) { inter_shuffle_stream_p0.read(); shufbuf[0][rd_buf_idx_p0].bv = read_val_p0.bv_val; shufbuf[0][rd_buf_idx_p0].iidx = read_val_p0.iidx; shufbuf[0][rd_buf_idx_p0].valid = 1; }\n        bool peek_success_p1; int rd_buf_idx_p1; BV_PLUS_IIDX_PACKED_DTYPE read_val_p1; peek_success_p1 = inter_shuffle_stream_p1.try_peek(read_val_p1); rd_buf_idx_p1 = read_val_p1.iidx % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (peek_success_p1 && shufbuf[1][rd_buf_idx_p1].valid == 0 ) { inter_shuffle_stream_p1.read(); shufbuf[1][rd_buf_idx_p1].bv = read_val_p1.bv_val; shufbuf[1][rd_buf_idx_p1].iidx = read_val_p1.iidx; shufbuf[1][rd_buf_idx_p1].valid = 1; }\n        bool peek_success_p2; int rd_buf_idx_p2; BV_PLUS_IIDX_PACKED_DTYPE read_val_p2; peek_success_p2 = inter_shuffle_stream_p2.try_peek(read_val_p2); rd_buf_idx_p2 = read_val_p2.iidx % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (peek_success_p2 && shufbuf[2][rd_buf_idx_p2].valid == 0 ) { inter_shuffle_stream_p2.read(); shufbuf[2][rd_buf_idx_p2].bv = read_val_p2.bv_val; shufbuf[2][rd_buf_idx_p2].iidx = read_val_p2.iidx; shufbuf[2][rd_buf_idx_p2].valid = 1; }\n        bool peek_success_p3; int rd_buf_idx_p3; BV_PLUS_IIDX_PACKED_DTYPE read_val_p3; peek_success_p3 = inter_shuffle_stream_p3.try_peek(read_val_p3); rd_buf_idx_p3 = read_val_p3.iidx % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (peek_success_p3 && shufbuf[3][rd_buf_idx_p3].valid == 0 ) { inter_shuffle_stream_p3.read(); shufbuf[3][rd_buf_idx_p3].bv = read_val_p3.bv_val; shufbuf[3][rd_buf_idx_p3].iidx = read_val_p3.iidx; shufbuf[3][rd_buf_idx_p3].valid = 1; }\n        bool peek_success_p4; int rd_buf_idx_p4; BV_PLUS_IIDX_PACKED_DTYPE read_val_p4; peek_success_p4 = inter_shuffle_stream_p4.try_peek(read_val_p4); rd_buf_idx_p4 = read_val_p4.iidx % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (peek_success_p4 && shufbuf[4][rd_buf_idx_p4].valid == 0 ) { inter_shuffle_stream_p4.read(); shufbuf[4][rd_buf_idx_p4].bv = read_val_p4.bv_val; shufbuf[4][rd_buf_idx_p4].iidx = read_val_p4.iidx; shufbuf[4][rd_buf_idx_p4].valid = 1; }\n        bool peek_success_p5; int rd_buf_idx_p5; BV_PLUS_IIDX_PACKED_DTYPE read_val_p5; peek_success_p5 = inter_shuffle_stream_p5.try_peek(read_val_p5); rd_buf_idx_p5 = read_val_p5.iidx % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (peek_success_p5 && shufbuf[5][rd_buf_idx_p5].valid == 0 ) { inter_shuffle_stream_p5.read(); shufbuf[5][rd_buf_idx_p5].bv = read_val_p5.bv_val; shufbuf[5][rd_buf_idx_p5].iidx = read_val_p5.iidx; shufbuf[5][rd_buf_idx_p5].valid = 1; }\n        bool peek_success_p6; int rd_buf_idx_p6; BV_PLUS_IIDX_PACKED_DTYPE read_val_p6; peek_success_p6 = inter_shuffle_stream_p6.try_peek(read_val_p6); rd_buf_idx_p6 = read_val_p6.iidx % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (peek_success_p6 && shufbuf[6][rd_buf_idx_p6].valid == 0 ) { inter_shuffle_stream_p6.read(); shufbuf[6][rd_buf_idx_p6].bv = read_val_p6.bv_val; shufbuf[6][rd_buf_idx_p6].iidx = read_val_p6.iidx; shufbuf[6][rd_buf_idx_p6].valid = 1; }\n        bool peek_success_p7; int rd_buf_idx_p7; BV_PLUS_IIDX_PACKED_DTYPE read_val_p7; peek_success_p7 = inter_shuffle_stream_p7.try_peek(read_val_p7); rd_buf_idx_p7 = read_val_p7.iidx % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/; if (peek_success_p7 && shufbuf[7][rd_buf_idx_p7].valid == 0 ) { inter_shuffle_stream_p7.read(); shufbuf[7][rd_buf_idx_p7].bv = read_val_p7.bv_val; shufbuf[7][rd_buf_idx_p7].iidx = read_val_p7.iidx; shufbuf[7][rd_buf_idx_p7].valid = 1; }\n        /////////////////////////////\n        // WRITE LOGIC\n        /////////////////////////////\n        bool write_ready = 0;\n        int wr_buf_idx = next_output_idx % (8) /* Number of buffered elements we can have for each hash/partition, in the shuffle buffer.*/;\n        int ready_partition_idx = 0;\n        for (int partition_idx = 0; partition_idx < (8) /* each sub bv is further partitioned into this chunks*/; ++partition_idx)\n        {\n            if (shufbuf[partition_idx][wr_buf_idx].valid == 1 &&\n                shufbuf[partition_idx][wr_buf_idx].iidx == next_output_idx\n            )\n            {\n                write_ready = 1;\n                ready_partition_idx = partition_idx;\n                break;\n            }\n        }\n        if (write_ready){\n            ap_uint<BIT_BITWIDTH> write_success;\n            ap_uint<BIT_BITWIDTH> v = shufbuf[ready_partition_idx][wr_buf_idx].bv;\n            write_success = reconstruct_stream.try_write(v);\n            if (write_success) {\n                shufbuf[ready_partition_idx][wr_buf_idx].valid = 0;\n                if (next_output_idx == KEYPAIRS_PER_STM) {\n                    next_output_idx = 1;\n                }\n                else {\n                    next_output_idx++;\n                }\n            }\n        }\n    }\n}\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n;\n",
            "level": "lower",
            "target": "hls",
            "vendor": "xilinx"
        },
        "workload": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nextern \"C\" {\n\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n{\n\n#pragma HLS interface s_axilite port = input_bv bundle = control\n{ auto val = reinterpret_cast<volatile uint8_t&>(input_bv); }\n{ auto val = reinterpret_cast<volatile uint8_t&>(input_bv); }\n\n#pragma HLS interface s_axilite port = key_in bundle = control\n{ auto val = reinterpret_cast<volatile uint8_t&>(key_in); }\n{ auto val = reinterpret_cast<volatile uint8_t&>(key_in); }\n\n#pragma HLS interface s_axilite port = out_bits bundle = control\n{ auto val = reinterpret_cast<volatile uint8_t&>(out_bits); }\n{ auto val = reinterpret_cast<volatile uint8_t&>(out_bits); }\n\n#pragma HLS interface s_axilite port = UNUSED_DUMMY bundle = control\n{ auto val = reinterpret_cast<volatile uint8_t&>(UNUSED_DUMMY); }\n\n\n#pragma HLS interface s_axilite port = return bundle = control\n}\n\n\n}  // extern \"C\"\n\n",
            "fifos": {
                "aggregate_stream_kp0_workload[0]": {
                    "consumed_by": [
                        "packOutput",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_aggregate_SPLIT",
                        0
                    ]
                },
                "aggregate_stream_kp0_workload[1]": {
                    "consumed_by": [
                        "packOutput",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_aggregate_SPLIT",
                        1
                    ]
                },
                "aggregate_stream_kp0_workload[2]": {
                    "consumed_by": [
                        "packOutput",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_aggregate_SPLIT",
                        2
                    ]
                },
                "aggregate_stream_kp0_workload[3]": {
                    "consumed_by": [
                        "packOutput",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_aggregate_SPLIT",
                        3
                    ]
                },
                "aggregate_stream_kp0_workload[4]": {
                    "consumed_by": [
                        "packOutput",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_aggregate_SPLIT",
                        4
                    ]
                },
                "aggregate_stream_kp1_workload[0]": {
                    "consumed_by": [
                        "packOutput",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_aggregate_SPLIT",
                        5
                    ]
                },
                "aggregate_stream_kp1_workload[1]": {
                    "consumed_by": [
                        "packOutput",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_aggregate_SPLIT",
                        6
                    ]
                },
                "aggregate_stream_kp1_workload[2]": {
                    "consumed_by": [
                        "packOutput",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_aggregate_SPLIT",
                        7
                    ]
                },
                "aggregate_stream_kp1_workload[3]": {
                    "consumed_by": [
                        "packOutput",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_aggregate_SPLIT",
                        8
                    ]
                },
                "aggregate_stream_kp1_workload[4]": {
                    "consumed_by": [
                        "packOutput",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_aggregate_SPLIT",
                        9
                    ]
                },
                "arb0_streams_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[10]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[11]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[12]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[13]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[14]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        11
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[15]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        12
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[16]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        12
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[17]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        13
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[18]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        13
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[19]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        15
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[20]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        16
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[21]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        16
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[22]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        17
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[23]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        17
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[24]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        19
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[25]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        20
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[26]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        20
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[27]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        21
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[28]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        21
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[29]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        23
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[30]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        24
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[31]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        24
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[32]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        25
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[33]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        25
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[34]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        27
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[35]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        28
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[36]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        28
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[37]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        29
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[38]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        29
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[39]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        31
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[5]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[6]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[7]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[8]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp0_workload[9]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        0
                    ]
                },
                "arb0_streams_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        160
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[10]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        168
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[11]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        168
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[12]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        169
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[13]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        169
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[14]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        171
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[15]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        172
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[16]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        172
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[17]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        173
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[18]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        173
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[19]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        175
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        160
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[20]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        176
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[21]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        176
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[22]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        177
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[23]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        177
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[24]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        179
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[25]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        180
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[26]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        180
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[27]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        181
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[28]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        181
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[29]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        183
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        161
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[30]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        184
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[31]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        184
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[32]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        185
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[33]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        185
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[34]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        187
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[35]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        188
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[36]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        188
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[37]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        189
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[38]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        189
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[39]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        191
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        161
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        163
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[5]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        164
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[6]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        164
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[7]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        165
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[8]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        165
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb0_streams_kp1_workload[9]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        167
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        5
                    ]
                },
                "arb1_streams_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        32
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[10]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        40
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[11]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        40
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[12]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        41
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[13]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        41
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[14]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        43
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[15]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        44
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[16]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        44
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[17]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        45
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[18]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        45
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[19]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        47
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        32
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[20]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        48
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[21]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        48
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[22]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        49
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[23]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        49
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[24]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        51
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[25]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        52
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[26]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        52
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[27]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        53
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[28]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        53
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[29]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        55
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        33
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[30]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        56
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[31]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        56
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[32]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        57
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[33]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        57
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[34]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        59
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[35]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        60
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[36]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        60
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[37]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        61
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[38]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        61
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[39]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        63
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        33
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        35
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[5]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        36
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[6]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        36
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[7]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        37
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[8]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        37
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp0_workload[9]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        39
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        1
                    ]
                },
                "arb1_streams_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        192
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[10]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        200
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[11]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        200
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[12]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        201
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[13]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        201
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[14]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        203
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[15]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        204
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[16]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        204
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[17]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        205
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[18]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        205
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[19]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        207
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        192
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[20]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        208
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[21]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        208
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[22]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        209
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[23]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        209
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[24]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        211
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[25]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        212
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[26]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        212
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[27]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        213
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[28]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        213
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[29]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        215
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        193
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[30]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        216
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[31]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        216
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[32]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        217
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[33]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        217
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[34]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        219
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[35]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        220
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[36]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        220
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[37]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        221
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[38]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        221
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[39]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        223
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        193
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        195
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[5]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        196
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[6]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        196
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[7]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        197
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[8]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        197
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb1_streams_kp1_workload[9]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        199
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        6
                    ]
                },
                "arb2_streams_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        64
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[10]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        72
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[11]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        72
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[12]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        73
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[13]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        73
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[14]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        75
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[15]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        76
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[16]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        76
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[17]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        77
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[18]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        77
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[19]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        79
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        64
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[20]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        80
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[21]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        80
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[22]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        81
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[23]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        81
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[24]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        83
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[25]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        84
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[26]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        84
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[27]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        85
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[28]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        85
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[29]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        87
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        65
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[30]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        88
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[31]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        88
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[32]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        89
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[33]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        89
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[34]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        91
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[35]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        92
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[36]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        92
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[37]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        93
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[38]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        93
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[39]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        95
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        65
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        67
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[5]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        68
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[6]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        68
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[7]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        69
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[8]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        69
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp0_workload[9]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        71
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        2
                    ]
                },
                "arb2_streams_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        224
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[10]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        232
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[11]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        232
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[12]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        233
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[13]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        233
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[14]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        235
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[15]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        236
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[16]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        236
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[17]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        237
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[18]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        237
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[19]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        239
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        224
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[20]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        240
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[21]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        240
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[22]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        241
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[23]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        241
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[24]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        243
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[25]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        244
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[26]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        244
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[27]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        245
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[28]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        245
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[29]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        247
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        225
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[30]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        248
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[31]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        248
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[32]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        249
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[33]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        249
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[34]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        251
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[35]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        252
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[36]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        252
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[37]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        253
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[38]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        253
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[39]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        255
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        225
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        227
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[5]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        228
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[6]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        228
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[7]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        229
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[8]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        229
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb2_streams_kp1_workload[9]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        231
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        7
                    ]
                },
                "arb3_streams_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        96
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[10]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        104
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[11]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        104
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[12]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        105
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[13]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        105
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[14]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        107
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[15]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        108
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[16]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        108
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[17]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        109
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[18]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        109
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[19]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        111
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        96
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[20]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        112
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[21]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        112
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[22]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        113
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[23]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        113
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[24]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        115
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[25]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        116
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[26]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        116
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[27]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        117
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[28]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        117
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[29]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        119
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        97
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[30]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        120
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[31]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        120
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[32]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        121
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[33]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        121
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[34]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        123
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[35]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        124
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[36]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        124
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[37]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        125
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[38]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        125
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[39]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        127
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        97
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        99
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[5]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        100
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[6]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        100
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[7]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        101
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[8]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        101
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp0_workload[9]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        103
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        3
                    ]
                },
                "arb3_streams_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        256
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[10]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        264
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[11]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        264
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[12]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        265
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[13]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        265
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[14]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        267
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[15]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        268
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[16]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        268
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[17]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        269
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[18]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        269
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[19]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        271
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        256
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[20]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        272
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[21]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        272
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[22]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        273
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[23]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        273
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[24]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        275
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[25]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        276
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[26]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        276
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[27]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        277
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[28]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        277
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[29]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        279
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        257
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[30]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        280
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[31]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        280
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[32]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        281
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[33]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        281
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[34]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        283
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[35]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        284
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[36]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        284
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[37]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        285
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[38]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        285
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[39]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        287
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        257
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        259
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[5]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        260
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[6]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        260
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[7]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        261
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[8]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        261
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb3_streams_kp1_workload[9]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        263
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        8
                    ]
                },
                "arb4_streams_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        128
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[10]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        136
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[11]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        136
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[12]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        137
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[13]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        137
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[14]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        139
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[15]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        140
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[16]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        140
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[17]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        141
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[18]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        141
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[19]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        143
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        128
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[20]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        144
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[21]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        144
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[22]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        145
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[23]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        145
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[24]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        147
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[25]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        148
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[26]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        148
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[27]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        149
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[28]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        149
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[29]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        151
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        129
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[30]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        152
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[31]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        152
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[32]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        153
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[33]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        153
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[34]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        155
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[35]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        156
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[36]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        156
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[37]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        157
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[38]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        157
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[39]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        159
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        129
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        131
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[5]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        132
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[6]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        132
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[7]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        133
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[8]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        133
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp0_workload[9]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        135
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        4
                    ]
                },
                "arb4_streams_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        288
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[10]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        296
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[11]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        296
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[12]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        297
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[13]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        297
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[14]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        299
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[15]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        300
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[16]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        300
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[17]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        301
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[18]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        301
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[19]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        303
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        288
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[20]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        304
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[21]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        304
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[22]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        305
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[23]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        305
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[24]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        307
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[25]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        308
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[26]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        308
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[27]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        309
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[28]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        309
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[29]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        311
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        289
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[30]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        312
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[31]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        312
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[32]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        313
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[33]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        313
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[34]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        315
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[35]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        316
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[36]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        316
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[37]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        317
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[38]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        317
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[39]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        319
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        289
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        291
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[5]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        292
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[6]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        292
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[7]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        293
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[8]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        293
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb4_streams_kp1_workload[9]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        295
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arb_forwarder",
                        9
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        0
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        1
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        34
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        32
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        34
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        33
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        66
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        64
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        66
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        65
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        98
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        96
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        98
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        97
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        130
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        128
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        130
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        129
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        162
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        160
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        162
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        161
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        194
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        192
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        194
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        193
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        226
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        224
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        226
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        225
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        258
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        256
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        258
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        257
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        290
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        288
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        290
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        289
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        4
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        5
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        38
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        36
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        38
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        37
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        70
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        68
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        70
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        69
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        102
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        100
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        102
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        101
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        134
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        132
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        134
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        133
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        166
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        164
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        166
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        165
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        198
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        196
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        198
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        197
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        230
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        228
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        230
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        229
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        262
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        260
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        262
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        261
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        294
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        292
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        294
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        293
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        10
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        8
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        10
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        9
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        42
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        40
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        42
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        41
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        74
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        72
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        74
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        73
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        106
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        104
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        106
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        105
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        138
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        136
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        138
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        137
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        170
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        168
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        170
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        169
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        202
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        200
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        202
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        201
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        234
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        232
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        234
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        233
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        266
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        264
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        266
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        265
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        298
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        296
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        298
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        297
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        14
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        12
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        14
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        13
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        46
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        44
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        46
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        45
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        78
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        76
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        78
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        77
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        110
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        108
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        110
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        109
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        142
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        140
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        142
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        141
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        174
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        172
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        174
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        173
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        206
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        204
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        206
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        205
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        238
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        236
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        238
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        237
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        270
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        268
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        270
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        269
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        302
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        300
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        302
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        301
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        18
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        16
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        18
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        17
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        50
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        48
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        50
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        49
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        82
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        80
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        82
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        81
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        114
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        112
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        114
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        113
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        146
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        144
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        146
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        145
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        178
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        176
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        178
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        177
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        210
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        208
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        210
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        209
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        242
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        240
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        242
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        241
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        274
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        272
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        274
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        273
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        306
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        304
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        306
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        305
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        22
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        20
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        22
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        21
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        54
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        52
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        54
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        53
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        86
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        84
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        86
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        85
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        118
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        116
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        118
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        117
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        150
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        148
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        150
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        149
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        182
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        180
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        182
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        181
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        214
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        212
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        214
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        213
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        246
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        244
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        246
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        245
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        278
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        276
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        278
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        277
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        310
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        308
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        310
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        309
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        26
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        24
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        26
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        25
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        58
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        56
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        58
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        57
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        90
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        88
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        90
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        89
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        122
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        120
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        122
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        121
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        154
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        152
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        154
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        153
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        186
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        184
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        186
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        185
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        218
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        216
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        218
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        217
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        250
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        248
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        250
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        249
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        282
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        280
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        282
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        281
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        314
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        312
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        314
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        313
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        30
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        28
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        30
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        29
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        62
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        60
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        62
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        61
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        94
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        92
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        94
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        93
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        126
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        124
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        126
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        125
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        158
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        156
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        158
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        157
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        190
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        188
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        190
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        189
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        222
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        220
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        222
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        221
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        254
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        252
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        254
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        253
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        286
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        284
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        286
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        285
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        318
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        316
                    ]
                },
                "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        318
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        317
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        2
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        35
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        34
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        67
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        66
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        99
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        98
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        131
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        130
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        163
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        162
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        195
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        194
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        227
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        226
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        259
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        258
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        291
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        290
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        6
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        39
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        38
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        71
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        70
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        103
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        102
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        135
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        134
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        167
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        166
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        199
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        198
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        231
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        230
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        263
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        262
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        295
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        294
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        11
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        10
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        43
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        42
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        75
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        74
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        107
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        106
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        139
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        138
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        171
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        170
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        203
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        202
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        235
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        234
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        267
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        266
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        299
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        298
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        15
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        14
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        47
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        46
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        79
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        78
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        111
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        110
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        143
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        142
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        175
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        174
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        207
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        206
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        239
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        238
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        271
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        270
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        303
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        302
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        19
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        18
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        51
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        50
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        83
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        82
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        115
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        114
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        147
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        146
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        179
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        178
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        211
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        210
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        243
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        242
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        275
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        274
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        307
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        306
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        23
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        22
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        55
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        54
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        87
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        86
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        119
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        118
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        151
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        150
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        183
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        182
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        215
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        214
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        247
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        246
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        279
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        278
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        311
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        310
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        27
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        26
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        59
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        58
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        91
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        90
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        123
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        122
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        155
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        154
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        187
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        186
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        219
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        218
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        251
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        250
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        283
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        282
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        315
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        314
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        31
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        30
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        63
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        62
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        95
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        94
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        127
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        126
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        159
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        158
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        191
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        190
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        223
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        222
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        255
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        254
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        287
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        286
                    ]
                },
                "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        319
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        318
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        3
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        7
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_0_workload[2]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        11
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_0_workload[3]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        15
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_0_workload[4]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        19
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_0_workload[5]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        23
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_0_workload[6]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        27
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_0_workload[7]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        31
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        35
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        39
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_1_workload[2]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        43
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_1_workload[3]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        47
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_1_workload[4]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        51
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_1_workload[5]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        55
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_1_workload[6]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        59
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_1_workload[7]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        63
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        67
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        71
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_2_workload[2]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        75
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_2_workload[3]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        79
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_2_workload[4]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        83
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_2_workload[5]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        87
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_2_workload[6]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        91
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_2_workload[7]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        95
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        99
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        103
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_3_workload[2]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        107
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_3_workload[3]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        111
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_3_workload[4]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        115
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_3_workload[5]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        119
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_3_workload[6]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        123
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_3_workload[7]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        127
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        131
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        135
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_4_workload[2]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        139
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_4_workload[3]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        143
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_4_workload[4]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        147
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_4_workload[5]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        151
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_4_workload[6]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        155
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_4_workload[7]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        159
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        163
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        167
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_5_workload[2]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        171
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_5_workload[3]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        175
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_5_workload[4]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        179
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_5_workload[5]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        183
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_5_workload[6]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        187
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_5_workload[7]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        191
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        195
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        199
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_6_workload[2]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        203
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_6_workload[3]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        207
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_6_workload[4]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        211
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_6_workload[5]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        215
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_6_workload[6]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        219
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_6_workload[7]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        223
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        227
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        231
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_7_workload[2]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        235
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_7_workload[3]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        239
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_7_workload[4]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        243
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_7_workload[5]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        247
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_7_workload[6]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        251
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_7_workload[7]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        255
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        259
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        263
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_8_workload[2]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        267
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_8_workload[3]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        271
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_8_workload[4]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        275
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_8_workload[5]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        279
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_8_workload[6]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        283
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_8_workload[7]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        287
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        291
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        295
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_9_workload[2]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        299
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_9_workload[3]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        303
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_9_workload[4]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        307
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_9_workload[5]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        311
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_9_workload[6]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        315
                    ]
                },
                "arbtree_outputs_bloom_single_arbiter_9_workload[7]": {
                    "consumed_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_hier_arbiter_atom",
                        319
                    ]
                },
                "bv_load_stream_0_workload": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadBV",
                        0
                    ]
                },
                "bv_load_stream_1_workload": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadBV",
                        0
                    ]
                },
                "bv_load_stream_2_workload": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadBV",
                        0
                    ]
                },
                "bv_load_stream_3_workload": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadBV",
                        0
                    ]
                },
                "bv_load_stream_4_workload": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadBV",
                        0
                    ]
                },
                "bv_lookup_stream_h0_kp0_workload[0]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "bv_lookup_stream_h0_kp0_workload[1]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "bv_lookup_stream_h0_kp0_workload[2]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "bv_lookup_stream_h0_kp0_workload[3]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "bv_lookup_stream_h0_kp0_workload[4]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "bv_lookup_stream_h0_kp0_workload[5]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "bv_lookup_stream_h0_kp0_workload[6]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "bv_lookup_stream_h0_kp0_workload[7]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "bv_lookup_stream_h0_kp1_workload[0]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "bv_lookup_stream_h0_kp1_workload[1]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "bv_lookup_stream_h0_kp1_workload[2]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "bv_lookup_stream_h0_kp1_workload[3]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "bv_lookup_stream_h0_kp1_workload[4]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "bv_lookup_stream_h0_kp1_workload[5]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "bv_lookup_stream_h0_kp1_workload[6]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "bv_lookup_stream_h0_kp1_workload[7]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "bv_lookup_stream_h1_kp0_workload[0]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "bv_lookup_stream_h1_kp0_workload[1]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "bv_lookup_stream_h1_kp0_workload[2]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "bv_lookup_stream_h1_kp0_workload[3]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "bv_lookup_stream_h1_kp0_workload[4]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "bv_lookup_stream_h1_kp0_workload[5]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "bv_lookup_stream_h1_kp0_workload[6]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "bv_lookup_stream_h1_kp0_workload[7]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "bv_lookup_stream_h1_kp1_workload[0]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "bv_lookup_stream_h1_kp1_workload[1]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "bv_lookup_stream_h1_kp1_workload[2]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "bv_lookup_stream_h1_kp1_workload[3]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "bv_lookup_stream_h1_kp1_workload[4]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "bv_lookup_stream_h1_kp1_workload[5]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "bv_lookup_stream_h1_kp1_workload[6]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "bv_lookup_stream_h1_kp1_workload[7]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "bv_lookup_stream_h2_kp0_workload[0]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "bv_lookup_stream_h2_kp0_workload[1]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "bv_lookup_stream_h2_kp0_workload[2]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "bv_lookup_stream_h2_kp0_workload[3]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "bv_lookup_stream_h2_kp0_workload[4]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "bv_lookup_stream_h2_kp0_workload[5]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "bv_lookup_stream_h2_kp0_workload[6]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "bv_lookup_stream_h2_kp0_workload[7]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "bv_lookup_stream_h2_kp1_workload[0]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "bv_lookup_stream_h2_kp1_workload[1]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "bv_lookup_stream_h2_kp1_workload[2]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "bv_lookup_stream_h2_kp1_workload[3]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "bv_lookup_stream_h2_kp1_workload[4]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "bv_lookup_stream_h2_kp1_workload[5]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "bv_lookup_stream_h2_kp1_workload[6]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "bv_lookup_stream_h2_kp1_workload[7]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "bv_lookup_stream_h3_kp0_workload[0]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "bv_lookup_stream_h3_kp0_workload[1]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "bv_lookup_stream_h3_kp0_workload[2]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "bv_lookup_stream_h3_kp0_workload[3]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "bv_lookup_stream_h3_kp0_workload[4]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "bv_lookup_stream_h3_kp0_workload[5]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "bv_lookup_stream_h3_kp0_workload[6]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "bv_lookup_stream_h3_kp0_workload[7]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "bv_lookup_stream_h3_kp1_workload[0]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "bv_lookup_stream_h3_kp1_workload[1]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "bv_lookup_stream_h3_kp1_workload[2]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "bv_lookup_stream_h3_kp1_workload[3]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "bv_lookup_stream_h3_kp1_workload[4]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "bv_lookup_stream_h3_kp1_workload[5]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "bv_lookup_stream_h3_kp1_workload[6]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "bv_lookup_stream_h3_kp1_workload[7]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "bv_lookup_stream_h4_kp0_workload[0]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "bv_lookup_stream_h4_kp0_workload[1]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "bv_lookup_stream_h4_kp0_workload[2]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "bv_lookup_stream_h4_kp0_workload[3]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "bv_lookup_stream_h4_kp0_workload[4]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "bv_lookup_stream_h4_kp0_workload[5]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "bv_lookup_stream_h4_kp0_workload[6]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "bv_lookup_stream_h4_kp0_workload[7]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "bv_lookup_stream_h4_kp1_workload[0]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "bv_lookup_stream_h4_kp1_workload[1]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "bv_lookup_stream_h4_kp1_workload[2]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "bv_lookup_stream_h4_kp1_workload[3]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "bv_lookup_stream_h4_kp1_workload[4]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "bv_lookup_stream_h4_kp1_workload[5]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "bv_lookup_stream_h4_kp1_workload[6]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "bv_lookup_stream_h4_kp1_workload[7]": {
                    "consumed_by": [
                        "queryResult_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "hash_stream_h0_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        0
                    ]
                },
                "hash_stream_h0_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        5
                    ]
                },
                "hash_stream_h0_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        10
                    ]
                },
                "hash_stream_h0_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        15
                    ]
                },
                "hash_stream_h0_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        20
                    ]
                },
                "hash_stream_h0_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        25
                    ]
                },
                "hash_stream_h0_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        30
                    ]
                },
                "hash_stream_h0_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        35
                    ]
                },
                "hash_stream_h0_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        40
                    ]
                },
                "hash_stream_h0_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        45
                    ]
                },
                "hash_stream_h1_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        1
                    ]
                },
                "hash_stream_h1_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        6
                    ]
                },
                "hash_stream_h1_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        11
                    ]
                },
                "hash_stream_h1_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        16
                    ]
                },
                "hash_stream_h1_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        21
                    ]
                },
                "hash_stream_h1_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        26
                    ]
                },
                "hash_stream_h1_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        31
                    ]
                },
                "hash_stream_h1_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        36
                    ]
                },
                "hash_stream_h1_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        41
                    ]
                },
                "hash_stream_h1_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        46
                    ]
                },
                "hash_stream_h2_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        2
                    ]
                },
                "hash_stream_h2_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        7
                    ]
                },
                "hash_stream_h2_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        12
                    ]
                },
                "hash_stream_h2_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        17
                    ]
                },
                "hash_stream_h2_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        22
                    ]
                },
                "hash_stream_h2_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        27
                    ]
                },
                "hash_stream_h2_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        32
                    ]
                },
                "hash_stream_h2_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        37
                    ]
                },
                "hash_stream_h2_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        42
                    ]
                },
                "hash_stream_h2_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        47
                    ]
                },
                "hash_stream_h3_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        3
                    ]
                },
                "hash_stream_h3_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        8
                    ]
                },
                "hash_stream_h3_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        13
                    ]
                },
                "hash_stream_h3_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        18
                    ]
                },
                "hash_stream_h3_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        23
                    ]
                },
                "hash_stream_h3_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        28
                    ]
                },
                "hash_stream_h3_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        33
                    ]
                },
                "hash_stream_h3_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        38
                    ]
                },
                "hash_stream_h3_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        43
                    ]
                },
                "hash_stream_h3_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        48
                    ]
                },
                "hash_stream_h4_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        4
                    ]
                },
                "hash_stream_h4_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        9
                    ]
                },
                "hash_stream_h4_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        14
                    ]
                },
                "hash_stream_h4_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        19
                    ]
                },
                "hash_stream_h4_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        24
                    ]
                },
                "hash_stream_h4_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        29
                    ]
                },
                "hash_stream_h4_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        34
                    ]
                },
                "hash_stream_h4_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        39
                    ]
                },
                "hash_stream_h4_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        44
                    ]
                },
                "hash_stream_h4_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_arb_forwarder",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "computeHash_Computer",
                        49
                    ]
                },
                "inter_shuf0_stm_kp0_workload[0]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[10]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[11]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[12]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[13]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[14]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[15]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[16]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[17]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[18]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[19]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[1]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[20]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[21]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[22]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[23]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[24]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[25]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[26]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[27]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[28]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[29]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[2]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[30]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[31]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[32]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[33]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[34]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[35]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[36]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[37]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[38]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[39]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[3]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[4]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[5]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[6]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[7]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[8]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp0_workload[9]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ]
                },
                "inter_shuf0_stm_kp1_workload[0]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        25
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[10]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        26
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[11]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        26
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[12]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        26
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[13]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        26
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[14]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        26
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[15]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        26
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[16]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        27
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[17]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        27
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[18]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        27
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[19]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        27
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[1]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        25
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[20]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        27
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[21]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        27
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[22]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        27
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[23]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        27
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[24]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        28
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[25]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        28
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[26]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        28
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[27]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        28
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[28]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        28
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[29]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        28
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[2]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        25
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[30]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        28
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[31]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        28
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[32]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        29
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[33]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        29
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[34]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        29
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[35]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        29
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[36]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        29
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[37]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        29
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[38]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        29
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[39]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        29
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[3]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        25
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[4]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        25
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[5]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        25
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[6]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        25
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[7]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        25
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[8]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        26
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf0_stm_kp1_workload[9]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        26
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ]
                },
                "inter_shuf1_stm_kp0_workload[0]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[10]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[11]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[12]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[13]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[14]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[15]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[16]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[17]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[18]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[19]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[1]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[20]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[21]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[22]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[23]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[24]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[25]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[26]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[27]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[28]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[29]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[2]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[30]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[31]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[32]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[33]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[34]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[35]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[36]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[37]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[38]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[39]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[3]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[4]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[5]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[6]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[7]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[8]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp0_workload[9]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ]
                },
                "inter_shuf1_stm_kp1_workload[0]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        30
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[10]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        31
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[11]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        31
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[12]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        31
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[13]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        31
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[14]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        31
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[15]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        31
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[16]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        32
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[17]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        32
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[18]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        32
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[19]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        32
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[1]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        30
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[20]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        32
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[21]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        32
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[22]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        32
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[23]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        32
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[24]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        33
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[25]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        33
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[26]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        33
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[27]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        33
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[28]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        33
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[29]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        33
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[2]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        30
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[30]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        33
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[31]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        33
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[32]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        34
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[33]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        34
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[34]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        34
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[35]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        34
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[36]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        34
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[37]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        34
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[38]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        34
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[39]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        34
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[3]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        30
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[4]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        30
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[5]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        30
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[6]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        30
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[7]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        30
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[8]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        31
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf1_stm_kp1_workload[9]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        31
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ]
                },
                "inter_shuf2_stm_kp0_workload[0]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        10
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[10]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        11
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[11]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        11
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[12]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        11
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[13]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        11
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[14]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        11
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[15]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        11
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[16]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        12
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[17]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        12
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[18]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        12
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[19]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        12
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[1]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        10
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[20]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        12
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[21]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        12
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[22]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        12
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[23]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        12
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[24]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        13
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[25]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        13
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[26]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        13
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[27]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        13
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[28]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        13
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[29]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        13
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[2]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        10
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[30]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        13
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[31]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        13
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[32]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        14
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[33]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        14
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[34]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        14
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[35]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        14
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[36]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        14
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[37]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        14
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[38]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        14
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[39]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        14
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[3]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        10
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[4]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        10
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[5]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        10
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[6]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        10
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[7]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        10
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[8]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        11
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp0_workload[9]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        11
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ]
                },
                "inter_shuf2_stm_kp1_workload[0]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        35
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[10]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        36
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[11]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        36
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[12]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        36
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[13]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        36
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[14]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        36
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[15]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        36
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[16]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        37
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[17]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        37
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[18]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        37
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[19]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        37
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[1]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        35
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[20]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        37
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[21]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        37
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[22]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        37
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[23]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        37
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[24]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        38
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[25]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        38
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[26]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        38
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[27]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        38
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[28]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        38
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[29]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        38
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[2]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        35
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[30]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        38
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[31]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        38
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[32]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        39
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[33]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        39
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[34]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        39
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[35]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        39
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[36]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        39
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[37]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        39
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[38]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        39
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[39]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        39
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[3]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        35
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[4]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        35
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[5]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        35
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[6]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        35
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[7]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        35
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[8]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        36
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf2_stm_kp1_workload[9]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        36
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ]
                },
                "inter_shuf3_stm_kp0_workload[0]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        15
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[10]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        16
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[11]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        16
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[12]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        16
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[13]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        16
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[14]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        16
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[15]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        16
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[16]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        17
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[17]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        17
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[18]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        17
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[19]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        17
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[1]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        15
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[20]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        17
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[21]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        17
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[22]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        17
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[23]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        17
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[24]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        18
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[25]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        18
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[26]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        18
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[27]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        18
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[28]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        18
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[29]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        18
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[2]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        15
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[30]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        18
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[31]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        18
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[32]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        19
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[33]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        19
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[34]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        19
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[35]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        19
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[36]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        19
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[37]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        19
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[38]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        19
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[39]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        19
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[3]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        15
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[4]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        15
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[5]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        15
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[6]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        15
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[7]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        15
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[8]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        16
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp0_workload[9]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        16
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ]
                },
                "inter_shuf3_stm_kp1_workload[0]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        40
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[10]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        41
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[11]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        41
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[12]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        41
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[13]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        41
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[14]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        41
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[15]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        41
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[16]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        42
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[17]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        42
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[18]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        42
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[19]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        42
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[1]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        40
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[20]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        42
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[21]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        42
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[22]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        42
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[23]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        42
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[24]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        43
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[25]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        43
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[26]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        43
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[27]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        43
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[28]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        43
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[29]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        43
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[2]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        40
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[30]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        43
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[31]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        43
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[32]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        44
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[33]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        44
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[34]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        44
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[35]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        44
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[36]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        44
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[37]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        44
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[38]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        44
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[39]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        44
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[3]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        40
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[4]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        40
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[5]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        40
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[6]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        40
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[7]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        40
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[8]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        41
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf3_stm_kp1_workload[9]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        41
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ]
                },
                "inter_shuf4_stm_kp0_workload[0]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        20
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[10]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        21
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[11]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        21
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[12]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        21
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[13]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        21
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[14]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        21
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[15]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        21
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[16]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        22
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[17]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        22
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[18]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        22
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[19]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        22
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[1]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        20
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[20]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        22
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[21]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        22
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[22]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        22
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[23]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        22
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[24]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        23
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[25]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        23
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[26]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        23
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[27]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        23
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[28]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        23
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[29]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        23
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[2]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        20
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[30]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        23
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[31]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        23
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[32]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        24
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[33]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        24
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[34]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        24
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[35]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        24
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[36]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        24
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[37]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        24
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[38]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        24
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[39]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        24
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[3]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        20
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[4]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        20
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[5]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        20
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[6]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        20
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[7]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        20
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[8]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        21
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp0_workload[9]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        21
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ]
                },
                "inter_shuf4_stm_kp1_workload[0]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        45
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[10]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        46
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[11]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        46
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[12]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        46
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[13]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        46
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[14]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        46
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[15]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        46
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[16]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        47
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[17]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        47
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[18]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        47
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[19]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        47
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[1]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        45
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[20]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        47
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[21]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        47
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[22]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        47
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[23]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        47
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[24]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        48
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[25]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        48
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[26]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        48
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[27]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        48
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[28]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        48
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[29]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        48
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[2]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        45
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[30]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        48
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[31]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        48
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[32]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        49
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[33]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        49
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[34]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        49
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[35]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        49
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[36]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        49
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[37]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        49
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[38]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        49
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[39]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        49
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[3]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        45
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[4]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        45
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[5]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        45
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[6]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        45
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[7]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        45
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[8]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        46
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "inter_shuf4_stm_kp1_workload[9]": {
                    "consumed_by": [
                        "shuffle_reordering_per_hash",
                        46
                    ],
                    "depth": 2,
                    "produced_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ]
                },
                "key_stream_kp0_workload[0]": {
                    "consumed_by": [
                        "computeHash_Feeder",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadKey",
                        0
                    ]
                },
                "key_stream_kp0_workload[1]": {
                    "consumed_by": [
                        "computeHash_Feeder",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadKey",
                        0
                    ]
                },
                "key_stream_kp0_workload[2]": {
                    "consumed_by": [
                        "computeHash_Feeder",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadKey",
                        0
                    ]
                },
                "key_stream_kp0_workload[3]": {
                    "consumed_by": [
                        "computeHash_Feeder",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadKey",
                        0
                    ]
                },
                "key_stream_kp0_workload[4]": {
                    "consumed_by": [
                        "computeHash_Feeder",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadKey",
                        0
                    ]
                },
                "key_stream_kp1_workload[0]": {
                    "consumed_by": [
                        "computeHash_Feeder",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadKey",
                        0
                    ]
                },
                "key_stream_kp1_workload[1]": {
                    "consumed_by": [
                        "computeHash_Feeder",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadKey",
                        0
                    ]
                },
                "key_stream_kp1_workload[2]": {
                    "consumed_by": [
                        "computeHash_Feeder",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadKey",
                        0
                    ]
                },
                "key_stream_kp1_workload[3]": {
                    "consumed_by": [
                        "computeHash_Feeder",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadKey",
                        0
                    ]
                },
                "key_stream_kp1_workload[4]": {
                    "consumed_by": [
                        "computeHash_Feeder",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "loadKey",
                        0
                    ]
                },
                "key_tmp_stream_0_kp0_workload[0]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        0
                    ]
                },
                "key_tmp_stream_0_kp0_workload[1]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        0
                    ]
                },
                "key_tmp_stream_0_kp0_workload[2]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        0
                    ]
                },
                "key_tmp_stream_0_kp0_workload[3]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        0
                    ]
                },
                "key_tmp_stream_0_kp0_workload[4]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        0
                    ]
                },
                "key_tmp_stream_0_kp1_workload[0]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        25
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        5
                    ]
                },
                "key_tmp_stream_0_kp1_workload[1]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        26
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        5
                    ]
                },
                "key_tmp_stream_0_kp1_workload[2]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        27
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        5
                    ]
                },
                "key_tmp_stream_0_kp1_workload[3]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        28
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        5
                    ]
                },
                "key_tmp_stream_0_kp1_workload[4]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        29
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        5
                    ]
                },
                "key_tmp_stream_1_kp0_workload[0]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        1
                    ]
                },
                "key_tmp_stream_1_kp0_workload[1]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        1
                    ]
                },
                "key_tmp_stream_1_kp0_workload[2]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        1
                    ]
                },
                "key_tmp_stream_1_kp0_workload[3]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        1
                    ]
                },
                "key_tmp_stream_1_kp0_workload[4]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        1
                    ]
                },
                "key_tmp_stream_1_kp1_workload[0]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        30
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        6
                    ]
                },
                "key_tmp_stream_1_kp1_workload[1]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        31
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        6
                    ]
                },
                "key_tmp_stream_1_kp1_workload[2]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        32
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        6
                    ]
                },
                "key_tmp_stream_1_kp1_workload[3]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        33
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        6
                    ]
                },
                "key_tmp_stream_1_kp1_workload[4]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        34
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        6
                    ]
                },
                "key_tmp_stream_2_kp0_workload[0]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        10
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        2
                    ]
                },
                "key_tmp_stream_2_kp0_workload[1]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        11
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        2
                    ]
                },
                "key_tmp_stream_2_kp0_workload[2]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        12
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        2
                    ]
                },
                "key_tmp_stream_2_kp0_workload[3]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        13
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        2
                    ]
                },
                "key_tmp_stream_2_kp0_workload[4]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        14
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        2
                    ]
                },
                "key_tmp_stream_2_kp1_workload[0]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        35
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        7
                    ]
                },
                "key_tmp_stream_2_kp1_workload[1]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        36
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        7
                    ]
                },
                "key_tmp_stream_2_kp1_workload[2]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        37
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        7
                    ]
                },
                "key_tmp_stream_2_kp1_workload[3]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        38
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        7
                    ]
                },
                "key_tmp_stream_2_kp1_workload[4]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        39
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        7
                    ]
                },
                "key_tmp_stream_3_kp0_workload[0]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        15
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        3
                    ]
                },
                "key_tmp_stream_3_kp0_workload[1]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        16
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        3
                    ]
                },
                "key_tmp_stream_3_kp0_workload[2]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        17
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        3
                    ]
                },
                "key_tmp_stream_3_kp0_workload[3]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        18
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        3
                    ]
                },
                "key_tmp_stream_3_kp0_workload[4]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        19
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        3
                    ]
                },
                "key_tmp_stream_3_kp1_workload[0]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        40
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        8
                    ]
                },
                "key_tmp_stream_3_kp1_workload[1]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        41
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        8
                    ]
                },
                "key_tmp_stream_3_kp1_workload[2]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        42
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        8
                    ]
                },
                "key_tmp_stream_3_kp1_workload[3]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        43
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        8
                    ]
                },
                "key_tmp_stream_3_kp1_workload[4]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        44
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        8
                    ]
                },
                "key_tmp_stream_4_kp0_workload[0]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        20
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        4
                    ]
                },
                "key_tmp_stream_4_kp0_workload[1]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        21
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        4
                    ]
                },
                "key_tmp_stream_4_kp0_workload[2]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        22
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        4
                    ]
                },
                "key_tmp_stream_4_kp0_workload[3]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        23
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        4
                    ]
                },
                "key_tmp_stream_4_kp0_workload[4]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        24
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        4
                    ]
                },
                "key_tmp_stream_4_kp1_workload[0]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        45
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        9
                    ]
                },
                "key_tmp_stream_4_kp1_workload[1]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        46
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        9
                    ]
                },
                "key_tmp_stream_4_kp1_workload[2]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        47
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        9
                    ]
                },
                "key_tmp_stream_4_kp1_workload[3]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        48
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        9
                    ]
                },
                "key_tmp_stream_4_kp1_workload[4]": {
                    "consumed_by": [
                        "computeHash_Computer",
                        49
                    ],
                    "depth": 2,
                    "produced_by": [
                        "computeHash_Feeder",
                        9
                    ]
                },
                "packed_output_stm_kp0_workload[0]": {
                    "consumed_by": [
                        "writeOutput_synchronous",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "packOutput",
                        0
                    ]
                },
                "packed_output_stm_kp0_workload[1]": {
                    "consumed_by": [
                        "writeOutput_synchronous",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "packOutput",
                        1
                    ]
                },
                "packed_output_stm_kp0_workload[2]": {
                    "consumed_by": [
                        "writeOutput_synchronous",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "packOutput",
                        2
                    ]
                },
                "packed_output_stm_kp0_workload[3]": {
                    "consumed_by": [
                        "writeOutput_synchronous",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "packOutput",
                        3
                    ]
                },
                "packed_output_stm_kp0_workload[4]": {
                    "consumed_by": [
                        "writeOutput_synchronous",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "packOutput",
                        4
                    ]
                },
                "packed_output_stm_kp1_workload[0]": {
                    "consumed_by": [
                        "writeOutput_synchronous",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "packOutput",
                        5
                    ]
                },
                "packed_output_stm_kp1_workload[1]": {
                    "consumed_by": [
                        "writeOutput_synchronous",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "packOutput",
                        6
                    ]
                },
                "packed_output_stm_kp1_workload[2]": {
                    "consumed_by": [
                        "writeOutput_synchronous",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "packOutput",
                        7
                    ]
                },
                "packed_output_stm_kp1_workload[3]": {
                    "consumed_by": [
                        "writeOutput_synchronous",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "packOutput",
                        8
                    ]
                },
                "packed_output_stm_kp1_workload[4]": {
                    "consumed_by": [
                        "writeOutput_synchronous",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "packOutput",
                        9
                    ]
                },
                "query_bv_packed_stream_hash0_kp0_workload[0]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp0_workload[1]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp0_workload[2]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp0_workload[3]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp0_workload[4]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp0_workload[5]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp0_workload[6]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp0_workload[7]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp1_workload[0]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp1_workload[1]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp1_workload[2]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp1_workload[3]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp1_workload[4]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp1_workload[5]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp1_workload[6]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash0_kp1_workload[7]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        0
                    ]
                },
                "query_bv_packed_stream_hash1_kp0_workload[0]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp0_workload[1]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp0_workload[2]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp0_workload[3]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp0_workload[4]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp0_workload[5]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp0_workload[6]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp0_workload[7]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp1_workload[0]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp1_workload[1]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp1_workload[2]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp1_workload[3]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp1_workload[4]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp1_workload[5]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp1_workload[6]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash1_kp1_workload[7]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        1
                    ]
                },
                "query_bv_packed_stream_hash2_kp0_workload[0]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp0_workload[1]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp0_workload[2]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp0_workload[3]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp0_workload[4]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp0_workload[5]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp0_workload[6]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp0_workload[7]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp1_workload[0]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp1_workload[1]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp1_workload[2]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp1_workload[3]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp1_workload[4]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp1_workload[5]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp1_workload[6]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash2_kp1_workload[7]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        2
                    ]
                },
                "query_bv_packed_stream_hash3_kp0_workload[0]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp0_workload[1]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp0_workload[2]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp0_workload[3]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp0_workload[4]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp0_workload[5]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp0_workload[6]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp0_workload[7]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp1_workload[0]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp1_workload[1]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp1_workload[2]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp1_workload[3]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp1_workload[4]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp1_workload[5]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp1_workload[6]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash3_kp1_workload[7]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        3
                    ]
                },
                "query_bv_packed_stream_hash4_kp0_workload[0]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp0_workload[1]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp0_workload[2]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp0_workload[3]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp0_workload[4]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp0_workload[5]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp0_workload[6]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp0_workload[7]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp1_workload[0]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp1_workload[1]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp1_workload[2]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp1_workload[3]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp1_workload[4]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp1_workload[5]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp1_workload[6]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "query_bv_packed_stream_hash4_kp1_workload[7]": {
                    "consumed_by": [
                        "shuffle_TtoS_per_hash",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "queryResult_per_hash",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        0
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        1
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_0_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        2
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_0_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        3
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        32
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        33
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_1_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        34
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_1_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        35
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        64
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        65
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_2_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        66
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_2_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        67
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        96
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        97
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_3_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        98
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_3_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        99
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        128
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        129
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_4_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        130
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_4_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        131
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        160
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        161
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_5_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        162
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_5_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        163
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        192
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        193
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_6_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        194
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_6_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        195
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        224
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        225
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_7_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        226
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_7_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        227
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        256
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        257
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_8_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        258
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_8_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        259
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        288
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        289
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_9_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        290
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p0_bloom_single_arbiter_9_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        291
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        4
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        5
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_0_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        6
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_0_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        7
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        36
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        37
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_1_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        38
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_1_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        39
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        68
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        69
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_2_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        70
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_2_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        71
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        100
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        101
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_3_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        102
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_3_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        103
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        132
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        133
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_4_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        134
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_4_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        135
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        164
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        165
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_5_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        166
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_5_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        167
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        196
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        197
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_6_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        198
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_6_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        199
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        228
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        229
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_7_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        230
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_7_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        231
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        260
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        261
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_8_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        262
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_8_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        263
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        292
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        293
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_9_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        294
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p1_bloom_single_arbiter_9_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        295
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        8
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        9
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_0_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        10
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_0_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        11
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        40
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        41
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_1_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        42
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_1_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        43
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        72
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        73
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_2_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        74
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_2_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        75
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        104
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        105
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_3_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        106
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_3_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        107
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        136
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        137
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_4_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        138
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_4_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        139
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        168
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        169
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_5_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        170
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_5_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        171
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        200
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        201
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_6_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        202
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_6_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        203
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        232
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        233
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_7_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        234
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_7_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        235
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        264
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        265
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_8_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        266
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_8_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        267
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        296
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        297
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_9_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        298
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p2_bloom_single_arbiter_9_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        299
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        12
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        13
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_0_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        14
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_0_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        15
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        44
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        45
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_1_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        46
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_1_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        47
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        76
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        77
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_2_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        78
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_2_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        79
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        108
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        109
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_3_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        110
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_3_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        111
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        140
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        141
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_4_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        142
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_4_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        143
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        172
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        173
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_5_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        174
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_5_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        175
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        204
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        205
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_6_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        206
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_6_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        207
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        236
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        237
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_7_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        238
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_7_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        239
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        268
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        269
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_8_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        270
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_8_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        271
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        300
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        301
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_9_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        302
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p3_bloom_single_arbiter_9_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        303
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        16
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        17
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_0_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        18
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_0_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        19
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        48
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        49
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_1_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        50
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_1_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        51
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        80
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        81
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_2_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        82
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_2_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        83
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        112
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        113
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_3_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        114
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_3_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        115
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        144
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        145
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_4_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        146
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_4_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        147
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        176
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        177
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_5_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        178
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_5_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        179
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        208
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        209
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_6_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        210
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_6_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        211
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        240
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        241
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_7_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        242
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_7_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        243
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        272
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        273
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_8_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        274
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_8_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        275
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        304
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        305
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_9_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        306
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p4_bloom_single_arbiter_9_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        307
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        20
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        21
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_0_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        22
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_0_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        23
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        52
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        53
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_1_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        54
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_1_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        55
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        84
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        85
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_2_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        86
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_2_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        87
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        116
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        117
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_3_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        118
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_3_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        119
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        148
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        149
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_4_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        150
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_4_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        151
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        180
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        181
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_5_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        182
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_5_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        183
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        212
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        213
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_6_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        214
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_6_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        215
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        244
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        245
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_7_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        246
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_7_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        247
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        276
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        277
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_8_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        278
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_8_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        279
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        308
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        309
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_9_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        310
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p5_bloom_single_arbiter_9_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        311
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        24
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        25
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_0_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        26
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_0_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        27
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        56
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        57
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_1_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        58
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_1_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        59
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        88
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        89
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_2_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        90
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_2_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        91
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        120
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        121
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_3_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        122
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_3_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        123
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        152
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        153
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_4_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        154
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_4_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        155
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        184
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        185
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_5_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        186
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_5_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        187
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        216
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        217
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_6_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        218
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_6_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        219
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        248
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        249
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_7_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        250
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_7_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        251
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        280
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        281
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_8_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        282
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_8_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        283
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        312
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        313
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_9_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        314
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p6_bloom_single_arbiter_9_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        315
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_0_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        28
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_0_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        29
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_0_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        30
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_0_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        31
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        0
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_1_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        60
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_1_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        61
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_1_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        62
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_1_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        63
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        1
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_2_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        92
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_2_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        93
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_2_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        94
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_2_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        95
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        2
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_3_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        124
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_3_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        125
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_3_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        126
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_3_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        127
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        3
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_4_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        156
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_4_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        157
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_4_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        158
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_4_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        159
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        4
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_5_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        188
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_5_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        189
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_5_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        190
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_5_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        191
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        5
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_6_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        220
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_6_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        221
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_6_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        222
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_6_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        223
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        6
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_7_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        252
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_7_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        253
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_7_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        254
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_7_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        255
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        7
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_8_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        284
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_8_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        285
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_8_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        286
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_8_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        287
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        8
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_9_workload[0]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        316
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_9_workload[1]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        317
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_9_workload[2]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        318
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "ratemon_fdbk_streams_p7_bloom_single_arbiter_9_workload[3]": {
                    "consumed_by": [
                        "bloom_hier_arbiter_atom",
                        319
                    ],
                    "depth": 2,
                    "produced_by": [
                        "bloom_arbiter_ratemonitor",
                        9
                    ]
                },
                "reconstruct_stream_stm0_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        0
                    ]
                },
                "reconstruct_stream_stm0_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        5
                    ]
                },
                "reconstruct_stream_stm0_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        10
                    ]
                },
                "reconstruct_stream_stm0_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        15
                    ]
                },
                "reconstruct_stream_stm0_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        0
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        20
                    ]
                },
                "reconstruct_stream_stm0_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        25
                    ]
                },
                "reconstruct_stream_stm0_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        30
                    ]
                },
                "reconstruct_stream_stm0_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        35
                    ]
                },
                "reconstruct_stream_stm0_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        40
                    ]
                },
                "reconstruct_stream_stm0_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        5
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        45
                    ]
                },
                "reconstruct_stream_stm1_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        1
                    ]
                },
                "reconstruct_stream_stm1_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        6
                    ]
                },
                "reconstruct_stream_stm1_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        11
                    ]
                },
                "reconstruct_stream_stm1_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        16
                    ]
                },
                "reconstruct_stream_stm1_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        1
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        21
                    ]
                },
                "reconstruct_stream_stm1_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        26
                    ]
                },
                "reconstruct_stream_stm1_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        31
                    ]
                },
                "reconstruct_stream_stm1_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        36
                    ]
                },
                "reconstruct_stream_stm1_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        41
                    ]
                },
                "reconstruct_stream_stm1_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        6
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        46
                    ]
                },
                "reconstruct_stream_stm2_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        2
                    ]
                },
                "reconstruct_stream_stm2_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        7
                    ]
                },
                "reconstruct_stream_stm2_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        12
                    ]
                },
                "reconstruct_stream_stm2_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        17
                    ]
                },
                "reconstruct_stream_stm2_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        2
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        22
                    ]
                },
                "reconstruct_stream_stm2_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        27
                    ]
                },
                "reconstruct_stream_stm2_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        32
                    ]
                },
                "reconstruct_stream_stm2_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        37
                    ]
                },
                "reconstruct_stream_stm2_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        42
                    ]
                },
                "reconstruct_stream_stm2_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        7
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        47
                    ]
                },
                "reconstruct_stream_stm3_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        3
                    ]
                },
                "reconstruct_stream_stm3_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        8
                    ]
                },
                "reconstruct_stream_stm3_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        13
                    ]
                },
                "reconstruct_stream_stm3_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        18
                    ]
                },
                "reconstruct_stream_stm3_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        3
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        23
                    ]
                },
                "reconstruct_stream_stm3_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        28
                    ]
                },
                "reconstruct_stream_stm3_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        33
                    ]
                },
                "reconstruct_stream_stm3_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        38
                    ]
                },
                "reconstruct_stream_stm3_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        43
                    ]
                },
                "reconstruct_stream_stm3_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        8
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        48
                    ]
                },
                "reconstruct_stream_stm4_kp0_workload[0]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        4
                    ]
                },
                "reconstruct_stream_stm4_kp0_workload[1]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        9
                    ]
                },
                "reconstruct_stream_stm4_kp0_workload[2]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        14
                    ]
                },
                "reconstruct_stream_stm4_kp0_workload[3]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        19
                    ]
                },
                "reconstruct_stream_stm4_kp0_workload[4]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        4
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        24
                    ]
                },
                "reconstruct_stream_stm4_kp1_workload[0]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        29
                    ]
                },
                "reconstruct_stream_stm4_kp1_workload[1]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        34
                    ]
                },
                "reconstruct_stream_stm4_kp1_workload[2]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        39
                    ]
                },
                "reconstruct_stream_stm4_kp1_workload[3]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        44
                    ]
                },
                "reconstruct_stream_stm4_kp1_workload[4]": {
                    "consumed_by": [
                        "bloom_aggregate_SPLIT",
                        9
                    ],
                    "depth": 3,
                    "produced_by": [
                        "shuffle_reordering_per_hash",
                        49
                    ]
                }
            },
            "frt_interface": "#include <sstream>\n#include <stdexcept>\n#include <frt.h>\n\n\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        uint64_t  outmmap\n);\n/*************************************************************************************/\nvoid workload(\n    tapa::mmap<BV_LOAD_DTYPE> input_bv\n    ,tapa::mmap<LOAD_DTYPE> key_in\n    ,tapa::mmap<STORE_DTYPE> out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n{\n#define TAPAB_APP \"TAPAB_workload\"\n#define TAPAB \"TAPAB\"\n  const char* _tapa_bitstream = nullptr;\n  if ((_tapa_bitstream = getenv(TAPAB_APP)) ||\n      (_tapa_bitstream = getenv(TAPAB))) {\n    fpga::Instance _tapa_instance(_tapa_bitstream);\n    int _tapa_arg_index = 0;\n    for (const auto& _tapa_arg_info : _tapa_instance.GetArgsInfo()) {\n      if (false) {\n      } else if (_tapa_arg_info.name == \"input_bv\") {\n        auto _tapa_arg = fpga::ReadWrite(input_bv.get(), input_bv.size());\n        _tapa_instance.SetArg(_tapa_arg_index, _tapa_arg);\n      } else if (_tapa_arg_info.name == \"key_in\") {\n        auto _tapa_arg = fpga::ReadWrite(key_in.get(), key_in.size());\n        _tapa_instance.SetArg(_tapa_arg_index, _tapa_arg);\n      } else if (_tapa_arg_info.name == \"out_bits\") {\n        auto _tapa_arg = fpga::ReadWrite(out_bits.get(), out_bits.size());\n        _tapa_instance.SetArg(_tapa_arg_index, _tapa_arg);\n      } else if (_tapa_arg_info.name == \"UNUSED_DUMMY\") {\n        _tapa_instance.SetArg(_tapa_arg_index, UNUSED_DUMMY);\n      } else {\n        std::stringstream ss;\n        ss << \"unknown argument: \" << _tapa_arg_info;\n        throw std::runtime_error(ss.str());\n      }\n      ++_tapa_arg_index;\n    }\n    _tapa_instance.WriteToDevice();\n    _tapa_instance.Exec();\n    _tapa_instance.ReadFromDevice();\n    _tapa_instance.Finish();\n  } else {\n    throw std::runtime_error(\"no bitstream found; please set `\" TAPAB_APP\n                             \"` or `\" TAPAB \"`\");\n  }\n}\n",
            "level": "upper",
            "ports": [
                {
                    "cat": "mmap",
                    "name": "input_bv",
                    "type": "BV_LOAD_DTYPE*",
                    "width": 256
                },
                {
                    "cat": "mmap",
                    "name": "key_in",
                    "type": "LOAD_DTYPE*",
                    "width": 512
                },
                {
                    "cat": "mmap",
                    "name": "out_bits",
                    "type": "STORE_DTYPE*",
                    "width": 512
                },
                {
                    "cat": "scalar",
                    "name": "UNUSED_DUMMY",
                    "type": "int",
                    "width": 32
                }
            ],
            "target": "hls",
            "tasks": {
                "bloom_aggregate_SPLIT": [
                    {
                        "args": {
                            "agg_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream[0]": {
                                "arg": "reconstruct_stream_stm0_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[1]": {
                                "arg": "reconstruct_stream_stm0_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[2]": {
                                "arg": "reconstruct_stream_stm0_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[3]": {
                                "arg": "reconstruct_stream_stm0_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[4]": {
                                "arg": "reconstruct_stream_stm0_kp0_workload[4]",
                                "cat": "istream"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "agg_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream[0]": {
                                "arg": "reconstruct_stream_stm1_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[1]": {
                                "arg": "reconstruct_stream_stm1_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[2]": {
                                "arg": "reconstruct_stream_stm1_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[3]": {
                                "arg": "reconstruct_stream_stm1_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[4]": {
                                "arg": "reconstruct_stream_stm1_kp0_workload[4]",
                                "cat": "istream"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "agg_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream[0]": {
                                "arg": "reconstruct_stream_stm2_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[1]": {
                                "arg": "reconstruct_stream_stm2_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[2]": {
                                "arg": "reconstruct_stream_stm2_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[3]": {
                                "arg": "reconstruct_stream_stm2_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[4]": {
                                "arg": "reconstruct_stream_stm2_kp0_workload[4]",
                                "cat": "istream"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "agg_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream[0]": {
                                "arg": "reconstruct_stream_stm3_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[1]": {
                                "arg": "reconstruct_stream_stm3_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[2]": {
                                "arg": "reconstruct_stream_stm3_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[3]": {
                                "arg": "reconstruct_stream_stm3_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[4]": {
                                "arg": "reconstruct_stream_stm3_kp0_workload[4]",
                                "cat": "istream"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "agg_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream[0]": {
                                "arg": "reconstruct_stream_stm4_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[1]": {
                                "arg": "reconstruct_stream_stm4_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[2]": {
                                "arg": "reconstruct_stream_stm4_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[3]": {
                                "arg": "reconstruct_stream_stm4_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[4]": {
                                "arg": "reconstruct_stream_stm4_kp0_workload[4]",
                                "cat": "istream"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "agg_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream[0]": {
                                "arg": "reconstruct_stream_stm0_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[1]": {
                                "arg": "reconstruct_stream_stm0_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[2]": {
                                "arg": "reconstruct_stream_stm0_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[3]": {
                                "arg": "reconstruct_stream_stm0_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[4]": {
                                "arg": "reconstruct_stream_stm0_kp1_workload[4]",
                                "cat": "istream"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "agg_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream[0]": {
                                "arg": "reconstruct_stream_stm1_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[1]": {
                                "arg": "reconstruct_stream_stm1_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[2]": {
                                "arg": "reconstruct_stream_stm1_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[3]": {
                                "arg": "reconstruct_stream_stm1_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[4]": {
                                "arg": "reconstruct_stream_stm1_kp1_workload[4]",
                                "cat": "istream"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "agg_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream[0]": {
                                "arg": "reconstruct_stream_stm2_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[1]": {
                                "arg": "reconstruct_stream_stm2_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[2]": {
                                "arg": "reconstruct_stream_stm2_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[3]": {
                                "arg": "reconstruct_stream_stm2_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[4]": {
                                "arg": "reconstruct_stream_stm2_kp1_workload[4]",
                                "cat": "istream"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "agg_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream[0]": {
                                "arg": "reconstruct_stream_stm3_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[1]": {
                                "arg": "reconstruct_stream_stm3_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[2]": {
                                "arg": "reconstruct_stream_stm3_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[3]": {
                                "arg": "reconstruct_stream_stm3_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[4]": {
                                "arg": "reconstruct_stream_stm3_kp1_workload[4]",
                                "cat": "istream"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "agg_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream[0]": {
                                "arg": "reconstruct_stream_stm4_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[1]": {
                                "arg": "reconstruct_stream_stm4_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[2]": {
                                "arg": "reconstruct_stream_stm4_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[3]": {
                                "arg": "reconstruct_stream_stm4_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "reconstruct_stream[4]": {
                                "arg": "reconstruct_stream_stm4_kp1_workload[4]",
                                "cat": "istream"
                            }
                        },
                        "step": 0
                    }
                ],
                "bloom_arb_forwarder": [
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "arb_stream[0]": {
                                "arg": "arb0_streams_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream[10]": {
                                "arg": "arb0_streams_kp0_workload[10]",
                                "cat": "ostream"
                            },
                            "arb_stream[11]": {
                                "arg": "arb0_streams_kp0_workload[11]",
                                "cat": "ostream"
                            },
                            "arb_stream[12]": {
                                "arg": "arb0_streams_kp0_workload[12]",
                                "cat": "ostream"
                            },
                            "arb_stream[13]": {
                                "arg": "arb0_streams_kp0_workload[13]",
                                "cat": "ostream"
                            },
                            "arb_stream[14]": {
                                "arg": "arb0_streams_kp0_workload[14]",
                                "cat": "ostream"
                            },
                            "arb_stream[15]": {
                                "arg": "arb0_streams_kp0_workload[15]",
                                "cat": "ostream"
                            },
                            "arb_stream[16]": {
                                "arg": "arb0_streams_kp0_workload[16]",
                                "cat": "ostream"
                            },
                            "arb_stream[17]": {
                                "arg": "arb0_streams_kp0_workload[17]",
                                "cat": "ostream"
                            },
                            "arb_stream[18]": {
                                "arg": "arb0_streams_kp0_workload[18]",
                                "cat": "ostream"
                            },
                            "arb_stream[19]": {
                                "arg": "arb0_streams_kp0_workload[19]",
                                "cat": "ostream"
                            },
                            "arb_stream[1]": {
                                "arg": "arb0_streams_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream[20]": {
                                "arg": "arb0_streams_kp0_workload[20]",
                                "cat": "ostream"
                            },
                            "arb_stream[21]": {
                                "arg": "arb0_streams_kp0_workload[21]",
                                "cat": "ostream"
                            },
                            "arb_stream[22]": {
                                "arg": "arb0_streams_kp0_workload[22]",
                                "cat": "ostream"
                            },
                            "arb_stream[23]": {
                                "arg": "arb0_streams_kp0_workload[23]",
                                "cat": "ostream"
                            },
                            "arb_stream[24]": {
                                "arg": "arb0_streams_kp0_workload[24]",
                                "cat": "ostream"
                            },
                            "arb_stream[25]": {
                                "arg": "arb0_streams_kp0_workload[25]",
                                "cat": "ostream"
                            },
                            "arb_stream[26]": {
                                "arg": "arb0_streams_kp0_workload[26]",
                                "cat": "ostream"
                            },
                            "arb_stream[27]": {
                                "arg": "arb0_streams_kp0_workload[27]",
                                "cat": "ostream"
                            },
                            "arb_stream[28]": {
                                "arg": "arb0_streams_kp0_workload[28]",
                                "cat": "ostream"
                            },
                            "arb_stream[29]": {
                                "arg": "arb0_streams_kp0_workload[29]",
                                "cat": "ostream"
                            },
                            "arb_stream[2]": {
                                "arg": "arb0_streams_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream[30]": {
                                "arg": "arb0_streams_kp0_workload[30]",
                                "cat": "ostream"
                            },
                            "arb_stream[31]": {
                                "arg": "arb0_streams_kp0_workload[31]",
                                "cat": "ostream"
                            },
                            "arb_stream[32]": {
                                "arg": "arb0_streams_kp0_workload[32]",
                                "cat": "ostream"
                            },
                            "arb_stream[33]": {
                                "arg": "arb0_streams_kp0_workload[33]",
                                "cat": "ostream"
                            },
                            "arb_stream[34]": {
                                "arg": "arb0_streams_kp0_workload[34]",
                                "cat": "ostream"
                            },
                            "arb_stream[35]": {
                                "arg": "arb0_streams_kp0_workload[35]",
                                "cat": "ostream"
                            },
                            "arb_stream[36]": {
                                "arg": "arb0_streams_kp0_workload[36]",
                                "cat": "ostream"
                            },
                            "arb_stream[37]": {
                                "arg": "arb0_streams_kp0_workload[37]",
                                "cat": "ostream"
                            },
                            "arb_stream[38]": {
                                "arg": "arb0_streams_kp0_workload[38]",
                                "cat": "ostream"
                            },
                            "arb_stream[39]": {
                                "arg": "arb0_streams_kp0_workload[39]",
                                "cat": "ostream"
                            },
                            "arb_stream[3]": {
                                "arg": "arb0_streams_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream[4]": {
                                "arg": "arb0_streams_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream[5]": {
                                "arg": "arb0_streams_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream[6]": {
                                "arg": "arb0_streams_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream[7]": {
                                "arg": "arb0_streams_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "arb_stream[8]": {
                                "arg": "arb0_streams_kp0_workload[8]",
                                "cat": "ostream"
                            },
                            "arb_stream[9]": {
                                "arg": "arb0_streams_kp0_workload[9]",
                                "cat": "ostream"
                            },
                            "hash_stream[0]": {
                                "arg": "hash_stream_h0_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "hash_stream[1]": {
                                "arg": "hash_stream_h0_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "hash_stream[2]": {
                                "arg": "hash_stream_h0_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "hash_stream[3]": {
                                "arg": "hash_stream_h0_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "hash_stream[4]": {
                                "arg": "hash_stream_h0_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "arb_stream[0]": {
                                "arg": "arb1_streams_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream[10]": {
                                "arg": "arb1_streams_kp0_workload[10]",
                                "cat": "ostream"
                            },
                            "arb_stream[11]": {
                                "arg": "arb1_streams_kp0_workload[11]",
                                "cat": "ostream"
                            },
                            "arb_stream[12]": {
                                "arg": "arb1_streams_kp0_workload[12]",
                                "cat": "ostream"
                            },
                            "arb_stream[13]": {
                                "arg": "arb1_streams_kp0_workload[13]",
                                "cat": "ostream"
                            },
                            "arb_stream[14]": {
                                "arg": "arb1_streams_kp0_workload[14]",
                                "cat": "ostream"
                            },
                            "arb_stream[15]": {
                                "arg": "arb1_streams_kp0_workload[15]",
                                "cat": "ostream"
                            },
                            "arb_stream[16]": {
                                "arg": "arb1_streams_kp0_workload[16]",
                                "cat": "ostream"
                            },
                            "arb_stream[17]": {
                                "arg": "arb1_streams_kp0_workload[17]",
                                "cat": "ostream"
                            },
                            "arb_stream[18]": {
                                "arg": "arb1_streams_kp0_workload[18]",
                                "cat": "ostream"
                            },
                            "arb_stream[19]": {
                                "arg": "arb1_streams_kp0_workload[19]",
                                "cat": "ostream"
                            },
                            "arb_stream[1]": {
                                "arg": "arb1_streams_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream[20]": {
                                "arg": "arb1_streams_kp0_workload[20]",
                                "cat": "ostream"
                            },
                            "arb_stream[21]": {
                                "arg": "arb1_streams_kp0_workload[21]",
                                "cat": "ostream"
                            },
                            "arb_stream[22]": {
                                "arg": "arb1_streams_kp0_workload[22]",
                                "cat": "ostream"
                            },
                            "arb_stream[23]": {
                                "arg": "arb1_streams_kp0_workload[23]",
                                "cat": "ostream"
                            },
                            "arb_stream[24]": {
                                "arg": "arb1_streams_kp0_workload[24]",
                                "cat": "ostream"
                            },
                            "arb_stream[25]": {
                                "arg": "arb1_streams_kp0_workload[25]",
                                "cat": "ostream"
                            },
                            "arb_stream[26]": {
                                "arg": "arb1_streams_kp0_workload[26]",
                                "cat": "ostream"
                            },
                            "arb_stream[27]": {
                                "arg": "arb1_streams_kp0_workload[27]",
                                "cat": "ostream"
                            },
                            "arb_stream[28]": {
                                "arg": "arb1_streams_kp0_workload[28]",
                                "cat": "ostream"
                            },
                            "arb_stream[29]": {
                                "arg": "arb1_streams_kp0_workload[29]",
                                "cat": "ostream"
                            },
                            "arb_stream[2]": {
                                "arg": "arb1_streams_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream[30]": {
                                "arg": "arb1_streams_kp0_workload[30]",
                                "cat": "ostream"
                            },
                            "arb_stream[31]": {
                                "arg": "arb1_streams_kp0_workload[31]",
                                "cat": "ostream"
                            },
                            "arb_stream[32]": {
                                "arg": "arb1_streams_kp0_workload[32]",
                                "cat": "ostream"
                            },
                            "arb_stream[33]": {
                                "arg": "arb1_streams_kp0_workload[33]",
                                "cat": "ostream"
                            },
                            "arb_stream[34]": {
                                "arg": "arb1_streams_kp0_workload[34]",
                                "cat": "ostream"
                            },
                            "arb_stream[35]": {
                                "arg": "arb1_streams_kp0_workload[35]",
                                "cat": "ostream"
                            },
                            "arb_stream[36]": {
                                "arg": "arb1_streams_kp0_workload[36]",
                                "cat": "ostream"
                            },
                            "arb_stream[37]": {
                                "arg": "arb1_streams_kp0_workload[37]",
                                "cat": "ostream"
                            },
                            "arb_stream[38]": {
                                "arg": "arb1_streams_kp0_workload[38]",
                                "cat": "ostream"
                            },
                            "arb_stream[39]": {
                                "arg": "arb1_streams_kp0_workload[39]",
                                "cat": "ostream"
                            },
                            "arb_stream[3]": {
                                "arg": "arb1_streams_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream[4]": {
                                "arg": "arb1_streams_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream[5]": {
                                "arg": "arb1_streams_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream[6]": {
                                "arg": "arb1_streams_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream[7]": {
                                "arg": "arb1_streams_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "arb_stream[8]": {
                                "arg": "arb1_streams_kp0_workload[8]",
                                "cat": "ostream"
                            },
                            "arb_stream[9]": {
                                "arg": "arb1_streams_kp0_workload[9]",
                                "cat": "ostream"
                            },
                            "hash_stream[0]": {
                                "arg": "hash_stream_h1_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "hash_stream[1]": {
                                "arg": "hash_stream_h1_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "hash_stream[2]": {
                                "arg": "hash_stream_h1_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "hash_stream[3]": {
                                "arg": "hash_stream_h1_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "hash_stream[4]": {
                                "arg": "hash_stream_h1_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "arb_stream[0]": {
                                "arg": "arb2_streams_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream[10]": {
                                "arg": "arb2_streams_kp0_workload[10]",
                                "cat": "ostream"
                            },
                            "arb_stream[11]": {
                                "arg": "arb2_streams_kp0_workload[11]",
                                "cat": "ostream"
                            },
                            "arb_stream[12]": {
                                "arg": "arb2_streams_kp0_workload[12]",
                                "cat": "ostream"
                            },
                            "arb_stream[13]": {
                                "arg": "arb2_streams_kp0_workload[13]",
                                "cat": "ostream"
                            },
                            "arb_stream[14]": {
                                "arg": "arb2_streams_kp0_workload[14]",
                                "cat": "ostream"
                            },
                            "arb_stream[15]": {
                                "arg": "arb2_streams_kp0_workload[15]",
                                "cat": "ostream"
                            },
                            "arb_stream[16]": {
                                "arg": "arb2_streams_kp0_workload[16]",
                                "cat": "ostream"
                            },
                            "arb_stream[17]": {
                                "arg": "arb2_streams_kp0_workload[17]",
                                "cat": "ostream"
                            },
                            "arb_stream[18]": {
                                "arg": "arb2_streams_kp0_workload[18]",
                                "cat": "ostream"
                            },
                            "arb_stream[19]": {
                                "arg": "arb2_streams_kp0_workload[19]",
                                "cat": "ostream"
                            },
                            "arb_stream[1]": {
                                "arg": "arb2_streams_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream[20]": {
                                "arg": "arb2_streams_kp0_workload[20]",
                                "cat": "ostream"
                            },
                            "arb_stream[21]": {
                                "arg": "arb2_streams_kp0_workload[21]",
                                "cat": "ostream"
                            },
                            "arb_stream[22]": {
                                "arg": "arb2_streams_kp0_workload[22]",
                                "cat": "ostream"
                            },
                            "arb_stream[23]": {
                                "arg": "arb2_streams_kp0_workload[23]",
                                "cat": "ostream"
                            },
                            "arb_stream[24]": {
                                "arg": "arb2_streams_kp0_workload[24]",
                                "cat": "ostream"
                            },
                            "arb_stream[25]": {
                                "arg": "arb2_streams_kp0_workload[25]",
                                "cat": "ostream"
                            },
                            "arb_stream[26]": {
                                "arg": "arb2_streams_kp0_workload[26]",
                                "cat": "ostream"
                            },
                            "arb_stream[27]": {
                                "arg": "arb2_streams_kp0_workload[27]",
                                "cat": "ostream"
                            },
                            "arb_stream[28]": {
                                "arg": "arb2_streams_kp0_workload[28]",
                                "cat": "ostream"
                            },
                            "arb_stream[29]": {
                                "arg": "arb2_streams_kp0_workload[29]",
                                "cat": "ostream"
                            },
                            "arb_stream[2]": {
                                "arg": "arb2_streams_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream[30]": {
                                "arg": "arb2_streams_kp0_workload[30]",
                                "cat": "ostream"
                            },
                            "arb_stream[31]": {
                                "arg": "arb2_streams_kp0_workload[31]",
                                "cat": "ostream"
                            },
                            "arb_stream[32]": {
                                "arg": "arb2_streams_kp0_workload[32]",
                                "cat": "ostream"
                            },
                            "arb_stream[33]": {
                                "arg": "arb2_streams_kp0_workload[33]",
                                "cat": "ostream"
                            },
                            "arb_stream[34]": {
                                "arg": "arb2_streams_kp0_workload[34]",
                                "cat": "ostream"
                            },
                            "arb_stream[35]": {
                                "arg": "arb2_streams_kp0_workload[35]",
                                "cat": "ostream"
                            },
                            "arb_stream[36]": {
                                "arg": "arb2_streams_kp0_workload[36]",
                                "cat": "ostream"
                            },
                            "arb_stream[37]": {
                                "arg": "arb2_streams_kp0_workload[37]",
                                "cat": "ostream"
                            },
                            "arb_stream[38]": {
                                "arg": "arb2_streams_kp0_workload[38]",
                                "cat": "ostream"
                            },
                            "arb_stream[39]": {
                                "arg": "arb2_streams_kp0_workload[39]",
                                "cat": "ostream"
                            },
                            "arb_stream[3]": {
                                "arg": "arb2_streams_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream[4]": {
                                "arg": "arb2_streams_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream[5]": {
                                "arg": "arb2_streams_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream[6]": {
                                "arg": "arb2_streams_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream[7]": {
                                "arg": "arb2_streams_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "arb_stream[8]": {
                                "arg": "arb2_streams_kp0_workload[8]",
                                "cat": "ostream"
                            },
                            "arb_stream[9]": {
                                "arg": "arb2_streams_kp0_workload[9]",
                                "cat": "ostream"
                            },
                            "hash_stream[0]": {
                                "arg": "hash_stream_h2_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "hash_stream[1]": {
                                "arg": "hash_stream_h2_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "hash_stream[2]": {
                                "arg": "hash_stream_h2_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "hash_stream[3]": {
                                "arg": "hash_stream_h2_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "hash_stream[4]": {
                                "arg": "hash_stream_h2_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "arb_stream[0]": {
                                "arg": "arb3_streams_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream[10]": {
                                "arg": "arb3_streams_kp0_workload[10]",
                                "cat": "ostream"
                            },
                            "arb_stream[11]": {
                                "arg": "arb3_streams_kp0_workload[11]",
                                "cat": "ostream"
                            },
                            "arb_stream[12]": {
                                "arg": "arb3_streams_kp0_workload[12]",
                                "cat": "ostream"
                            },
                            "arb_stream[13]": {
                                "arg": "arb3_streams_kp0_workload[13]",
                                "cat": "ostream"
                            },
                            "arb_stream[14]": {
                                "arg": "arb3_streams_kp0_workload[14]",
                                "cat": "ostream"
                            },
                            "arb_stream[15]": {
                                "arg": "arb3_streams_kp0_workload[15]",
                                "cat": "ostream"
                            },
                            "arb_stream[16]": {
                                "arg": "arb3_streams_kp0_workload[16]",
                                "cat": "ostream"
                            },
                            "arb_stream[17]": {
                                "arg": "arb3_streams_kp0_workload[17]",
                                "cat": "ostream"
                            },
                            "arb_stream[18]": {
                                "arg": "arb3_streams_kp0_workload[18]",
                                "cat": "ostream"
                            },
                            "arb_stream[19]": {
                                "arg": "arb3_streams_kp0_workload[19]",
                                "cat": "ostream"
                            },
                            "arb_stream[1]": {
                                "arg": "arb3_streams_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream[20]": {
                                "arg": "arb3_streams_kp0_workload[20]",
                                "cat": "ostream"
                            },
                            "arb_stream[21]": {
                                "arg": "arb3_streams_kp0_workload[21]",
                                "cat": "ostream"
                            },
                            "arb_stream[22]": {
                                "arg": "arb3_streams_kp0_workload[22]",
                                "cat": "ostream"
                            },
                            "arb_stream[23]": {
                                "arg": "arb3_streams_kp0_workload[23]",
                                "cat": "ostream"
                            },
                            "arb_stream[24]": {
                                "arg": "arb3_streams_kp0_workload[24]",
                                "cat": "ostream"
                            },
                            "arb_stream[25]": {
                                "arg": "arb3_streams_kp0_workload[25]",
                                "cat": "ostream"
                            },
                            "arb_stream[26]": {
                                "arg": "arb3_streams_kp0_workload[26]",
                                "cat": "ostream"
                            },
                            "arb_stream[27]": {
                                "arg": "arb3_streams_kp0_workload[27]",
                                "cat": "ostream"
                            },
                            "arb_stream[28]": {
                                "arg": "arb3_streams_kp0_workload[28]",
                                "cat": "ostream"
                            },
                            "arb_stream[29]": {
                                "arg": "arb3_streams_kp0_workload[29]",
                                "cat": "ostream"
                            },
                            "arb_stream[2]": {
                                "arg": "arb3_streams_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream[30]": {
                                "arg": "arb3_streams_kp0_workload[30]",
                                "cat": "ostream"
                            },
                            "arb_stream[31]": {
                                "arg": "arb3_streams_kp0_workload[31]",
                                "cat": "ostream"
                            },
                            "arb_stream[32]": {
                                "arg": "arb3_streams_kp0_workload[32]",
                                "cat": "ostream"
                            },
                            "arb_stream[33]": {
                                "arg": "arb3_streams_kp0_workload[33]",
                                "cat": "ostream"
                            },
                            "arb_stream[34]": {
                                "arg": "arb3_streams_kp0_workload[34]",
                                "cat": "ostream"
                            },
                            "arb_stream[35]": {
                                "arg": "arb3_streams_kp0_workload[35]",
                                "cat": "ostream"
                            },
                            "arb_stream[36]": {
                                "arg": "arb3_streams_kp0_workload[36]",
                                "cat": "ostream"
                            },
                            "arb_stream[37]": {
                                "arg": "arb3_streams_kp0_workload[37]",
                                "cat": "ostream"
                            },
                            "arb_stream[38]": {
                                "arg": "arb3_streams_kp0_workload[38]",
                                "cat": "ostream"
                            },
                            "arb_stream[39]": {
                                "arg": "arb3_streams_kp0_workload[39]",
                                "cat": "ostream"
                            },
                            "arb_stream[3]": {
                                "arg": "arb3_streams_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream[4]": {
                                "arg": "arb3_streams_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream[5]": {
                                "arg": "arb3_streams_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream[6]": {
                                "arg": "arb3_streams_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream[7]": {
                                "arg": "arb3_streams_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "arb_stream[8]": {
                                "arg": "arb3_streams_kp0_workload[8]",
                                "cat": "ostream"
                            },
                            "arb_stream[9]": {
                                "arg": "arb3_streams_kp0_workload[9]",
                                "cat": "ostream"
                            },
                            "hash_stream[0]": {
                                "arg": "hash_stream_h3_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "hash_stream[1]": {
                                "arg": "hash_stream_h3_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "hash_stream[2]": {
                                "arg": "hash_stream_h3_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "hash_stream[3]": {
                                "arg": "hash_stream_h3_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "hash_stream[4]": {
                                "arg": "hash_stream_h3_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "arb_stream[0]": {
                                "arg": "arb4_streams_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream[10]": {
                                "arg": "arb4_streams_kp0_workload[10]",
                                "cat": "ostream"
                            },
                            "arb_stream[11]": {
                                "arg": "arb4_streams_kp0_workload[11]",
                                "cat": "ostream"
                            },
                            "arb_stream[12]": {
                                "arg": "arb4_streams_kp0_workload[12]",
                                "cat": "ostream"
                            },
                            "arb_stream[13]": {
                                "arg": "arb4_streams_kp0_workload[13]",
                                "cat": "ostream"
                            },
                            "arb_stream[14]": {
                                "arg": "arb4_streams_kp0_workload[14]",
                                "cat": "ostream"
                            },
                            "arb_stream[15]": {
                                "arg": "arb4_streams_kp0_workload[15]",
                                "cat": "ostream"
                            },
                            "arb_stream[16]": {
                                "arg": "arb4_streams_kp0_workload[16]",
                                "cat": "ostream"
                            },
                            "arb_stream[17]": {
                                "arg": "arb4_streams_kp0_workload[17]",
                                "cat": "ostream"
                            },
                            "arb_stream[18]": {
                                "arg": "arb4_streams_kp0_workload[18]",
                                "cat": "ostream"
                            },
                            "arb_stream[19]": {
                                "arg": "arb4_streams_kp0_workload[19]",
                                "cat": "ostream"
                            },
                            "arb_stream[1]": {
                                "arg": "arb4_streams_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream[20]": {
                                "arg": "arb4_streams_kp0_workload[20]",
                                "cat": "ostream"
                            },
                            "arb_stream[21]": {
                                "arg": "arb4_streams_kp0_workload[21]",
                                "cat": "ostream"
                            },
                            "arb_stream[22]": {
                                "arg": "arb4_streams_kp0_workload[22]",
                                "cat": "ostream"
                            },
                            "arb_stream[23]": {
                                "arg": "arb4_streams_kp0_workload[23]",
                                "cat": "ostream"
                            },
                            "arb_stream[24]": {
                                "arg": "arb4_streams_kp0_workload[24]",
                                "cat": "ostream"
                            },
                            "arb_stream[25]": {
                                "arg": "arb4_streams_kp0_workload[25]",
                                "cat": "ostream"
                            },
                            "arb_stream[26]": {
                                "arg": "arb4_streams_kp0_workload[26]",
                                "cat": "ostream"
                            },
                            "arb_stream[27]": {
                                "arg": "arb4_streams_kp0_workload[27]",
                                "cat": "ostream"
                            },
                            "arb_stream[28]": {
                                "arg": "arb4_streams_kp0_workload[28]",
                                "cat": "ostream"
                            },
                            "arb_stream[29]": {
                                "arg": "arb4_streams_kp0_workload[29]",
                                "cat": "ostream"
                            },
                            "arb_stream[2]": {
                                "arg": "arb4_streams_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream[30]": {
                                "arg": "arb4_streams_kp0_workload[30]",
                                "cat": "ostream"
                            },
                            "arb_stream[31]": {
                                "arg": "arb4_streams_kp0_workload[31]",
                                "cat": "ostream"
                            },
                            "arb_stream[32]": {
                                "arg": "arb4_streams_kp0_workload[32]",
                                "cat": "ostream"
                            },
                            "arb_stream[33]": {
                                "arg": "arb4_streams_kp0_workload[33]",
                                "cat": "ostream"
                            },
                            "arb_stream[34]": {
                                "arg": "arb4_streams_kp0_workload[34]",
                                "cat": "ostream"
                            },
                            "arb_stream[35]": {
                                "arg": "arb4_streams_kp0_workload[35]",
                                "cat": "ostream"
                            },
                            "arb_stream[36]": {
                                "arg": "arb4_streams_kp0_workload[36]",
                                "cat": "ostream"
                            },
                            "arb_stream[37]": {
                                "arg": "arb4_streams_kp0_workload[37]",
                                "cat": "ostream"
                            },
                            "arb_stream[38]": {
                                "arg": "arb4_streams_kp0_workload[38]",
                                "cat": "ostream"
                            },
                            "arb_stream[39]": {
                                "arg": "arb4_streams_kp0_workload[39]",
                                "cat": "ostream"
                            },
                            "arb_stream[3]": {
                                "arg": "arb4_streams_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream[4]": {
                                "arg": "arb4_streams_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream[5]": {
                                "arg": "arb4_streams_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream[6]": {
                                "arg": "arb4_streams_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream[7]": {
                                "arg": "arb4_streams_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "arb_stream[8]": {
                                "arg": "arb4_streams_kp0_workload[8]",
                                "cat": "ostream"
                            },
                            "arb_stream[9]": {
                                "arg": "arb4_streams_kp0_workload[9]",
                                "cat": "ostream"
                            },
                            "hash_stream[0]": {
                                "arg": "hash_stream_h4_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "hash_stream[1]": {
                                "arg": "hash_stream_h4_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "hash_stream[2]": {
                                "arg": "hash_stream_h4_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "hash_stream[3]": {
                                "arg": "hash_stream_h4_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "hash_stream[4]": {
                                "arg": "hash_stream_h4_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "arb_stream[0]": {
                                "arg": "arb0_streams_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream[10]": {
                                "arg": "arb0_streams_kp1_workload[10]",
                                "cat": "ostream"
                            },
                            "arb_stream[11]": {
                                "arg": "arb0_streams_kp1_workload[11]",
                                "cat": "ostream"
                            },
                            "arb_stream[12]": {
                                "arg": "arb0_streams_kp1_workload[12]",
                                "cat": "ostream"
                            },
                            "arb_stream[13]": {
                                "arg": "arb0_streams_kp1_workload[13]",
                                "cat": "ostream"
                            },
                            "arb_stream[14]": {
                                "arg": "arb0_streams_kp1_workload[14]",
                                "cat": "ostream"
                            },
                            "arb_stream[15]": {
                                "arg": "arb0_streams_kp1_workload[15]",
                                "cat": "ostream"
                            },
                            "arb_stream[16]": {
                                "arg": "arb0_streams_kp1_workload[16]",
                                "cat": "ostream"
                            },
                            "arb_stream[17]": {
                                "arg": "arb0_streams_kp1_workload[17]",
                                "cat": "ostream"
                            },
                            "arb_stream[18]": {
                                "arg": "arb0_streams_kp1_workload[18]",
                                "cat": "ostream"
                            },
                            "arb_stream[19]": {
                                "arg": "arb0_streams_kp1_workload[19]",
                                "cat": "ostream"
                            },
                            "arb_stream[1]": {
                                "arg": "arb0_streams_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream[20]": {
                                "arg": "arb0_streams_kp1_workload[20]",
                                "cat": "ostream"
                            },
                            "arb_stream[21]": {
                                "arg": "arb0_streams_kp1_workload[21]",
                                "cat": "ostream"
                            },
                            "arb_stream[22]": {
                                "arg": "arb0_streams_kp1_workload[22]",
                                "cat": "ostream"
                            },
                            "arb_stream[23]": {
                                "arg": "arb0_streams_kp1_workload[23]",
                                "cat": "ostream"
                            },
                            "arb_stream[24]": {
                                "arg": "arb0_streams_kp1_workload[24]",
                                "cat": "ostream"
                            },
                            "arb_stream[25]": {
                                "arg": "arb0_streams_kp1_workload[25]",
                                "cat": "ostream"
                            },
                            "arb_stream[26]": {
                                "arg": "arb0_streams_kp1_workload[26]",
                                "cat": "ostream"
                            },
                            "arb_stream[27]": {
                                "arg": "arb0_streams_kp1_workload[27]",
                                "cat": "ostream"
                            },
                            "arb_stream[28]": {
                                "arg": "arb0_streams_kp1_workload[28]",
                                "cat": "ostream"
                            },
                            "arb_stream[29]": {
                                "arg": "arb0_streams_kp1_workload[29]",
                                "cat": "ostream"
                            },
                            "arb_stream[2]": {
                                "arg": "arb0_streams_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream[30]": {
                                "arg": "arb0_streams_kp1_workload[30]",
                                "cat": "ostream"
                            },
                            "arb_stream[31]": {
                                "arg": "arb0_streams_kp1_workload[31]",
                                "cat": "ostream"
                            },
                            "arb_stream[32]": {
                                "arg": "arb0_streams_kp1_workload[32]",
                                "cat": "ostream"
                            },
                            "arb_stream[33]": {
                                "arg": "arb0_streams_kp1_workload[33]",
                                "cat": "ostream"
                            },
                            "arb_stream[34]": {
                                "arg": "arb0_streams_kp1_workload[34]",
                                "cat": "ostream"
                            },
                            "arb_stream[35]": {
                                "arg": "arb0_streams_kp1_workload[35]",
                                "cat": "ostream"
                            },
                            "arb_stream[36]": {
                                "arg": "arb0_streams_kp1_workload[36]",
                                "cat": "ostream"
                            },
                            "arb_stream[37]": {
                                "arg": "arb0_streams_kp1_workload[37]",
                                "cat": "ostream"
                            },
                            "arb_stream[38]": {
                                "arg": "arb0_streams_kp1_workload[38]",
                                "cat": "ostream"
                            },
                            "arb_stream[39]": {
                                "arg": "arb0_streams_kp1_workload[39]",
                                "cat": "ostream"
                            },
                            "arb_stream[3]": {
                                "arg": "arb0_streams_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream[4]": {
                                "arg": "arb0_streams_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream[5]": {
                                "arg": "arb0_streams_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream[6]": {
                                "arg": "arb0_streams_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream[7]": {
                                "arg": "arb0_streams_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "arb_stream[8]": {
                                "arg": "arb0_streams_kp1_workload[8]",
                                "cat": "ostream"
                            },
                            "arb_stream[9]": {
                                "arg": "arb0_streams_kp1_workload[9]",
                                "cat": "ostream"
                            },
                            "hash_stream[0]": {
                                "arg": "hash_stream_h0_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "hash_stream[1]": {
                                "arg": "hash_stream_h0_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "hash_stream[2]": {
                                "arg": "hash_stream_h0_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "hash_stream[3]": {
                                "arg": "hash_stream_h0_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "hash_stream[4]": {
                                "arg": "hash_stream_h0_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "arb_stream[0]": {
                                "arg": "arb1_streams_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream[10]": {
                                "arg": "arb1_streams_kp1_workload[10]",
                                "cat": "ostream"
                            },
                            "arb_stream[11]": {
                                "arg": "arb1_streams_kp1_workload[11]",
                                "cat": "ostream"
                            },
                            "arb_stream[12]": {
                                "arg": "arb1_streams_kp1_workload[12]",
                                "cat": "ostream"
                            },
                            "arb_stream[13]": {
                                "arg": "arb1_streams_kp1_workload[13]",
                                "cat": "ostream"
                            },
                            "arb_stream[14]": {
                                "arg": "arb1_streams_kp1_workload[14]",
                                "cat": "ostream"
                            },
                            "arb_stream[15]": {
                                "arg": "arb1_streams_kp1_workload[15]",
                                "cat": "ostream"
                            },
                            "arb_stream[16]": {
                                "arg": "arb1_streams_kp1_workload[16]",
                                "cat": "ostream"
                            },
                            "arb_stream[17]": {
                                "arg": "arb1_streams_kp1_workload[17]",
                                "cat": "ostream"
                            },
                            "arb_stream[18]": {
                                "arg": "arb1_streams_kp1_workload[18]",
                                "cat": "ostream"
                            },
                            "arb_stream[19]": {
                                "arg": "arb1_streams_kp1_workload[19]",
                                "cat": "ostream"
                            },
                            "arb_stream[1]": {
                                "arg": "arb1_streams_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream[20]": {
                                "arg": "arb1_streams_kp1_workload[20]",
                                "cat": "ostream"
                            },
                            "arb_stream[21]": {
                                "arg": "arb1_streams_kp1_workload[21]",
                                "cat": "ostream"
                            },
                            "arb_stream[22]": {
                                "arg": "arb1_streams_kp1_workload[22]",
                                "cat": "ostream"
                            },
                            "arb_stream[23]": {
                                "arg": "arb1_streams_kp1_workload[23]",
                                "cat": "ostream"
                            },
                            "arb_stream[24]": {
                                "arg": "arb1_streams_kp1_workload[24]",
                                "cat": "ostream"
                            },
                            "arb_stream[25]": {
                                "arg": "arb1_streams_kp1_workload[25]",
                                "cat": "ostream"
                            },
                            "arb_stream[26]": {
                                "arg": "arb1_streams_kp1_workload[26]",
                                "cat": "ostream"
                            },
                            "arb_stream[27]": {
                                "arg": "arb1_streams_kp1_workload[27]",
                                "cat": "ostream"
                            },
                            "arb_stream[28]": {
                                "arg": "arb1_streams_kp1_workload[28]",
                                "cat": "ostream"
                            },
                            "arb_stream[29]": {
                                "arg": "arb1_streams_kp1_workload[29]",
                                "cat": "ostream"
                            },
                            "arb_stream[2]": {
                                "arg": "arb1_streams_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream[30]": {
                                "arg": "arb1_streams_kp1_workload[30]",
                                "cat": "ostream"
                            },
                            "arb_stream[31]": {
                                "arg": "arb1_streams_kp1_workload[31]",
                                "cat": "ostream"
                            },
                            "arb_stream[32]": {
                                "arg": "arb1_streams_kp1_workload[32]",
                                "cat": "ostream"
                            },
                            "arb_stream[33]": {
                                "arg": "arb1_streams_kp1_workload[33]",
                                "cat": "ostream"
                            },
                            "arb_stream[34]": {
                                "arg": "arb1_streams_kp1_workload[34]",
                                "cat": "ostream"
                            },
                            "arb_stream[35]": {
                                "arg": "arb1_streams_kp1_workload[35]",
                                "cat": "ostream"
                            },
                            "arb_stream[36]": {
                                "arg": "arb1_streams_kp1_workload[36]",
                                "cat": "ostream"
                            },
                            "arb_stream[37]": {
                                "arg": "arb1_streams_kp1_workload[37]",
                                "cat": "ostream"
                            },
                            "arb_stream[38]": {
                                "arg": "arb1_streams_kp1_workload[38]",
                                "cat": "ostream"
                            },
                            "arb_stream[39]": {
                                "arg": "arb1_streams_kp1_workload[39]",
                                "cat": "ostream"
                            },
                            "arb_stream[3]": {
                                "arg": "arb1_streams_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream[4]": {
                                "arg": "arb1_streams_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream[5]": {
                                "arg": "arb1_streams_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream[6]": {
                                "arg": "arb1_streams_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream[7]": {
                                "arg": "arb1_streams_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "arb_stream[8]": {
                                "arg": "arb1_streams_kp1_workload[8]",
                                "cat": "ostream"
                            },
                            "arb_stream[9]": {
                                "arg": "arb1_streams_kp1_workload[9]",
                                "cat": "ostream"
                            },
                            "hash_stream[0]": {
                                "arg": "hash_stream_h1_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "hash_stream[1]": {
                                "arg": "hash_stream_h1_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "hash_stream[2]": {
                                "arg": "hash_stream_h1_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "hash_stream[3]": {
                                "arg": "hash_stream_h1_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "hash_stream[4]": {
                                "arg": "hash_stream_h1_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "arb_stream[0]": {
                                "arg": "arb2_streams_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream[10]": {
                                "arg": "arb2_streams_kp1_workload[10]",
                                "cat": "ostream"
                            },
                            "arb_stream[11]": {
                                "arg": "arb2_streams_kp1_workload[11]",
                                "cat": "ostream"
                            },
                            "arb_stream[12]": {
                                "arg": "arb2_streams_kp1_workload[12]",
                                "cat": "ostream"
                            },
                            "arb_stream[13]": {
                                "arg": "arb2_streams_kp1_workload[13]",
                                "cat": "ostream"
                            },
                            "arb_stream[14]": {
                                "arg": "arb2_streams_kp1_workload[14]",
                                "cat": "ostream"
                            },
                            "arb_stream[15]": {
                                "arg": "arb2_streams_kp1_workload[15]",
                                "cat": "ostream"
                            },
                            "arb_stream[16]": {
                                "arg": "arb2_streams_kp1_workload[16]",
                                "cat": "ostream"
                            },
                            "arb_stream[17]": {
                                "arg": "arb2_streams_kp1_workload[17]",
                                "cat": "ostream"
                            },
                            "arb_stream[18]": {
                                "arg": "arb2_streams_kp1_workload[18]",
                                "cat": "ostream"
                            },
                            "arb_stream[19]": {
                                "arg": "arb2_streams_kp1_workload[19]",
                                "cat": "ostream"
                            },
                            "arb_stream[1]": {
                                "arg": "arb2_streams_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream[20]": {
                                "arg": "arb2_streams_kp1_workload[20]",
                                "cat": "ostream"
                            },
                            "arb_stream[21]": {
                                "arg": "arb2_streams_kp1_workload[21]",
                                "cat": "ostream"
                            },
                            "arb_stream[22]": {
                                "arg": "arb2_streams_kp1_workload[22]",
                                "cat": "ostream"
                            },
                            "arb_stream[23]": {
                                "arg": "arb2_streams_kp1_workload[23]",
                                "cat": "ostream"
                            },
                            "arb_stream[24]": {
                                "arg": "arb2_streams_kp1_workload[24]",
                                "cat": "ostream"
                            },
                            "arb_stream[25]": {
                                "arg": "arb2_streams_kp1_workload[25]",
                                "cat": "ostream"
                            },
                            "arb_stream[26]": {
                                "arg": "arb2_streams_kp1_workload[26]",
                                "cat": "ostream"
                            },
                            "arb_stream[27]": {
                                "arg": "arb2_streams_kp1_workload[27]",
                                "cat": "ostream"
                            },
                            "arb_stream[28]": {
                                "arg": "arb2_streams_kp1_workload[28]",
                                "cat": "ostream"
                            },
                            "arb_stream[29]": {
                                "arg": "arb2_streams_kp1_workload[29]",
                                "cat": "ostream"
                            },
                            "arb_stream[2]": {
                                "arg": "arb2_streams_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream[30]": {
                                "arg": "arb2_streams_kp1_workload[30]",
                                "cat": "ostream"
                            },
                            "arb_stream[31]": {
                                "arg": "arb2_streams_kp1_workload[31]",
                                "cat": "ostream"
                            },
                            "arb_stream[32]": {
                                "arg": "arb2_streams_kp1_workload[32]",
                                "cat": "ostream"
                            },
                            "arb_stream[33]": {
                                "arg": "arb2_streams_kp1_workload[33]",
                                "cat": "ostream"
                            },
                            "arb_stream[34]": {
                                "arg": "arb2_streams_kp1_workload[34]",
                                "cat": "ostream"
                            },
                            "arb_stream[35]": {
                                "arg": "arb2_streams_kp1_workload[35]",
                                "cat": "ostream"
                            },
                            "arb_stream[36]": {
                                "arg": "arb2_streams_kp1_workload[36]",
                                "cat": "ostream"
                            },
                            "arb_stream[37]": {
                                "arg": "arb2_streams_kp1_workload[37]",
                                "cat": "ostream"
                            },
                            "arb_stream[38]": {
                                "arg": "arb2_streams_kp1_workload[38]",
                                "cat": "ostream"
                            },
                            "arb_stream[39]": {
                                "arg": "arb2_streams_kp1_workload[39]",
                                "cat": "ostream"
                            },
                            "arb_stream[3]": {
                                "arg": "arb2_streams_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream[4]": {
                                "arg": "arb2_streams_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream[5]": {
                                "arg": "arb2_streams_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream[6]": {
                                "arg": "arb2_streams_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream[7]": {
                                "arg": "arb2_streams_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "arb_stream[8]": {
                                "arg": "arb2_streams_kp1_workload[8]",
                                "cat": "ostream"
                            },
                            "arb_stream[9]": {
                                "arg": "arb2_streams_kp1_workload[9]",
                                "cat": "ostream"
                            },
                            "hash_stream[0]": {
                                "arg": "hash_stream_h2_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "hash_stream[1]": {
                                "arg": "hash_stream_h2_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "hash_stream[2]": {
                                "arg": "hash_stream_h2_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "hash_stream[3]": {
                                "arg": "hash_stream_h2_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "hash_stream[4]": {
                                "arg": "hash_stream_h2_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "arb_stream[0]": {
                                "arg": "arb3_streams_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream[10]": {
                                "arg": "arb3_streams_kp1_workload[10]",
                                "cat": "ostream"
                            },
                            "arb_stream[11]": {
                                "arg": "arb3_streams_kp1_workload[11]",
                                "cat": "ostream"
                            },
                            "arb_stream[12]": {
                                "arg": "arb3_streams_kp1_workload[12]",
                                "cat": "ostream"
                            },
                            "arb_stream[13]": {
                                "arg": "arb3_streams_kp1_workload[13]",
                                "cat": "ostream"
                            },
                            "arb_stream[14]": {
                                "arg": "arb3_streams_kp1_workload[14]",
                                "cat": "ostream"
                            },
                            "arb_stream[15]": {
                                "arg": "arb3_streams_kp1_workload[15]",
                                "cat": "ostream"
                            },
                            "arb_stream[16]": {
                                "arg": "arb3_streams_kp1_workload[16]",
                                "cat": "ostream"
                            },
                            "arb_stream[17]": {
                                "arg": "arb3_streams_kp1_workload[17]",
                                "cat": "ostream"
                            },
                            "arb_stream[18]": {
                                "arg": "arb3_streams_kp1_workload[18]",
                                "cat": "ostream"
                            },
                            "arb_stream[19]": {
                                "arg": "arb3_streams_kp1_workload[19]",
                                "cat": "ostream"
                            },
                            "arb_stream[1]": {
                                "arg": "arb3_streams_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream[20]": {
                                "arg": "arb3_streams_kp1_workload[20]",
                                "cat": "ostream"
                            },
                            "arb_stream[21]": {
                                "arg": "arb3_streams_kp1_workload[21]",
                                "cat": "ostream"
                            },
                            "arb_stream[22]": {
                                "arg": "arb3_streams_kp1_workload[22]",
                                "cat": "ostream"
                            },
                            "arb_stream[23]": {
                                "arg": "arb3_streams_kp1_workload[23]",
                                "cat": "ostream"
                            },
                            "arb_stream[24]": {
                                "arg": "arb3_streams_kp1_workload[24]",
                                "cat": "ostream"
                            },
                            "arb_stream[25]": {
                                "arg": "arb3_streams_kp1_workload[25]",
                                "cat": "ostream"
                            },
                            "arb_stream[26]": {
                                "arg": "arb3_streams_kp1_workload[26]",
                                "cat": "ostream"
                            },
                            "arb_stream[27]": {
                                "arg": "arb3_streams_kp1_workload[27]",
                                "cat": "ostream"
                            },
                            "arb_stream[28]": {
                                "arg": "arb3_streams_kp1_workload[28]",
                                "cat": "ostream"
                            },
                            "arb_stream[29]": {
                                "arg": "arb3_streams_kp1_workload[29]",
                                "cat": "ostream"
                            },
                            "arb_stream[2]": {
                                "arg": "arb3_streams_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream[30]": {
                                "arg": "arb3_streams_kp1_workload[30]",
                                "cat": "ostream"
                            },
                            "arb_stream[31]": {
                                "arg": "arb3_streams_kp1_workload[31]",
                                "cat": "ostream"
                            },
                            "arb_stream[32]": {
                                "arg": "arb3_streams_kp1_workload[32]",
                                "cat": "ostream"
                            },
                            "arb_stream[33]": {
                                "arg": "arb3_streams_kp1_workload[33]",
                                "cat": "ostream"
                            },
                            "arb_stream[34]": {
                                "arg": "arb3_streams_kp1_workload[34]",
                                "cat": "ostream"
                            },
                            "arb_stream[35]": {
                                "arg": "arb3_streams_kp1_workload[35]",
                                "cat": "ostream"
                            },
                            "arb_stream[36]": {
                                "arg": "arb3_streams_kp1_workload[36]",
                                "cat": "ostream"
                            },
                            "arb_stream[37]": {
                                "arg": "arb3_streams_kp1_workload[37]",
                                "cat": "ostream"
                            },
                            "arb_stream[38]": {
                                "arg": "arb3_streams_kp1_workload[38]",
                                "cat": "ostream"
                            },
                            "arb_stream[39]": {
                                "arg": "arb3_streams_kp1_workload[39]",
                                "cat": "ostream"
                            },
                            "arb_stream[3]": {
                                "arg": "arb3_streams_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream[4]": {
                                "arg": "arb3_streams_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream[5]": {
                                "arg": "arb3_streams_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream[6]": {
                                "arg": "arb3_streams_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream[7]": {
                                "arg": "arb3_streams_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "arb_stream[8]": {
                                "arg": "arb3_streams_kp1_workload[8]",
                                "cat": "ostream"
                            },
                            "arb_stream[9]": {
                                "arg": "arb3_streams_kp1_workload[9]",
                                "cat": "ostream"
                            },
                            "hash_stream[0]": {
                                "arg": "hash_stream_h3_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "hash_stream[1]": {
                                "arg": "hash_stream_h3_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "hash_stream[2]": {
                                "arg": "hash_stream_h3_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "hash_stream[3]": {
                                "arg": "hash_stream_h3_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "hash_stream[4]": {
                                "arg": "hash_stream_h3_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "arb_stream[0]": {
                                "arg": "arb4_streams_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream[10]": {
                                "arg": "arb4_streams_kp1_workload[10]",
                                "cat": "ostream"
                            },
                            "arb_stream[11]": {
                                "arg": "arb4_streams_kp1_workload[11]",
                                "cat": "ostream"
                            },
                            "arb_stream[12]": {
                                "arg": "arb4_streams_kp1_workload[12]",
                                "cat": "ostream"
                            },
                            "arb_stream[13]": {
                                "arg": "arb4_streams_kp1_workload[13]",
                                "cat": "ostream"
                            },
                            "arb_stream[14]": {
                                "arg": "arb4_streams_kp1_workload[14]",
                                "cat": "ostream"
                            },
                            "arb_stream[15]": {
                                "arg": "arb4_streams_kp1_workload[15]",
                                "cat": "ostream"
                            },
                            "arb_stream[16]": {
                                "arg": "arb4_streams_kp1_workload[16]",
                                "cat": "ostream"
                            },
                            "arb_stream[17]": {
                                "arg": "arb4_streams_kp1_workload[17]",
                                "cat": "ostream"
                            },
                            "arb_stream[18]": {
                                "arg": "arb4_streams_kp1_workload[18]",
                                "cat": "ostream"
                            },
                            "arb_stream[19]": {
                                "arg": "arb4_streams_kp1_workload[19]",
                                "cat": "ostream"
                            },
                            "arb_stream[1]": {
                                "arg": "arb4_streams_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream[20]": {
                                "arg": "arb4_streams_kp1_workload[20]",
                                "cat": "ostream"
                            },
                            "arb_stream[21]": {
                                "arg": "arb4_streams_kp1_workload[21]",
                                "cat": "ostream"
                            },
                            "arb_stream[22]": {
                                "arg": "arb4_streams_kp1_workload[22]",
                                "cat": "ostream"
                            },
                            "arb_stream[23]": {
                                "arg": "arb4_streams_kp1_workload[23]",
                                "cat": "ostream"
                            },
                            "arb_stream[24]": {
                                "arg": "arb4_streams_kp1_workload[24]",
                                "cat": "ostream"
                            },
                            "arb_stream[25]": {
                                "arg": "arb4_streams_kp1_workload[25]",
                                "cat": "ostream"
                            },
                            "arb_stream[26]": {
                                "arg": "arb4_streams_kp1_workload[26]",
                                "cat": "ostream"
                            },
                            "arb_stream[27]": {
                                "arg": "arb4_streams_kp1_workload[27]",
                                "cat": "ostream"
                            },
                            "arb_stream[28]": {
                                "arg": "arb4_streams_kp1_workload[28]",
                                "cat": "ostream"
                            },
                            "arb_stream[29]": {
                                "arg": "arb4_streams_kp1_workload[29]",
                                "cat": "ostream"
                            },
                            "arb_stream[2]": {
                                "arg": "arb4_streams_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream[30]": {
                                "arg": "arb4_streams_kp1_workload[30]",
                                "cat": "ostream"
                            },
                            "arb_stream[31]": {
                                "arg": "arb4_streams_kp1_workload[31]",
                                "cat": "ostream"
                            },
                            "arb_stream[32]": {
                                "arg": "arb4_streams_kp1_workload[32]",
                                "cat": "ostream"
                            },
                            "arb_stream[33]": {
                                "arg": "arb4_streams_kp1_workload[33]",
                                "cat": "ostream"
                            },
                            "arb_stream[34]": {
                                "arg": "arb4_streams_kp1_workload[34]",
                                "cat": "ostream"
                            },
                            "arb_stream[35]": {
                                "arg": "arb4_streams_kp1_workload[35]",
                                "cat": "ostream"
                            },
                            "arb_stream[36]": {
                                "arg": "arb4_streams_kp1_workload[36]",
                                "cat": "ostream"
                            },
                            "arb_stream[37]": {
                                "arg": "arb4_streams_kp1_workload[37]",
                                "cat": "ostream"
                            },
                            "arb_stream[38]": {
                                "arg": "arb4_streams_kp1_workload[38]",
                                "cat": "ostream"
                            },
                            "arb_stream[39]": {
                                "arg": "arb4_streams_kp1_workload[39]",
                                "cat": "ostream"
                            },
                            "arb_stream[3]": {
                                "arg": "arb4_streams_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream[4]": {
                                "arg": "arb4_streams_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream[5]": {
                                "arg": "arb4_streams_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream[6]": {
                                "arg": "arb4_streams_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream[7]": {
                                "arg": "arb4_streams_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "arb_stream[8]": {
                                "arg": "arb4_streams_kp1_workload[8]",
                                "cat": "ostream"
                            },
                            "arb_stream[9]": {
                                "arg": "arb4_streams_kp1_workload[9]",
                                "cat": "ostream"
                            },
                            "hash_stream[0]": {
                                "arg": "hash_stream_h4_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "hash_stream[1]": {
                                "arg": "hash_stream_h4_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "hash_stream[2]": {
                                "arg": "hash_stream_h4_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "hash_stream[3]": {
                                "arg": "hash_stream_h4_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "hash_stream[4]": {
                                "arg": "hash_stream_h4_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    }
                ],
                "bloom_arbiter_ratemonitor": [
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "arb_stream_in[0]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "arb_stream_in[1]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            },
                            "arb_stream_in[2]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[2]",
                                "cat": "istream"
                            },
                            "arb_stream_in[3]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[3]",
                                "cat": "istream"
                            },
                            "arb_stream_in[4]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[4]",
                                "cat": "istream"
                            },
                            "arb_stream_in[5]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[5]",
                                "cat": "istream"
                            },
                            "arb_stream_in[6]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[6]",
                                "cat": "istream"
                            },
                            "arb_stream_in[7]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[7]",
                                "cat": "istream"
                            },
                            "arb_stream_out[0]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[1]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[2]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[3]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[4]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[5]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[6]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[7]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[0]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[1]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[2]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_0_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[3]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_0_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[0]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[1]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[2]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_0_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[3]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_0_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[0]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[1]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[2]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_0_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[3]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_0_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[0]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[1]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[2]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_0_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[3]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_0_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[0]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[1]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[2]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_0_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[3]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_0_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[0]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[1]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[2]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_0_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[3]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_0_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[0]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[1]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[2]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_0_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[3]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_0_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[0]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[1]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[2]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_0_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[3]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_0_workload[3]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "arb_stream_in[0]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "arb_stream_in[1]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            },
                            "arb_stream_in[2]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[2]",
                                "cat": "istream"
                            },
                            "arb_stream_in[3]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[3]",
                                "cat": "istream"
                            },
                            "arb_stream_in[4]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[4]",
                                "cat": "istream"
                            },
                            "arb_stream_in[5]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[5]",
                                "cat": "istream"
                            },
                            "arb_stream_in[6]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[6]",
                                "cat": "istream"
                            },
                            "arb_stream_in[7]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[7]",
                                "cat": "istream"
                            },
                            "arb_stream_out[0]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[1]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[2]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[3]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[4]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[5]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[6]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[7]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[0]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[1]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[2]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_1_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[3]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_1_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[0]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[1]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[2]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_1_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[3]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_1_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[0]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[1]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[2]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_1_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[3]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_1_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[0]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[1]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[2]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_1_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[3]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_1_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[0]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[1]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[2]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_1_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[3]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_1_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[0]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[1]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[2]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_1_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[3]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_1_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[0]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[1]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[2]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_1_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[3]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_1_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[0]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[1]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[2]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_1_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[3]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_1_workload[3]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "arb_stream_in[0]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "arb_stream_in[1]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            },
                            "arb_stream_in[2]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[2]",
                                "cat": "istream"
                            },
                            "arb_stream_in[3]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[3]",
                                "cat": "istream"
                            },
                            "arb_stream_in[4]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[4]",
                                "cat": "istream"
                            },
                            "arb_stream_in[5]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[5]",
                                "cat": "istream"
                            },
                            "arb_stream_in[6]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[6]",
                                "cat": "istream"
                            },
                            "arb_stream_in[7]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[7]",
                                "cat": "istream"
                            },
                            "arb_stream_out[0]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[1]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[2]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[3]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[4]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[5]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[6]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[7]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[0]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[1]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[2]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_2_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[3]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_2_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[0]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[1]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[2]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_2_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[3]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_2_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[0]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[1]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[2]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_2_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[3]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_2_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[0]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[1]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[2]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_2_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[3]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_2_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[0]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[1]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[2]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_2_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[3]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_2_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[0]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[1]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[2]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_2_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[3]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_2_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[0]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[1]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[2]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_2_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[3]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_2_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[0]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[1]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[2]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_2_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[3]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_2_workload[3]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "arb_stream_in[0]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "arb_stream_in[1]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            },
                            "arb_stream_in[2]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[2]",
                                "cat": "istream"
                            },
                            "arb_stream_in[3]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[3]",
                                "cat": "istream"
                            },
                            "arb_stream_in[4]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[4]",
                                "cat": "istream"
                            },
                            "arb_stream_in[5]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[5]",
                                "cat": "istream"
                            },
                            "arb_stream_in[6]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[6]",
                                "cat": "istream"
                            },
                            "arb_stream_in[7]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[7]",
                                "cat": "istream"
                            },
                            "arb_stream_out[0]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[1]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[2]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[3]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[4]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[5]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[6]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[7]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[0]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[1]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[2]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_3_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[3]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_3_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[0]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[1]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[2]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_3_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[3]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_3_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[0]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[1]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[2]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_3_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[3]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_3_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[0]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[1]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[2]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_3_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[3]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_3_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[0]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[1]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[2]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_3_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[3]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_3_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[0]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[1]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[2]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_3_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[3]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_3_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[0]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[1]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[2]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_3_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[3]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_3_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[0]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[1]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[2]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_3_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[3]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_3_workload[3]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "arb_stream_in[0]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "arb_stream_in[1]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            },
                            "arb_stream_in[2]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[2]",
                                "cat": "istream"
                            },
                            "arb_stream_in[3]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[3]",
                                "cat": "istream"
                            },
                            "arb_stream_in[4]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[4]",
                                "cat": "istream"
                            },
                            "arb_stream_in[5]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[5]",
                                "cat": "istream"
                            },
                            "arb_stream_in[6]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[6]",
                                "cat": "istream"
                            },
                            "arb_stream_in[7]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[7]",
                                "cat": "istream"
                            },
                            "arb_stream_out[0]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[1]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[2]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[3]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[4]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[5]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[6]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[7]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[0]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[1]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[2]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_4_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[3]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_4_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[0]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[1]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[2]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_4_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[3]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_4_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[0]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[1]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[2]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_4_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[3]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_4_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[0]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[1]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[2]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_4_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[3]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_4_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[0]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[1]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[2]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_4_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[3]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_4_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[0]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[1]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[2]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_4_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[3]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_4_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[0]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[1]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[2]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_4_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[3]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_4_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[0]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[1]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[2]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_4_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[3]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_4_workload[3]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "arb_stream_in[0]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "arb_stream_in[1]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            },
                            "arb_stream_in[2]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[2]",
                                "cat": "istream"
                            },
                            "arb_stream_in[3]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[3]",
                                "cat": "istream"
                            },
                            "arb_stream_in[4]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[4]",
                                "cat": "istream"
                            },
                            "arb_stream_in[5]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[5]",
                                "cat": "istream"
                            },
                            "arb_stream_in[6]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[6]",
                                "cat": "istream"
                            },
                            "arb_stream_in[7]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[7]",
                                "cat": "istream"
                            },
                            "arb_stream_out[0]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[1]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[2]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[3]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[4]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[5]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[6]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[7]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[0]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[1]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[2]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_5_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[3]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_5_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[0]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[1]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[2]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_5_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[3]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_5_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[0]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[1]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[2]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_5_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[3]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_5_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[0]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[1]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[2]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_5_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[3]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_5_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[0]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[1]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[2]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_5_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[3]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_5_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[0]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[1]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[2]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_5_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[3]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_5_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[0]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[1]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[2]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_5_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[3]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_5_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[0]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[1]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[2]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_5_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[3]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_5_workload[3]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "arb_stream_in[0]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "arb_stream_in[1]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            },
                            "arb_stream_in[2]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[2]",
                                "cat": "istream"
                            },
                            "arb_stream_in[3]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[3]",
                                "cat": "istream"
                            },
                            "arb_stream_in[4]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[4]",
                                "cat": "istream"
                            },
                            "arb_stream_in[5]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[5]",
                                "cat": "istream"
                            },
                            "arb_stream_in[6]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[6]",
                                "cat": "istream"
                            },
                            "arb_stream_in[7]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[7]",
                                "cat": "istream"
                            },
                            "arb_stream_out[0]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[1]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[2]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[3]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[4]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[5]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[6]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[7]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[0]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[1]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[2]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_6_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[3]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_6_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[0]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[1]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[2]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_6_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[3]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_6_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[0]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[1]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[2]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_6_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[3]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_6_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[0]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[1]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[2]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_6_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[3]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_6_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[0]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[1]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[2]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_6_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[3]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_6_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[0]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[1]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[2]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_6_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[3]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_6_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[0]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[1]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[2]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_6_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[3]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_6_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[0]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[1]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[2]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_6_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[3]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_6_workload[3]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "arb_stream_in[0]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "arb_stream_in[1]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            },
                            "arb_stream_in[2]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[2]",
                                "cat": "istream"
                            },
                            "arb_stream_in[3]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[3]",
                                "cat": "istream"
                            },
                            "arb_stream_in[4]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[4]",
                                "cat": "istream"
                            },
                            "arb_stream_in[5]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[5]",
                                "cat": "istream"
                            },
                            "arb_stream_in[6]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[6]",
                                "cat": "istream"
                            },
                            "arb_stream_in[7]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[7]",
                                "cat": "istream"
                            },
                            "arb_stream_out[0]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[1]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[2]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[3]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[4]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[5]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[6]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[7]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[0]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[1]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[2]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_7_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[3]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_7_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[0]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[1]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[2]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_7_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[3]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_7_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[0]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[1]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[2]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_7_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[3]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_7_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[0]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[1]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[2]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_7_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[3]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_7_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[0]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[1]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[2]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_7_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[3]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_7_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[0]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[1]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[2]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_7_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[3]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_7_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[0]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[1]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[2]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_7_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[3]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_7_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[0]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[1]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[2]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_7_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[3]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_7_workload[3]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "arb_stream_in[0]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "arb_stream_in[1]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            },
                            "arb_stream_in[2]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[2]",
                                "cat": "istream"
                            },
                            "arb_stream_in[3]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[3]",
                                "cat": "istream"
                            },
                            "arb_stream_in[4]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[4]",
                                "cat": "istream"
                            },
                            "arb_stream_in[5]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[5]",
                                "cat": "istream"
                            },
                            "arb_stream_in[6]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[6]",
                                "cat": "istream"
                            },
                            "arb_stream_in[7]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[7]",
                                "cat": "istream"
                            },
                            "arb_stream_out[0]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[1]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[2]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[3]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[4]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[5]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[6]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[7]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[0]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[1]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[2]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_8_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[3]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_8_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[0]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[1]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[2]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_8_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[3]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_8_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[0]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[1]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[2]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_8_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[3]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_8_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[0]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[1]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[2]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_8_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[3]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_8_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[0]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[1]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[2]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_8_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[3]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_8_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[0]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[1]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[2]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_8_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[3]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_8_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[0]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[1]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[2]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_8_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[3]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_8_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[0]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[1]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[2]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_8_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[3]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_8_workload[3]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "arb_stream_in[0]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "arb_stream_in[1]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            },
                            "arb_stream_in[2]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[2]",
                                "cat": "istream"
                            },
                            "arb_stream_in[3]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[3]",
                                "cat": "istream"
                            },
                            "arb_stream_in[4]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[4]",
                                "cat": "istream"
                            },
                            "arb_stream_in[5]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[5]",
                                "cat": "istream"
                            },
                            "arb_stream_in[6]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[6]",
                                "cat": "istream"
                            },
                            "arb_stream_in[7]": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[7]",
                                "cat": "istream"
                            },
                            "arb_stream_out[0]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[1]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[2]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[3]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[4]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[5]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[6]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "arb_stream_out[7]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[0]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[1]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[2]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_9_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_0[3]": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_9_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[0]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[1]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[2]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_9_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_1[3]": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_9_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[0]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[1]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[2]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_9_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_2[3]": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_9_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[0]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[1]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[2]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_9_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_3[3]": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_9_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[0]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[1]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[2]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_9_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_4[3]": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_9_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[0]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[1]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[2]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_9_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_5[3]": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_9_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[0]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[1]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[2]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_9_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_6[3]": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_9_workload[3]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[0]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[1]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[2]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_9_workload[2]",
                                "cat": "ostream"
                            },
                            "fdbk_stream_7[3]": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_9_workload[3]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    }
                ],
                "bloom_hier_arbiter_atom": [
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_0_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_0_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[8]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_0_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[9]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_0_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[10]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[11]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[12]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[13]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_0_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[14]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[2]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_0_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[15]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[16]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[17]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[18]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_0_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[19]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[3]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_0_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[20]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[21]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[22]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_0_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[24]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[4]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_0_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[25]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[26]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[27]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[28]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_0_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[29]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[5]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_0_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[30]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[32]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[33]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_0_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[34]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[6]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_0_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[35]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[36]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp0_workload[37]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[38]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_0_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_0_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_0_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp0_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_0_workload[7]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_0_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_1_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_1_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[8]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_1_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[9]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_1_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[10]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[11]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[12]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[13]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_1_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[14]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[2]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_1_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[15]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[16]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[17]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[18]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_1_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[19]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[3]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_1_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[20]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[21]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[22]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_1_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[24]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[4]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_1_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[25]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[26]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[27]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[28]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_1_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[29]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[5]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_1_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[30]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[32]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[33]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_1_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[34]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[6]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_1_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[35]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[36]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp0_workload[37]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[38]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_1_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_1_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_1_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp0_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_1_workload[7]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_1_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_2_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_2_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[8]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_2_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[9]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_2_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[10]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[11]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[12]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[13]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_2_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[14]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[2]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_2_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[15]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[16]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[17]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[18]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_2_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[19]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[3]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_2_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[20]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[21]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[22]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_2_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[24]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[4]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_2_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[25]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[26]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[27]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[28]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_2_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[29]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[5]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_2_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[30]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[32]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[33]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_2_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[34]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[6]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_2_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[35]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[36]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp0_workload[37]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[38]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_2_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_2_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_2_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_2_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_2_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp0_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_2_workload[7]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_2_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_3_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_3_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[8]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_3_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[9]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_3_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[10]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[11]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[12]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[13]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_3_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[14]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[2]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_3_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[15]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[16]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[17]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[18]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_3_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[19]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[3]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_3_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[20]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[21]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[22]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_3_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[24]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[4]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_3_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[25]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[26]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[27]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[28]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_3_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[29]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[5]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_3_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[30]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[32]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[33]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_3_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[34]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[6]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_3_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[35]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[36]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp0_workload[37]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[38]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_3_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_3_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_3_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_3_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_3_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp0_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_3_workload[7]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_3_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_4_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_4_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[8]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_4_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[9]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_4_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[10]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[11]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[12]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[13]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_4_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[14]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[2]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_4_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[15]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[16]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[17]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[18]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_4_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[19]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[3]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_4_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[20]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[21]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[22]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_4_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[24]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[4]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_4_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[25]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[26]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[27]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[28]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_4_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[29]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[5]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_4_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[30]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[32]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[33]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_4_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[34]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[6]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_4_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[35]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[36]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp0_workload[37]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[38]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_4_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_4_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_4_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_4_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_4_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp0_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_4_workload[7]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_4_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_5_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_5_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[8]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_5_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[9]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_5_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[10]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[11]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[12]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[13]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_5_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[14]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[2]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_5_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[15]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[16]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[17]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[18]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_5_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[19]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[3]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_5_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[20]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[21]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[22]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_5_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[24]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[4]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_5_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[25]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[26]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[27]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[28]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_5_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[29]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[5]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_5_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[30]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[32]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[33]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_5_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[34]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[6]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_5_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[35]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[36]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb0_streams_kp1_workload[37]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[38]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_5_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_5_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_5_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_5_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_5_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb0_streams_kp1_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_5_workload[7]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_5_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_6_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_6_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[8]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_6_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[9]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_6_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[10]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[11]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[12]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[13]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_6_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[14]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[2]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_6_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[15]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[16]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[17]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[18]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_6_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[19]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[3]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_6_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[20]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[21]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[22]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_6_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[24]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[4]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_6_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[25]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[26]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[27]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[28]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_6_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[29]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[5]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_6_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[30]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[32]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[33]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_6_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[34]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[6]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_6_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[35]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[36]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb1_streams_kp1_workload[37]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[38]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_6_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_6_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_6_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_6_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_6_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb1_streams_kp1_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_6_workload[7]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_6_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_7_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_7_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[8]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_7_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[9]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_7_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[10]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[11]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[12]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[13]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_7_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[14]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[2]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_7_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[15]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[16]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[17]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[18]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_7_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[19]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[3]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_7_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[20]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[21]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[22]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_7_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[24]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[4]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_7_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[25]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[26]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[27]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[28]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_7_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[29]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[5]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_7_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[30]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[32]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[33]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_7_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[34]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[6]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_7_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[35]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[36]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb2_streams_kp1_workload[37]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[38]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_7_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_7_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_7_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_7_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_7_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb2_streams_kp1_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_7_workload[7]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_7_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_8_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_8_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[8]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_8_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[9]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_8_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[10]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[11]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[12]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[13]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_8_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[14]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[2]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_8_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[15]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[16]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[17]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[18]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_8_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[19]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[3]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_8_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[20]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[21]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[22]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_8_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[24]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[4]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_8_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[25]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[26]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[27]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[28]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_8_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[29]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[5]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_8_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[30]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[32]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[33]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_8_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[34]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[6]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_8_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[35]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[36]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb3_streams_kp1_workload[37]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[38]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_8_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_8_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_8_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_8_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_8_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb3_streams_kp1_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_8_workload[7]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_8_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_9_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_0_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p0_bloom_single_arbiter_9_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[8]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_9_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_1_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[9]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p1_bloom_single_arbiter_9_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[10]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[11]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[12]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[13]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_9_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_2_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[14]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[2]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p2_bloom_single_arbiter_9_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[15]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[16]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[17]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[18]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_9_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_3_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[19]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[3]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p3_bloom_single_arbiter_9_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[20]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[21]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[22]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_9_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_4_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[24]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[4]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p4_bloom_single_arbiter_9_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[25]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[26]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[27]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[28]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_9_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_5_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[29]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[5]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd5",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p5_bloom_single_arbiter_9_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[30]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[32]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[33]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_9_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_6_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[34]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[6]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd6",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p6_bloom_single_arbiter_9_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd97",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[35]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[36]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd98",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb4_streams_kp1_workload[37]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[38]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_9_workload[1]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd99",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb_stage1_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_9_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_9_workload[0]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_9_workload[2]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "arb_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "atom_ID": {
                                "arg": "64'd100",
                                "cat": "scalar"
                            },
                            "in_stream0": {
                                "arg": "arb_stage2_outputs_bloom_arbiter_tree_singlepartition_7_bloom_single_arbiter_9_workload[0]",
                                "cat": "istream"
                            },
                            "in_stream1": {
                                "arg": "arb4_streams_kp1_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "out_stream": {
                                "arg": "arbtree_outputs_bloom_single_arbiter_9_workload[7]",
                                "cat": "ostream"
                            },
                            "partition_idx": {
                                "arg": "64'd7",
                                "cat": "scalar"
                            },
                            "ratemon_stream": {
                                "arg": "ratemon_fdbk_streams_p7_bloom_single_arbiter_9_workload[3]",
                                "cat": "istream"
                            }
                        },
                        "step": -1
                    }
                ],
                "computeHash_Computer": [
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h0_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_0_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h1_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_0_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h2_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_0_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h3_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_0_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h4_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_0_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h0_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_1_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h1_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_1_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h2_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_1_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h3_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_1_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h4_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_1_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h0_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_2_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h1_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_2_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h2_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_2_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h3_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_2_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h4_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_2_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h0_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_3_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h1_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_3_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h2_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_3_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h3_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_3_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h4_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_3_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h0_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_4_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h1_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_4_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h2_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_4_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h3_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_4_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h4_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_4_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h0_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_0_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h1_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_0_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h2_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_0_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h3_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_0_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h4_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_0_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h0_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_1_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h1_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_1_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h2_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_1_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h3_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_1_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h4_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_1_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h0_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_2_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h1_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_2_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h2_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_2_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h3_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_2_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h4_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_2_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h0_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_3_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h1_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_3_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h2_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_3_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h3_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_3_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h4_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_3_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h0_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_4_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h1_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_4_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h2_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_4_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h3_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_4_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "hash_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "hash_stream": {
                                "arg": "hash_stream_h4_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "key_stream": {
                                "arg": "key_tmp_stream_4_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    }
                ],
                "computeHash_Feeder": [
                    {
                        "args": {
                            "key_in_stream": {
                                "arg": "key_stream_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "key_out_stream[0]": {
                                "arg": "key_tmp_stream_0_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "key_out_stream[1]": {
                                "arg": "key_tmp_stream_0_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "key_out_stream[2]": {
                                "arg": "key_tmp_stream_0_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "key_out_stream[3]": {
                                "arg": "key_tmp_stream_0_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "key_out_stream[4]": {
                                "arg": "key_tmp_stream_0_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "strm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "key_in_stream": {
                                "arg": "key_stream_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "key_out_stream[0]": {
                                "arg": "key_tmp_stream_1_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "key_out_stream[1]": {
                                "arg": "key_tmp_stream_1_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "key_out_stream[2]": {
                                "arg": "key_tmp_stream_1_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "key_out_stream[3]": {
                                "arg": "key_tmp_stream_1_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "key_out_stream[4]": {
                                "arg": "key_tmp_stream_1_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "strm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "key_in_stream": {
                                "arg": "key_stream_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "key_out_stream[0]": {
                                "arg": "key_tmp_stream_2_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "key_out_stream[1]": {
                                "arg": "key_tmp_stream_2_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "key_out_stream[2]": {
                                "arg": "key_tmp_stream_2_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "key_out_stream[3]": {
                                "arg": "key_tmp_stream_2_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "key_out_stream[4]": {
                                "arg": "key_tmp_stream_2_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "strm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "key_in_stream": {
                                "arg": "key_stream_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "key_out_stream[0]": {
                                "arg": "key_tmp_stream_3_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "key_out_stream[1]": {
                                "arg": "key_tmp_stream_3_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "key_out_stream[2]": {
                                "arg": "key_tmp_stream_3_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "key_out_stream[3]": {
                                "arg": "key_tmp_stream_3_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "key_out_stream[4]": {
                                "arg": "key_tmp_stream_3_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "strm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "key_in_stream": {
                                "arg": "key_stream_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "key_out_stream[0]": {
                                "arg": "key_tmp_stream_4_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "key_out_stream[1]": {
                                "arg": "key_tmp_stream_4_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "key_out_stream[2]": {
                                "arg": "key_tmp_stream_4_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "key_out_stream[3]": {
                                "arg": "key_tmp_stream_4_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "key_out_stream[4]": {
                                "arg": "key_tmp_stream_4_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "keypair_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "strm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "key_in_stream": {
                                "arg": "key_stream_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "key_out_stream[0]": {
                                "arg": "key_tmp_stream_0_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "key_out_stream[1]": {
                                "arg": "key_tmp_stream_0_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "key_out_stream[2]": {
                                "arg": "key_tmp_stream_0_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "key_out_stream[3]": {
                                "arg": "key_tmp_stream_0_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "key_out_stream[4]": {
                                "arg": "key_tmp_stream_0_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "strm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "key_in_stream": {
                                "arg": "key_stream_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "key_out_stream[0]": {
                                "arg": "key_tmp_stream_1_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "key_out_stream[1]": {
                                "arg": "key_tmp_stream_1_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "key_out_stream[2]": {
                                "arg": "key_tmp_stream_1_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "key_out_stream[3]": {
                                "arg": "key_tmp_stream_1_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "key_out_stream[4]": {
                                "arg": "key_tmp_stream_1_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "strm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "key_in_stream": {
                                "arg": "key_stream_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "key_out_stream[0]": {
                                "arg": "key_tmp_stream_2_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "key_out_stream[1]": {
                                "arg": "key_tmp_stream_2_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "key_out_stream[2]": {
                                "arg": "key_tmp_stream_2_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "key_out_stream[3]": {
                                "arg": "key_tmp_stream_2_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "key_out_stream[4]": {
                                "arg": "key_tmp_stream_2_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "strm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "key_in_stream": {
                                "arg": "key_stream_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "key_out_stream[0]": {
                                "arg": "key_tmp_stream_3_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "key_out_stream[1]": {
                                "arg": "key_tmp_stream_3_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "key_out_stream[2]": {
                                "arg": "key_tmp_stream_3_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "key_out_stream[3]": {
                                "arg": "key_tmp_stream_3_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "key_out_stream[4]": {
                                "arg": "key_tmp_stream_3_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "strm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "key_in_stream": {
                                "arg": "key_stream_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "key_out_stream[0]": {
                                "arg": "key_tmp_stream_4_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "key_out_stream[1]": {
                                "arg": "key_tmp_stream_4_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "key_out_stream[2]": {
                                "arg": "key_tmp_stream_4_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "key_out_stream[3]": {
                                "arg": "key_tmp_stream_4_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "key_out_stream[4]": {
                                "arg": "key_tmp_stream_4_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "keypair_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "strm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    }
                ],
                "loadBV": [
                    {
                        "args": {
                            "bv_load_stream_0": {
                                "arg": "bv_load_stream_0_workload",
                                "cat": "ostream"
                            },
                            "bv_load_stream_1": {
                                "arg": "bv_load_stream_1_workload",
                                "cat": "ostream"
                            },
                            "bv_load_stream_2": {
                                "arg": "bv_load_stream_2_workload",
                                "cat": "ostream"
                            },
                            "bv_load_stream_3": {
                                "arg": "bv_load_stream_3_workload",
                                "cat": "ostream"
                            },
                            "bv_load_stream_4": {
                                "arg": "bv_load_stream_4_workload",
                                "cat": "ostream"
                            },
                            "input_bv": {
                                "arg": "input_bv",
                                "cat": "async_mmap"
                            }
                        },
                        "step": 0
                    }
                ],
                "loadKey": [
                    {
                        "args": {
                            "key_in": {
                                "arg": "key_in",
                                "cat": "async_mmap"
                            },
                            "key_stream_kp0[0]": {
                                "arg": "key_stream_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "key_stream_kp0[1]": {
                                "arg": "key_stream_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "key_stream_kp0[2]": {
                                "arg": "key_stream_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "key_stream_kp0[3]": {
                                "arg": "key_stream_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "key_stream_kp0[4]": {
                                "arg": "key_stream_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "key_stream_kp1[0]": {
                                "arg": "key_stream_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "key_stream_kp1[1]": {
                                "arg": "key_stream_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "key_stream_kp1[2]": {
                                "arg": "key_stream_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "key_stream_kp1[3]": {
                                "arg": "key_stream_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "key_stream_kp1[4]": {
                                "arg": "key_stream_kp1_workload[4]",
                                "cat": "ostream"
                            }
                        },
                        "step": 0
                    }
                ],
                "packOutput": [
                    {
                        "args": {
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "packed_outputs_stream": {
                                "arg": "packed_output_stm_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "strm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "packed_outputs_stream": {
                                "arg": "packed_output_stm_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "strm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "packed_outputs_stream": {
                                "arg": "packed_output_stm_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "strm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "packed_outputs_stream": {
                                "arg": "packed_output_stm_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "strm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "packed_outputs_stream": {
                                "arg": "packed_output_stm_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "strm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "packed_outputs_stream": {
                                "arg": "packed_output_stm_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "strm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "packed_outputs_stream": {
                                "arg": "packed_output_stm_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "strm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "packed_outputs_stream": {
                                "arg": "packed_output_stm_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "strm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "packed_outputs_stream": {
                                "arg": "packed_output_stm_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "strm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "aggregate_stream": {
                                "arg": "aggregate_stream_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "packed_outputs_stream": {
                                "arg": "packed_output_stm_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "strm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": 0
                    }
                ],
                "queryResult_per_hash": [
                    {
                        "args": {
                            "bv_load_stream": {
                                "arg": "bv_load_stream_0_workload",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[0]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[1]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[2]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[3]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[4]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[5]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[6]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[7]": {
                                "arg": "bv_lookup_stream_h0_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[0]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[1]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[2]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[3]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[4]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[5]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[6]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[7]": {
                                "arg": "bv_lookup_stream_h0_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "hash_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream_kp0[0]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[1]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[2]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[3]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[4]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[5]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[6]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[7]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[0]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[1]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[2]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[3]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[4]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[5]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[6]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[7]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[7]",
                                "cat": "ostream"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "bv_load_stream": {
                                "arg": "bv_load_stream_1_workload",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[0]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[1]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[2]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[3]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[4]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[5]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[6]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[7]": {
                                "arg": "bv_lookup_stream_h1_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[0]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[1]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[2]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[3]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[4]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[5]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[6]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[7]": {
                                "arg": "bv_lookup_stream_h1_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "hash_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream_kp0[0]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[1]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[2]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[3]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[4]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[5]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[6]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[7]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[0]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[1]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[2]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[3]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[4]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[5]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[6]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[7]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[7]",
                                "cat": "ostream"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "bv_load_stream": {
                                "arg": "bv_load_stream_2_workload",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[0]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[1]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[2]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[3]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[4]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[5]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[6]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[7]": {
                                "arg": "bv_lookup_stream_h2_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[0]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[1]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[2]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[3]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[4]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[5]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[6]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[7]": {
                                "arg": "bv_lookup_stream_h2_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "hash_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream_kp0[0]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[1]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[2]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[3]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[4]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[5]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[6]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[7]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[0]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[1]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[2]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[3]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[4]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[5]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[6]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[7]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[7]",
                                "cat": "ostream"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "bv_load_stream": {
                                "arg": "bv_load_stream_3_workload",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[0]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[1]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[2]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[3]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[4]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[5]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[6]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[7]": {
                                "arg": "bv_lookup_stream_h3_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[0]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[1]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[2]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[3]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[4]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[5]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[6]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[7]": {
                                "arg": "bv_lookup_stream_h3_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "hash_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream_kp0[0]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[1]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[2]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[3]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[4]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[5]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[6]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[7]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[0]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[1]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[2]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[3]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[4]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[5]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[6]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[7]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[7]",
                                "cat": "ostream"
                            }
                        },
                        "step": 0
                    },
                    {
                        "args": {
                            "bv_load_stream": {
                                "arg": "bv_load_stream_4_workload",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[0]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[1]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[2]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[3]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[4]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[5]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[6]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp0[7]": {
                                "arg": "bv_lookup_stream_h4_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[0]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[1]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[2]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[3]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[4]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[5]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[6]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "bv_lookup_stream_kp1[7]": {
                                "arg": "bv_lookup_stream_h4_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "hash_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream_kp0[0]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[1]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[2]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[3]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[4]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[5]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[6]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp0[7]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[0]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[1]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[2]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[3]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[4]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[5]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[6]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "query_bv_packed_stream_kp1[7]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[7]",
                                "cat": "ostream"
                            }
                        },
                        "step": 0
                    }
                ],
                "shuffle_TtoS_per_hash": [
                    {
                        "args": {
                            "inter_shuffle_stream[0]": {
                                "arg": "inter_shuf0_stm_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[10]": {
                                "arg": "inter_shuf0_stm_kp0_workload[10]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[11]": {
                                "arg": "inter_shuf0_stm_kp0_workload[11]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[12]": {
                                "arg": "inter_shuf0_stm_kp0_workload[12]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[13]": {
                                "arg": "inter_shuf0_stm_kp0_workload[13]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[14]": {
                                "arg": "inter_shuf0_stm_kp0_workload[14]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[15]": {
                                "arg": "inter_shuf0_stm_kp0_workload[15]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[16]": {
                                "arg": "inter_shuf0_stm_kp0_workload[16]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[17]": {
                                "arg": "inter_shuf0_stm_kp0_workload[17]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[18]": {
                                "arg": "inter_shuf0_stm_kp0_workload[18]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[19]": {
                                "arg": "inter_shuf0_stm_kp0_workload[19]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[1]": {
                                "arg": "inter_shuf0_stm_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[20]": {
                                "arg": "inter_shuf0_stm_kp0_workload[20]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[21]": {
                                "arg": "inter_shuf0_stm_kp0_workload[21]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[22]": {
                                "arg": "inter_shuf0_stm_kp0_workload[22]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[23]": {
                                "arg": "inter_shuf0_stm_kp0_workload[23]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[24]": {
                                "arg": "inter_shuf0_stm_kp0_workload[24]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[25]": {
                                "arg": "inter_shuf0_stm_kp0_workload[25]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[26]": {
                                "arg": "inter_shuf0_stm_kp0_workload[26]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[27]": {
                                "arg": "inter_shuf0_stm_kp0_workload[27]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[28]": {
                                "arg": "inter_shuf0_stm_kp0_workload[28]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[29]": {
                                "arg": "inter_shuf0_stm_kp0_workload[29]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[2]": {
                                "arg": "inter_shuf0_stm_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[30]": {
                                "arg": "inter_shuf0_stm_kp0_workload[30]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[31]": {
                                "arg": "inter_shuf0_stm_kp0_workload[31]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[32]": {
                                "arg": "inter_shuf0_stm_kp0_workload[32]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[33]": {
                                "arg": "inter_shuf0_stm_kp0_workload[33]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[34]": {
                                "arg": "inter_shuf0_stm_kp0_workload[34]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[35]": {
                                "arg": "inter_shuf0_stm_kp0_workload[35]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[36]": {
                                "arg": "inter_shuf0_stm_kp0_workload[36]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[37]": {
                                "arg": "inter_shuf0_stm_kp0_workload[37]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[38]": {
                                "arg": "inter_shuf0_stm_kp0_workload[38]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[39]": {
                                "arg": "inter_shuf0_stm_kp0_workload[39]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[3]": {
                                "arg": "inter_shuf0_stm_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[4]": {
                                "arg": "inter_shuf0_stm_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[5]": {
                                "arg": "inter_shuf0_stm_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[6]": {
                                "arg": "inter_shuf0_stm_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[7]": {
                                "arg": "inter_shuf0_stm_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[8]": {
                                "arg": "inter_shuf0_stm_kp0_workload[8]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[9]": {
                                "arg": "inter_shuf0_stm_kp0_workload[9]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream[0]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[1]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[2]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[3]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[4]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[5]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[6]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[7]": {
                                "arg": "query_bv_packed_stream_hash0_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream[0]": {
                                "arg": "inter_shuf1_stm_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[10]": {
                                "arg": "inter_shuf1_stm_kp0_workload[10]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[11]": {
                                "arg": "inter_shuf1_stm_kp0_workload[11]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[12]": {
                                "arg": "inter_shuf1_stm_kp0_workload[12]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[13]": {
                                "arg": "inter_shuf1_stm_kp0_workload[13]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[14]": {
                                "arg": "inter_shuf1_stm_kp0_workload[14]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[15]": {
                                "arg": "inter_shuf1_stm_kp0_workload[15]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[16]": {
                                "arg": "inter_shuf1_stm_kp0_workload[16]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[17]": {
                                "arg": "inter_shuf1_stm_kp0_workload[17]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[18]": {
                                "arg": "inter_shuf1_stm_kp0_workload[18]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[19]": {
                                "arg": "inter_shuf1_stm_kp0_workload[19]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[1]": {
                                "arg": "inter_shuf1_stm_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[20]": {
                                "arg": "inter_shuf1_stm_kp0_workload[20]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[21]": {
                                "arg": "inter_shuf1_stm_kp0_workload[21]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[22]": {
                                "arg": "inter_shuf1_stm_kp0_workload[22]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[23]": {
                                "arg": "inter_shuf1_stm_kp0_workload[23]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[24]": {
                                "arg": "inter_shuf1_stm_kp0_workload[24]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[25]": {
                                "arg": "inter_shuf1_stm_kp0_workload[25]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[26]": {
                                "arg": "inter_shuf1_stm_kp0_workload[26]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[27]": {
                                "arg": "inter_shuf1_stm_kp0_workload[27]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[28]": {
                                "arg": "inter_shuf1_stm_kp0_workload[28]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[29]": {
                                "arg": "inter_shuf1_stm_kp0_workload[29]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[2]": {
                                "arg": "inter_shuf1_stm_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[30]": {
                                "arg": "inter_shuf1_stm_kp0_workload[30]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[31]": {
                                "arg": "inter_shuf1_stm_kp0_workload[31]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[32]": {
                                "arg": "inter_shuf1_stm_kp0_workload[32]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[33]": {
                                "arg": "inter_shuf1_stm_kp0_workload[33]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[34]": {
                                "arg": "inter_shuf1_stm_kp0_workload[34]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[35]": {
                                "arg": "inter_shuf1_stm_kp0_workload[35]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[36]": {
                                "arg": "inter_shuf1_stm_kp0_workload[36]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[37]": {
                                "arg": "inter_shuf1_stm_kp0_workload[37]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[38]": {
                                "arg": "inter_shuf1_stm_kp0_workload[38]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[39]": {
                                "arg": "inter_shuf1_stm_kp0_workload[39]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[3]": {
                                "arg": "inter_shuf1_stm_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[4]": {
                                "arg": "inter_shuf1_stm_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[5]": {
                                "arg": "inter_shuf1_stm_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[6]": {
                                "arg": "inter_shuf1_stm_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[7]": {
                                "arg": "inter_shuf1_stm_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[8]": {
                                "arg": "inter_shuf1_stm_kp0_workload[8]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[9]": {
                                "arg": "inter_shuf1_stm_kp0_workload[9]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream[0]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[1]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[2]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[3]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[4]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[5]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[6]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[7]": {
                                "arg": "query_bv_packed_stream_hash1_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream[0]": {
                                "arg": "inter_shuf2_stm_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[10]": {
                                "arg": "inter_shuf2_stm_kp0_workload[10]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[11]": {
                                "arg": "inter_shuf2_stm_kp0_workload[11]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[12]": {
                                "arg": "inter_shuf2_stm_kp0_workload[12]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[13]": {
                                "arg": "inter_shuf2_stm_kp0_workload[13]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[14]": {
                                "arg": "inter_shuf2_stm_kp0_workload[14]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[15]": {
                                "arg": "inter_shuf2_stm_kp0_workload[15]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[16]": {
                                "arg": "inter_shuf2_stm_kp0_workload[16]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[17]": {
                                "arg": "inter_shuf2_stm_kp0_workload[17]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[18]": {
                                "arg": "inter_shuf2_stm_kp0_workload[18]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[19]": {
                                "arg": "inter_shuf2_stm_kp0_workload[19]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[1]": {
                                "arg": "inter_shuf2_stm_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[20]": {
                                "arg": "inter_shuf2_stm_kp0_workload[20]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[21]": {
                                "arg": "inter_shuf2_stm_kp0_workload[21]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[22]": {
                                "arg": "inter_shuf2_stm_kp0_workload[22]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[23]": {
                                "arg": "inter_shuf2_stm_kp0_workload[23]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[24]": {
                                "arg": "inter_shuf2_stm_kp0_workload[24]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[25]": {
                                "arg": "inter_shuf2_stm_kp0_workload[25]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[26]": {
                                "arg": "inter_shuf2_stm_kp0_workload[26]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[27]": {
                                "arg": "inter_shuf2_stm_kp0_workload[27]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[28]": {
                                "arg": "inter_shuf2_stm_kp0_workload[28]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[29]": {
                                "arg": "inter_shuf2_stm_kp0_workload[29]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[2]": {
                                "arg": "inter_shuf2_stm_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[30]": {
                                "arg": "inter_shuf2_stm_kp0_workload[30]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[31]": {
                                "arg": "inter_shuf2_stm_kp0_workload[31]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[32]": {
                                "arg": "inter_shuf2_stm_kp0_workload[32]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[33]": {
                                "arg": "inter_shuf2_stm_kp0_workload[33]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[34]": {
                                "arg": "inter_shuf2_stm_kp0_workload[34]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[35]": {
                                "arg": "inter_shuf2_stm_kp0_workload[35]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[36]": {
                                "arg": "inter_shuf2_stm_kp0_workload[36]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[37]": {
                                "arg": "inter_shuf2_stm_kp0_workload[37]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[38]": {
                                "arg": "inter_shuf2_stm_kp0_workload[38]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[39]": {
                                "arg": "inter_shuf2_stm_kp0_workload[39]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[3]": {
                                "arg": "inter_shuf2_stm_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[4]": {
                                "arg": "inter_shuf2_stm_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[5]": {
                                "arg": "inter_shuf2_stm_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[6]": {
                                "arg": "inter_shuf2_stm_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[7]": {
                                "arg": "inter_shuf2_stm_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[8]": {
                                "arg": "inter_shuf2_stm_kp0_workload[8]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[9]": {
                                "arg": "inter_shuf2_stm_kp0_workload[9]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream[0]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[1]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[2]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[3]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[4]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[5]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[6]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[7]": {
                                "arg": "query_bv_packed_stream_hash2_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream[0]": {
                                "arg": "inter_shuf3_stm_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[10]": {
                                "arg": "inter_shuf3_stm_kp0_workload[10]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[11]": {
                                "arg": "inter_shuf3_stm_kp0_workload[11]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[12]": {
                                "arg": "inter_shuf3_stm_kp0_workload[12]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[13]": {
                                "arg": "inter_shuf3_stm_kp0_workload[13]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[14]": {
                                "arg": "inter_shuf3_stm_kp0_workload[14]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[15]": {
                                "arg": "inter_shuf3_stm_kp0_workload[15]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[16]": {
                                "arg": "inter_shuf3_stm_kp0_workload[16]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[17]": {
                                "arg": "inter_shuf3_stm_kp0_workload[17]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[18]": {
                                "arg": "inter_shuf3_stm_kp0_workload[18]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[19]": {
                                "arg": "inter_shuf3_stm_kp0_workload[19]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[1]": {
                                "arg": "inter_shuf3_stm_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[20]": {
                                "arg": "inter_shuf3_stm_kp0_workload[20]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[21]": {
                                "arg": "inter_shuf3_stm_kp0_workload[21]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[22]": {
                                "arg": "inter_shuf3_stm_kp0_workload[22]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[23]": {
                                "arg": "inter_shuf3_stm_kp0_workload[23]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[24]": {
                                "arg": "inter_shuf3_stm_kp0_workload[24]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[25]": {
                                "arg": "inter_shuf3_stm_kp0_workload[25]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[26]": {
                                "arg": "inter_shuf3_stm_kp0_workload[26]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[27]": {
                                "arg": "inter_shuf3_stm_kp0_workload[27]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[28]": {
                                "arg": "inter_shuf3_stm_kp0_workload[28]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[29]": {
                                "arg": "inter_shuf3_stm_kp0_workload[29]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[2]": {
                                "arg": "inter_shuf3_stm_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[30]": {
                                "arg": "inter_shuf3_stm_kp0_workload[30]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[31]": {
                                "arg": "inter_shuf3_stm_kp0_workload[31]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[32]": {
                                "arg": "inter_shuf3_stm_kp0_workload[32]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[33]": {
                                "arg": "inter_shuf3_stm_kp0_workload[33]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[34]": {
                                "arg": "inter_shuf3_stm_kp0_workload[34]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[35]": {
                                "arg": "inter_shuf3_stm_kp0_workload[35]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[36]": {
                                "arg": "inter_shuf3_stm_kp0_workload[36]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[37]": {
                                "arg": "inter_shuf3_stm_kp0_workload[37]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[38]": {
                                "arg": "inter_shuf3_stm_kp0_workload[38]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[39]": {
                                "arg": "inter_shuf3_stm_kp0_workload[39]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[3]": {
                                "arg": "inter_shuf3_stm_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[4]": {
                                "arg": "inter_shuf3_stm_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[5]": {
                                "arg": "inter_shuf3_stm_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[6]": {
                                "arg": "inter_shuf3_stm_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[7]": {
                                "arg": "inter_shuf3_stm_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[8]": {
                                "arg": "inter_shuf3_stm_kp0_workload[8]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[9]": {
                                "arg": "inter_shuf3_stm_kp0_workload[9]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream[0]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[1]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[2]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[3]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[4]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[5]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[6]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[7]": {
                                "arg": "query_bv_packed_stream_hash3_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream[0]": {
                                "arg": "inter_shuf4_stm_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[10]": {
                                "arg": "inter_shuf4_stm_kp0_workload[10]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[11]": {
                                "arg": "inter_shuf4_stm_kp0_workload[11]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[12]": {
                                "arg": "inter_shuf4_stm_kp0_workload[12]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[13]": {
                                "arg": "inter_shuf4_stm_kp0_workload[13]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[14]": {
                                "arg": "inter_shuf4_stm_kp0_workload[14]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[15]": {
                                "arg": "inter_shuf4_stm_kp0_workload[15]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[16]": {
                                "arg": "inter_shuf4_stm_kp0_workload[16]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[17]": {
                                "arg": "inter_shuf4_stm_kp0_workload[17]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[18]": {
                                "arg": "inter_shuf4_stm_kp0_workload[18]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[19]": {
                                "arg": "inter_shuf4_stm_kp0_workload[19]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[1]": {
                                "arg": "inter_shuf4_stm_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[20]": {
                                "arg": "inter_shuf4_stm_kp0_workload[20]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[21]": {
                                "arg": "inter_shuf4_stm_kp0_workload[21]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[22]": {
                                "arg": "inter_shuf4_stm_kp0_workload[22]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[23]": {
                                "arg": "inter_shuf4_stm_kp0_workload[23]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[24]": {
                                "arg": "inter_shuf4_stm_kp0_workload[24]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[25]": {
                                "arg": "inter_shuf4_stm_kp0_workload[25]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[26]": {
                                "arg": "inter_shuf4_stm_kp0_workload[26]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[27]": {
                                "arg": "inter_shuf4_stm_kp0_workload[27]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[28]": {
                                "arg": "inter_shuf4_stm_kp0_workload[28]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[29]": {
                                "arg": "inter_shuf4_stm_kp0_workload[29]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[2]": {
                                "arg": "inter_shuf4_stm_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[30]": {
                                "arg": "inter_shuf4_stm_kp0_workload[30]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[31]": {
                                "arg": "inter_shuf4_stm_kp0_workload[31]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[32]": {
                                "arg": "inter_shuf4_stm_kp0_workload[32]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[33]": {
                                "arg": "inter_shuf4_stm_kp0_workload[33]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[34]": {
                                "arg": "inter_shuf4_stm_kp0_workload[34]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[35]": {
                                "arg": "inter_shuf4_stm_kp0_workload[35]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[36]": {
                                "arg": "inter_shuf4_stm_kp0_workload[36]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[37]": {
                                "arg": "inter_shuf4_stm_kp0_workload[37]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[38]": {
                                "arg": "inter_shuf4_stm_kp0_workload[38]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[39]": {
                                "arg": "inter_shuf4_stm_kp0_workload[39]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[3]": {
                                "arg": "inter_shuf4_stm_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[4]": {
                                "arg": "inter_shuf4_stm_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[5]": {
                                "arg": "inter_shuf4_stm_kp0_workload[5]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[6]": {
                                "arg": "inter_shuf4_stm_kp0_workload[6]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[7]": {
                                "arg": "inter_shuf4_stm_kp0_workload[7]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[8]": {
                                "arg": "inter_shuf4_stm_kp0_workload[8]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[9]": {
                                "arg": "inter_shuf4_stm_kp0_workload[9]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream[0]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[1]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[2]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[3]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[4]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[5]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[6]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[7]": {
                                "arg": "query_bv_packed_stream_hash4_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream[0]": {
                                "arg": "inter_shuf0_stm_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[10]": {
                                "arg": "inter_shuf0_stm_kp1_workload[10]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[11]": {
                                "arg": "inter_shuf0_stm_kp1_workload[11]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[12]": {
                                "arg": "inter_shuf0_stm_kp1_workload[12]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[13]": {
                                "arg": "inter_shuf0_stm_kp1_workload[13]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[14]": {
                                "arg": "inter_shuf0_stm_kp1_workload[14]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[15]": {
                                "arg": "inter_shuf0_stm_kp1_workload[15]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[16]": {
                                "arg": "inter_shuf0_stm_kp1_workload[16]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[17]": {
                                "arg": "inter_shuf0_stm_kp1_workload[17]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[18]": {
                                "arg": "inter_shuf0_stm_kp1_workload[18]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[19]": {
                                "arg": "inter_shuf0_stm_kp1_workload[19]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[1]": {
                                "arg": "inter_shuf0_stm_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[20]": {
                                "arg": "inter_shuf0_stm_kp1_workload[20]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[21]": {
                                "arg": "inter_shuf0_stm_kp1_workload[21]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[22]": {
                                "arg": "inter_shuf0_stm_kp1_workload[22]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[23]": {
                                "arg": "inter_shuf0_stm_kp1_workload[23]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[24]": {
                                "arg": "inter_shuf0_stm_kp1_workload[24]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[25]": {
                                "arg": "inter_shuf0_stm_kp1_workload[25]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[26]": {
                                "arg": "inter_shuf0_stm_kp1_workload[26]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[27]": {
                                "arg": "inter_shuf0_stm_kp1_workload[27]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[28]": {
                                "arg": "inter_shuf0_stm_kp1_workload[28]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[29]": {
                                "arg": "inter_shuf0_stm_kp1_workload[29]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[2]": {
                                "arg": "inter_shuf0_stm_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[30]": {
                                "arg": "inter_shuf0_stm_kp1_workload[30]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[31]": {
                                "arg": "inter_shuf0_stm_kp1_workload[31]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[32]": {
                                "arg": "inter_shuf0_stm_kp1_workload[32]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[33]": {
                                "arg": "inter_shuf0_stm_kp1_workload[33]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[34]": {
                                "arg": "inter_shuf0_stm_kp1_workload[34]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[35]": {
                                "arg": "inter_shuf0_stm_kp1_workload[35]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[36]": {
                                "arg": "inter_shuf0_stm_kp1_workload[36]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[37]": {
                                "arg": "inter_shuf0_stm_kp1_workload[37]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[38]": {
                                "arg": "inter_shuf0_stm_kp1_workload[38]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[39]": {
                                "arg": "inter_shuf0_stm_kp1_workload[39]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[3]": {
                                "arg": "inter_shuf0_stm_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[4]": {
                                "arg": "inter_shuf0_stm_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[5]": {
                                "arg": "inter_shuf0_stm_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[6]": {
                                "arg": "inter_shuf0_stm_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[7]": {
                                "arg": "inter_shuf0_stm_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[8]": {
                                "arg": "inter_shuf0_stm_kp1_workload[8]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[9]": {
                                "arg": "inter_shuf0_stm_kp1_workload[9]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream[0]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[1]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[2]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[3]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[4]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[5]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[6]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[7]": {
                                "arg": "query_bv_packed_stream_hash0_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream[0]": {
                                "arg": "inter_shuf1_stm_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[10]": {
                                "arg": "inter_shuf1_stm_kp1_workload[10]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[11]": {
                                "arg": "inter_shuf1_stm_kp1_workload[11]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[12]": {
                                "arg": "inter_shuf1_stm_kp1_workload[12]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[13]": {
                                "arg": "inter_shuf1_stm_kp1_workload[13]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[14]": {
                                "arg": "inter_shuf1_stm_kp1_workload[14]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[15]": {
                                "arg": "inter_shuf1_stm_kp1_workload[15]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[16]": {
                                "arg": "inter_shuf1_stm_kp1_workload[16]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[17]": {
                                "arg": "inter_shuf1_stm_kp1_workload[17]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[18]": {
                                "arg": "inter_shuf1_stm_kp1_workload[18]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[19]": {
                                "arg": "inter_shuf1_stm_kp1_workload[19]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[1]": {
                                "arg": "inter_shuf1_stm_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[20]": {
                                "arg": "inter_shuf1_stm_kp1_workload[20]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[21]": {
                                "arg": "inter_shuf1_stm_kp1_workload[21]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[22]": {
                                "arg": "inter_shuf1_stm_kp1_workload[22]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[23]": {
                                "arg": "inter_shuf1_stm_kp1_workload[23]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[24]": {
                                "arg": "inter_shuf1_stm_kp1_workload[24]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[25]": {
                                "arg": "inter_shuf1_stm_kp1_workload[25]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[26]": {
                                "arg": "inter_shuf1_stm_kp1_workload[26]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[27]": {
                                "arg": "inter_shuf1_stm_kp1_workload[27]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[28]": {
                                "arg": "inter_shuf1_stm_kp1_workload[28]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[29]": {
                                "arg": "inter_shuf1_stm_kp1_workload[29]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[2]": {
                                "arg": "inter_shuf1_stm_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[30]": {
                                "arg": "inter_shuf1_stm_kp1_workload[30]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[31]": {
                                "arg": "inter_shuf1_stm_kp1_workload[31]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[32]": {
                                "arg": "inter_shuf1_stm_kp1_workload[32]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[33]": {
                                "arg": "inter_shuf1_stm_kp1_workload[33]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[34]": {
                                "arg": "inter_shuf1_stm_kp1_workload[34]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[35]": {
                                "arg": "inter_shuf1_stm_kp1_workload[35]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[36]": {
                                "arg": "inter_shuf1_stm_kp1_workload[36]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[37]": {
                                "arg": "inter_shuf1_stm_kp1_workload[37]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[38]": {
                                "arg": "inter_shuf1_stm_kp1_workload[38]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[39]": {
                                "arg": "inter_shuf1_stm_kp1_workload[39]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[3]": {
                                "arg": "inter_shuf1_stm_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[4]": {
                                "arg": "inter_shuf1_stm_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[5]": {
                                "arg": "inter_shuf1_stm_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[6]": {
                                "arg": "inter_shuf1_stm_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[7]": {
                                "arg": "inter_shuf1_stm_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[8]": {
                                "arg": "inter_shuf1_stm_kp1_workload[8]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[9]": {
                                "arg": "inter_shuf1_stm_kp1_workload[9]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream[0]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[1]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[2]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[3]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[4]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[5]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[6]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[7]": {
                                "arg": "query_bv_packed_stream_hash1_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream[0]": {
                                "arg": "inter_shuf2_stm_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[10]": {
                                "arg": "inter_shuf2_stm_kp1_workload[10]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[11]": {
                                "arg": "inter_shuf2_stm_kp1_workload[11]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[12]": {
                                "arg": "inter_shuf2_stm_kp1_workload[12]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[13]": {
                                "arg": "inter_shuf2_stm_kp1_workload[13]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[14]": {
                                "arg": "inter_shuf2_stm_kp1_workload[14]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[15]": {
                                "arg": "inter_shuf2_stm_kp1_workload[15]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[16]": {
                                "arg": "inter_shuf2_stm_kp1_workload[16]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[17]": {
                                "arg": "inter_shuf2_stm_kp1_workload[17]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[18]": {
                                "arg": "inter_shuf2_stm_kp1_workload[18]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[19]": {
                                "arg": "inter_shuf2_stm_kp1_workload[19]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[1]": {
                                "arg": "inter_shuf2_stm_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[20]": {
                                "arg": "inter_shuf2_stm_kp1_workload[20]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[21]": {
                                "arg": "inter_shuf2_stm_kp1_workload[21]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[22]": {
                                "arg": "inter_shuf2_stm_kp1_workload[22]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[23]": {
                                "arg": "inter_shuf2_stm_kp1_workload[23]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[24]": {
                                "arg": "inter_shuf2_stm_kp1_workload[24]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[25]": {
                                "arg": "inter_shuf2_stm_kp1_workload[25]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[26]": {
                                "arg": "inter_shuf2_stm_kp1_workload[26]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[27]": {
                                "arg": "inter_shuf2_stm_kp1_workload[27]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[28]": {
                                "arg": "inter_shuf2_stm_kp1_workload[28]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[29]": {
                                "arg": "inter_shuf2_stm_kp1_workload[29]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[2]": {
                                "arg": "inter_shuf2_stm_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[30]": {
                                "arg": "inter_shuf2_stm_kp1_workload[30]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[31]": {
                                "arg": "inter_shuf2_stm_kp1_workload[31]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[32]": {
                                "arg": "inter_shuf2_stm_kp1_workload[32]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[33]": {
                                "arg": "inter_shuf2_stm_kp1_workload[33]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[34]": {
                                "arg": "inter_shuf2_stm_kp1_workload[34]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[35]": {
                                "arg": "inter_shuf2_stm_kp1_workload[35]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[36]": {
                                "arg": "inter_shuf2_stm_kp1_workload[36]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[37]": {
                                "arg": "inter_shuf2_stm_kp1_workload[37]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[38]": {
                                "arg": "inter_shuf2_stm_kp1_workload[38]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[39]": {
                                "arg": "inter_shuf2_stm_kp1_workload[39]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[3]": {
                                "arg": "inter_shuf2_stm_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[4]": {
                                "arg": "inter_shuf2_stm_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[5]": {
                                "arg": "inter_shuf2_stm_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[6]": {
                                "arg": "inter_shuf2_stm_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[7]": {
                                "arg": "inter_shuf2_stm_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[8]": {
                                "arg": "inter_shuf2_stm_kp1_workload[8]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[9]": {
                                "arg": "inter_shuf2_stm_kp1_workload[9]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream[0]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[1]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[2]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[3]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[4]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[5]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[6]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[7]": {
                                "arg": "query_bv_packed_stream_hash2_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream[0]": {
                                "arg": "inter_shuf3_stm_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[10]": {
                                "arg": "inter_shuf3_stm_kp1_workload[10]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[11]": {
                                "arg": "inter_shuf3_stm_kp1_workload[11]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[12]": {
                                "arg": "inter_shuf3_stm_kp1_workload[12]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[13]": {
                                "arg": "inter_shuf3_stm_kp1_workload[13]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[14]": {
                                "arg": "inter_shuf3_stm_kp1_workload[14]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[15]": {
                                "arg": "inter_shuf3_stm_kp1_workload[15]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[16]": {
                                "arg": "inter_shuf3_stm_kp1_workload[16]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[17]": {
                                "arg": "inter_shuf3_stm_kp1_workload[17]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[18]": {
                                "arg": "inter_shuf3_stm_kp1_workload[18]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[19]": {
                                "arg": "inter_shuf3_stm_kp1_workload[19]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[1]": {
                                "arg": "inter_shuf3_stm_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[20]": {
                                "arg": "inter_shuf3_stm_kp1_workload[20]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[21]": {
                                "arg": "inter_shuf3_stm_kp1_workload[21]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[22]": {
                                "arg": "inter_shuf3_stm_kp1_workload[22]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[23]": {
                                "arg": "inter_shuf3_stm_kp1_workload[23]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[24]": {
                                "arg": "inter_shuf3_stm_kp1_workload[24]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[25]": {
                                "arg": "inter_shuf3_stm_kp1_workload[25]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[26]": {
                                "arg": "inter_shuf3_stm_kp1_workload[26]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[27]": {
                                "arg": "inter_shuf3_stm_kp1_workload[27]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[28]": {
                                "arg": "inter_shuf3_stm_kp1_workload[28]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[29]": {
                                "arg": "inter_shuf3_stm_kp1_workload[29]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[2]": {
                                "arg": "inter_shuf3_stm_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[30]": {
                                "arg": "inter_shuf3_stm_kp1_workload[30]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[31]": {
                                "arg": "inter_shuf3_stm_kp1_workload[31]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[32]": {
                                "arg": "inter_shuf3_stm_kp1_workload[32]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[33]": {
                                "arg": "inter_shuf3_stm_kp1_workload[33]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[34]": {
                                "arg": "inter_shuf3_stm_kp1_workload[34]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[35]": {
                                "arg": "inter_shuf3_stm_kp1_workload[35]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[36]": {
                                "arg": "inter_shuf3_stm_kp1_workload[36]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[37]": {
                                "arg": "inter_shuf3_stm_kp1_workload[37]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[38]": {
                                "arg": "inter_shuf3_stm_kp1_workload[38]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[39]": {
                                "arg": "inter_shuf3_stm_kp1_workload[39]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[3]": {
                                "arg": "inter_shuf3_stm_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[4]": {
                                "arg": "inter_shuf3_stm_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[5]": {
                                "arg": "inter_shuf3_stm_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[6]": {
                                "arg": "inter_shuf3_stm_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[7]": {
                                "arg": "inter_shuf3_stm_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[8]": {
                                "arg": "inter_shuf3_stm_kp1_workload[8]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[9]": {
                                "arg": "inter_shuf3_stm_kp1_workload[9]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream[0]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[1]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[2]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[3]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[4]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[5]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[6]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[7]": {
                                "arg": "query_bv_packed_stream_hash3_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream[0]": {
                                "arg": "inter_shuf4_stm_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[10]": {
                                "arg": "inter_shuf4_stm_kp1_workload[10]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[11]": {
                                "arg": "inter_shuf4_stm_kp1_workload[11]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[12]": {
                                "arg": "inter_shuf4_stm_kp1_workload[12]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[13]": {
                                "arg": "inter_shuf4_stm_kp1_workload[13]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[14]": {
                                "arg": "inter_shuf4_stm_kp1_workload[14]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[15]": {
                                "arg": "inter_shuf4_stm_kp1_workload[15]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[16]": {
                                "arg": "inter_shuf4_stm_kp1_workload[16]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[17]": {
                                "arg": "inter_shuf4_stm_kp1_workload[17]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[18]": {
                                "arg": "inter_shuf4_stm_kp1_workload[18]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[19]": {
                                "arg": "inter_shuf4_stm_kp1_workload[19]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[1]": {
                                "arg": "inter_shuf4_stm_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[20]": {
                                "arg": "inter_shuf4_stm_kp1_workload[20]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[21]": {
                                "arg": "inter_shuf4_stm_kp1_workload[21]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[22]": {
                                "arg": "inter_shuf4_stm_kp1_workload[22]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[23]": {
                                "arg": "inter_shuf4_stm_kp1_workload[23]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[24]": {
                                "arg": "inter_shuf4_stm_kp1_workload[24]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[25]": {
                                "arg": "inter_shuf4_stm_kp1_workload[25]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[26]": {
                                "arg": "inter_shuf4_stm_kp1_workload[26]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[27]": {
                                "arg": "inter_shuf4_stm_kp1_workload[27]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[28]": {
                                "arg": "inter_shuf4_stm_kp1_workload[28]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[29]": {
                                "arg": "inter_shuf4_stm_kp1_workload[29]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[2]": {
                                "arg": "inter_shuf4_stm_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[30]": {
                                "arg": "inter_shuf4_stm_kp1_workload[30]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[31]": {
                                "arg": "inter_shuf4_stm_kp1_workload[31]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[32]": {
                                "arg": "inter_shuf4_stm_kp1_workload[32]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[33]": {
                                "arg": "inter_shuf4_stm_kp1_workload[33]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[34]": {
                                "arg": "inter_shuf4_stm_kp1_workload[34]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[35]": {
                                "arg": "inter_shuf4_stm_kp1_workload[35]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[36]": {
                                "arg": "inter_shuf4_stm_kp1_workload[36]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[37]": {
                                "arg": "inter_shuf4_stm_kp1_workload[37]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[38]": {
                                "arg": "inter_shuf4_stm_kp1_workload[38]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[39]": {
                                "arg": "inter_shuf4_stm_kp1_workload[39]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[3]": {
                                "arg": "inter_shuf4_stm_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[4]": {
                                "arg": "inter_shuf4_stm_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[5]": {
                                "arg": "inter_shuf4_stm_kp1_workload[5]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[6]": {
                                "arg": "inter_shuf4_stm_kp1_workload[6]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[7]": {
                                "arg": "inter_shuf4_stm_kp1_workload[7]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[8]": {
                                "arg": "inter_shuf4_stm_kp1_workload[8]",
                                "cat": "ostream"
                            },
                            "inter_shuffle_stream[9]": {
                                "arg": "inter_shuf4_stm_kp1_workload[9]",
                                "cat": "ostream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "query_bv_packed_stream[0]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[1]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[2]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[3]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[4]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[5]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[6]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "query_bv_packed_stream[7]": {
                                "arg": "query_bv_packed_stream_hash4_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    }
                ],
                "shuffle_reordering_per_hash": [
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf0_stm_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf0_stm_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf0_stm_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf0_stm_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf0_stm_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf0_stm_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf0_stm_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf0_stm_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm0_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf0_stm_kp0_workload[8]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf0_stm_kp0_workload[9]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf0_stm_kp0_workload[10]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf0_stm_kp0_workload[11]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf0_stm_kp0_workload[12]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf0_stm_kp0_workload[13]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf0_stm_kp0_workload[14]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf0_stm_kp0_workload[15]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm1_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf0_stm_kp0_workload[16]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf0_stm_kp0_workload[17]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf0_stm_kp0_workload[18]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf0_stm_kp0_workload[19]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf0_stm_kp0_workload[20]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf0_stm_kp0_workload[21]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf0_stm_kp0_workload[22]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf0_stm_kp0_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm2_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf0_stm_kp0_workload[24]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf0_stm_kp0_workload[25]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf0_stm_kp0_workload[26]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf0_stm_kp0_workload[27]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf0_stm_kp0_workload[28]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf0_stm_kp0_workload[29]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf0_stm_kp0_workload[30]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf0_stm_kp0_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm3_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf0_stm_kp0_workload[32]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf0_stm_kp0_workload[33]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf0_stm_kp0_workload[34]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf0_stm_kp0_workload[35]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf0_stm_kp0_workload[36]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf0_stm_kp0_workload[37]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf0_stm_kp0_workload[38]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf0_stm_kp0_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm4_kp0_workload[0]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf1_stm_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf1_stm_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf1_stm_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf1_stm_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf1_stm_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf1_stm_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf1_stm_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf1_stm_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm0_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf1_stm_kp0_workload[8]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf1_stm_kp0_workload[9]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf1_stm_kp0_workload[10]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf1_stm_kp0_workload[11]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf1_stm_kp0_workload[12]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf1_stm_kp0_workload[13]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf1_stm_kp0_workload[14]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf1_stm_kp0_workload[15]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm1_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf1_stm_kp0_workload[16]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf1_stm_kp0_workload[17]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf1_stm_kp0_workload[18]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf1_stm_kp0_workload[19]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf1_stm_kp0_workload[20]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf1_stm_kp0_workload[21]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf1_stm_kp0_workload[22]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf1_stm_kp0_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm2_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf1_stm_kp0_workload[24]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf1_stm_kp0_workload[25]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf1_stm_kp0_workload[26]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf1_stm_kp0_workload[27]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf1_stm_kp0_workload[28]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf1_stm_kp0_workload[29]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf1_stm_kp0_workload[30]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf1_stm_kp0_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm3_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf1_stm_kp0_workload[32]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf1_stm_kp0_workload[33]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf1_stm_kp0_workload[34]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf1_stm_kp0_workload[35]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf1_stm_kp0_workload[36]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf1_stm_kp0_workload[37]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf1_stm_kp0_workload[38]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf1_stm_kp0_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm4_kp0_workload[1]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf2_stm_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf2_stm_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf2_stm_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf2_stm_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf2_stm_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf2_stm_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf2_stm_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf2_stm_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm0_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf2_stm_kp0_workload[8]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf2_stm_kp0_workload[9]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf2_stm_kp0_workload[10]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf2_stm_kp0_workload[11]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf2_stm_kp0_workload[12]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf2_stm_kp0_workload[13]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf2_stm_kp0_workload[14]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf2_stm_kp0_workload[15]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm1_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf2_stm_kp0_workload[16]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf2_stm_kp0_workload[17]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf2_stm_kp0_workload[18]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf2_stm_kp0_workload[19]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf2_stm_kp0_workload[20]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf2_stm_kp0_workload[21]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf2_stm_kp0_workload[22]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf2_stm_kp0_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm2_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf2_stm_kp0_workload[24]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf2_stm_kp0_workload[25]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf2_stm_kp0_workload[26]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf2_stm_kp0_workload[27]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf2_stm_kp0_workload[28]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf2_stm_kp0_workload[29]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf2_stm_kp0_workload[30]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf2_stm_kp0_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm3_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf2_stm_kp0_workload[32]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf2_stm_kp0_workload[33]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf2_stm_kp0_workload[34]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf2_stm_kp0_workload[35]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf2_stm_kp0_workload[36]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf2_stm_kp0_workload[37]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf2_stm_kp0_workload[38]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf2_stm_kp0_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm4_kp0_workload[2]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf3_stm_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf3_stm_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf3_stm_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf3_stm_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf3_stm_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf3_stm_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf3_stm_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf3_stm_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm0_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf3_stm_kp0_workload[8]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf3_stm_kp0_workload[9]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf3_stm_kp0_workload[10]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf3_stm_kp0_workload[11]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf3_stm_kp0_workload[12]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf3_stm_kp0_workload[13]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf3_stm_kp0_workload[14]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf3_stm_kp0_workload[15]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm1_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf3_stm_kp0_workload[16]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf3_stm_kp0_workload[17]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf3_stm_kp0_workload[18]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf3_stm_kp0_workload[19]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf3_stm_kp0_workload[20]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf3_stm_kp0_workload[21]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf3_stm_kp0_workload[22]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf3_stm_kp0_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm2_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf3_stm_kp0_workload[24]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf3_stm_kp0_workload[25]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf3_stm_kp0_workload[26]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf3_stm_kp0_workload[27]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf3_stm_kp0_workload[28]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf3_stm_kp0_workload[29]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf3_stm_kp0_workload[30]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf3_stm_kp0_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm3_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf3_stm_kp0_workload[32]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf3_stm_kp0_workload[33]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf3_stm_kp0_workload[34]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf3_stm_kp0_workload[35]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf3_stm_kp0_workload[36]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf3_stm_kp0_workload[37]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf3_stm_kp0_workload[38]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf3_stm_kp0_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm4_kp0_workload[3]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf4_stm_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf4_stm_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf4_stm_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf4_stm_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf4_stm_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf4_stm_kp0_workload[5]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf4_stm_kp0_workload[6]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf4_stm_kp0_workload[7]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm0_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf4_stm_kp0_workload[8]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf4_stm_kp0_workload[9]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf4_stm_kp0_workload[10]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf4_stm_kp0_workload[11]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf4_stm_kp0_workload[12]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf4_stm_kp0_workload[13]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf4_stm_kp0_workload[14]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf4_stm_kp0_workload[15]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm1_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf4_stm_kp0_workload[16]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf4_stm_kp0_workload[17]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf4_stm_kp0_workload[18]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf4_stm_kp0_workload[19]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf4_stm_kp0_workload[20]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf4_stm_kp0_workload[21]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf4_stm_kp0_workload[22]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf4_stm_kp0_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm2_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf4_stm_kp0_workload[24]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf4_stm_kp0_workload[25]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf4_stm_kp0_workload[26]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf4_stm_kp0_workload[27]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf4_stm_kp0_workload[28]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf4_stm_kp0_workload[29]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf4_stm_kp0_workload[30]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf4_stm_kp0_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm3_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf4_stm_kp0_workload[32]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf4_stm_kp0_workload[33]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf4_stm_kp0_workload[34]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf4_stm_kp0_workload[35]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf4_stm_kp0_workload[36]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf4_stm_kp0_workload[37]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf4_stm_kp0_workload[38]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf4_stm_kp0_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm4_kp0_workload[4]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf0_stm_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf0_stm_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf0_stm_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf0_stm_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf0_stm_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf0_stm_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf0_stm_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf0_stm_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm0_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf0_stm_kp1_workload[8]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf0_stm_kp1_workload[9]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf0_stm_kp1_workload[10]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf0_stm_kp1_workload[11]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf0_stm_kp1_workload[12]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf0_stm_kp1_workload[13]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf0_stm_kp1_workload[14]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf0_stm_kp1_workload[15]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm1_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf0_stm_kp1_workload[16]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf0_stm_kp1_workload[17]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf0_stm_kp1_workload[18]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf0_stm_kp1_workload[19]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf0_stm_kp1_workload[20]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf0_stm_kp1_workload[21]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf0_stm_kp1_workload[22]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf0_stm_kp1_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm2_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf0_stm_kp1_workload[24]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf0_stm_kp1_workload[25]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf0_stm_kp1_workload[26]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf0_stm_kp1_workload[27]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf0_stm_kp1_workload[28]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf0_stm_kp1_workload[29]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf0_stm_kp1_workload[30]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf0_stm_kp1_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm3_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf0_stm_kp1_workload[32]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf0_stm_kp1_workload[33]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf0_stm_kp1_workload[34]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf0_stm_kp1_workload[35]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf0_stm_kp1_workload[36]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf0_stm_kp1_workload[37]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf0_stm_kp1_workload[38]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf0_stm_kp1_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm4_kp1_workload[0]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf1_stm_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf1_stm_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf1_stm_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf1_stm_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf1_stm_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf1_stm_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf1_stm_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf1_stm_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm0_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf1_stm_kp1_workload[8]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf1_stm_kp1_workload[9]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf1_stm_kp1_workload[10]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf1_stm_kp1_workload[11]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf1_stm_kp1_workload[12]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf1_stm_kp1_workload[13]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf1_stm_kp1_workload[14]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf1_stm_kp1_workload[15]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm1_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf1_stm_kp1_workload[16]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf1_stm_kp1_workload[17]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf1_stm_kp1_workload[18]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf1_stm_kp1_workload[19]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf1_stm_kp1_workload[20]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf1_stm_kp1_workload[21]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf1_stm_kp1_workload[22]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf1_stm_kp1_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm2_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf1_stm_kp1_workload[24]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf1_stm_kp1_workload[25]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf1_stm_kp1_workload[26]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf1_stm_kp1_workload[27]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf1_stm_kp1_workload[28]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf1_stm_kp1_workload[29]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf1_stm_kp1_workload[30]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf1_stm_kp1_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm3_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf1_stm_kp1_workload[32]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf1_stm_kp1_workload[33]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf1_stm_kp1_workload[34]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf1_stm_kp1_workload[35]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf1_stm_kp1_workload[36]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf1_stm_kp1_workload[37]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf1_stm_kp1_workload[38]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf1_stm_kp1_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm4_kp1_workload[1]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf2_stm_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf2_stm_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf2_stm_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf2_stm_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf2_stm_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf2_stm_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf2_stm_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf2_stm_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm0_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf2_stm_kp1_workload[8]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf2_stm_kp1_workload[9]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf2_stm_kp1_workload[10]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf2_stm_kp1_workload[11]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf2_stm_kp1_workload[12]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf2_stm_kp1_workload[13]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf2_stm_kp1_workload[14]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf2_stm_kp1_workload[15]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm1_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf2_stm_kp1_workload[16]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf2_stm_kp1_workload[17]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf2_stm_kp1_workload[18]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf2_stm_kp1_workload[19]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf2_stm_kp1_workload[20]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf2_stm_kp1_workload[21]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf2_stm_kp1_workload[22]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf2_stm_kp1_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm2_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf2_stm_kp1_workload[24]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf2_stm_kp1_workload[25]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf2_stm_kp1_workload[26]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf2_stm_kp1_workload[27]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf2_stm_kp1_workload[28]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf2_stm_kp1_workload[29]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf2_stm_kp1_workload[30]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf2_stm_kp1_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm3_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf2_stm_kp1_workload[32]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf2_stm_kp1_workload[33]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf2_stm_kp1_workload[34]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf2_stm_kp1_workload[35]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf2_stm_kp1_workload[36]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf2_stm_kp1_workload[37]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf2_stm_kp1_workload[38]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf2_stm_kp1_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm4_kp1_workload[2]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf3_stm_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf3_stm_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf3_stm_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf3_stm_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf3_stm_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf3_stm_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf3_stm_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf3_stm_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm0_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf3_stm_kp1_workload[8]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf3_stm_kp1_workload[9]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf3_stm_kp1_workload[10]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf3_stm_kp1_workload[11]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf3_stm_kp1_workload[12]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf3_stm_kp1_workload[13]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf3_stm_kp1_workload[14]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf3_stm_kp1_workload[15]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm1_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf3_stm_kp1_workload[16]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf3_stm_kp1_workload[17]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf3_stm_kp1_workload[18]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf3_stm_kp1_workload[19]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf3_stm_kp1_workload[20]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf3_stm_kp1_workload[21]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf3_stm_kp1_workload[22]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf3_stm_kp1_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm2_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf3_stm_kp1_workload[24]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf3_stm_kp1_workload[25]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf3_stm_kp1_workload[26]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf3_stm_kp1_workload[27]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf3_stm_kp1_workload[28]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf3_stm_kp1_workload[29]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf3_stm_kp1_workload[30]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf3_stm_kp1_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm3_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf3_stm_kp1_workload[32]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf3_stm_kp1_workload[33]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf3_stm_kp1_workload[34]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf3_stm_kp1_workload[35]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf3_stm_kp1_workload[36]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf3_stm_kp1_workload[37]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf3_stm_kp1_workload[38]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf3_stm_kp1_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm4_kp1_workload[3]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf4_stm_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf4_stm_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf4_stm_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf4_stm_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf4_stm_kp1_workload[4]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf4_stm_kp1_workload[5]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf4_stm_kp1_workload[6]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf4_stm_kp1_workload[7]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm0_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd0",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf4_stm_kp1_workload[8]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf4_stm_kp1_workload[9]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf4_stm_kp1_workload[10]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf4_stm_kp1_workload[11]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf4_stm_kp1_workload[12]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf4_stm_kp1_workload[13]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf4_stm_kp1_workload[14]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf4_stm_kp1_workload[15]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm1_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf4_stm_kp1_workload[16]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf4_stm_kp1_workload[17]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf4_stm_kp1_workload[18]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf4_stm_kp1_workload[19]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf4_stm_kp1_workload[20]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf4_stm_kp1_workload[21]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf4_stm_kp1_workload[22]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf4_stm_kp1_workload[23]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm2_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd2",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf4_stm_kp1_workload[24]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf4_stm_kp1_workload[25]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf4_stm_kp1_workload[26]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf4_stm_kp1_workload[27]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf4_stm_kp1_workload[28]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf4_stm_kp1_workload[29]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf4_stm_kp1_workload[30]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf4_stm_kp1_workload[31]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm3_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd3",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    },
                    {
                        "args": {
                            "inter_shuffle_stream_p0": {
                                "arg": "inter_shuf4_stm_kp1_workload[32]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p1": {
                                "arg": "inter_shuf4_stm_kp1_workload[33]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p2": {
                                "arg": "inter_shuf4_stm_kp1_workload[34]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p3": {
                                "arg": "inter_shuf4_stm_kp1_workload[35]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p4": {
                                "arg": "inter_shuf4_stm_kp1_workload[36]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p5": {
                                "arg": "inter_shuf4_stm_kp1_workload[37]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p6": {
                                "arg": "inter_shuf4_stm_kp1_workload[38]",
                                "cat": "istream"
                            },
                            "inter_shuffle_stream_p7": {
                                "arg": "inter_shuf4_stm_kp1_workload[39]",
                                "cat": "istream"
                            },
                            "kp_idx": {
                                "arg": "64'd1",
                                "cat": "scalar"
                            },
                            "reconstruct_stream": {
                                "arg": "reconstruct_stream_stm4_kp1_workload[4]",
                                "cat": "ostream"
                            },
                            "shuffle_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            },
                            "stm_idx": {
                                "arg": "64'd4",
                                "cat": "scalar"
                            }
                        },
                        "step": -1
                    }
                ],
                "writeOutput_synchronous": [
                    {
                        "args": {
                            "outmmap": {
                                "arg": "out_bits",
                                "cat": "mmap"
                            },
                            "packed_outputs_stream_s0_kp0": {
                                "arg": "packed_output_stm_kp0_workload[0]",
                                "cat": "istream"
                            },
                            "packed_outputs_stream_s0_kp1": {
                                "arg": "packed_output_stm_kp1_workload[0]",
                                "cat": "istream"
                            },
                            "packed_outputs_stream_s1_kp0": {
                                "arg": "packed_output_stm_kp0_workload[1]",
                                "cat": "istream"
                            },
                            "packed_outputs_stream_s1_kp1": {
                                "arg": "packed_output_stm_kp1_workload[1]",
                                "cat": "istream"
                            },
                            "packed_outputs_stream_s2_kp0": {
                                "arg": "packed_output_stm_kp0_workload[2]",
                                "cat": "istream"
                            },
                            "packed_outputs_stream_s2_kp1": {
                                "arg": "packed_output_stm_kp1_workload[2]",
                                "cat": "istream"
                            },
                            "packed_outputs_stream_s3_kp0": {
                                "arg": "packed_output_stm_kp0_workload[3]",
                                "cat": "istream"
                            },
                            "packed_outputs_stream_s3_kp1": {
                                "arg": "packed_output_stm_kp1_workload[3]",
                                "cat": "istream"
                            },
                            "packed_outputs_stream_s4_kp0": {
                                "arg": "packed_output_stm_kp0_workload[4]",
                                "cat": "istream"
                            },
                            "packed_outputs_stream_s4_kp1": {
                                "arg": "packed_output_stm_kp1_workload[4]",
                                "cat": "istream"
                            }
                        },
                        "step": 0
                    }
                ]
            },
            "vendor": "xilinx"
        },
        "writeOutput_synchronous": {
            "code": "\n//#ifndef __SYNTHESIS__\n//    #include <time.h>\n//#endif\n//#include <hls_math.h>\n\n\n #include <stdint.h>\n\n#include <inttypes.h>\n\n#include <ap_int.h>\n\n#include <tapa.h>\n\n/*****************************/\n// MACROS USED FOR CALCULATIONS\n// Power of 2 rounding : https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n/*****************************/\n/*****************************/\n// CONFIGURE ME!\n/*****************************/\n// NOTE: IF THE BV_LENGTH IS NOT A POWER OF TWO, SOME MODULES MAY ACHIEVE POOR II.\nconst int HASHONLY_BITWIDTH = 32;\nconst int BV_PACKED_BITWIDTH = 32; //On-chip memory for BV, packing this many bits into one cell\nconst int BIT_BITWIDTH = 1;\ntypedef struct {\n    ap_uint<(32)> k0;\n    ap_uint<(32)> k1;\n} TWOKEY_DTYPE;\ntypedef struct {\n    ap_uint<BV_PACKED_BITWIDTH> section0;\n    ap_uint<BV_PACKED_BITWIDTH> section1;\n    ap_uint<BV_PACKED_BITWIDTH> section2;\n    ap_uint<BV_PACKED_BITWIDTH> section3;\n    ap_uint<BV_PACKED_BITWIDTH> section4;\n    ap_uint<BV_PACKED_BITWIDTH> padding5;\n    ap_uint<BV_PACKED_BITWIDTH> padding6;\n    ap_uint<BV_PACKED_BITWIDTH> padding7;\n} BV_LOAD_DTYPE;\n    const int STRM_IDX_BITWIDTH = 8;\n    const int INPUT_IDX_BITWIDTH = 24;\n    const int MAX_INPUT_IDX = ( 1<<(INPUT_IDX_BITWIDTH) ) - 1;\n    const int METADATA_BITWIDTH = INPUT_IDX_BITWIDTH + STRM_IDX_BITWIDTH;\n    const int MAX_STRM_IDX = ( 1<<(STRM_IDX_BITWIDTH) ) - 1;\n    const int PACKED_HASH_BITWIDTH = HASHONLY_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_METADATA_BITWIDTH = BIT_BITWIDTH + METADATA_BITWIDTH;\n    const int BV_PLUS_IIDX_BITWIDTH = BIT_BITWIDTH + INPUT_IDX_BITWIDTH;\n    /************************/\n    //// Packed datatypes.  Packed as follows (MSB to LSB): [STRM_IDX, INPUT_IDX, HASH_VALUE]\n    //#define PACKED_HASH_DTYPE   ap_uint<PACKED_HASH_BITWIDTH>\n    //#define BV_PLUS_METADATA_PACKED_DTYPE     ap_uint<BV_PLUS_METADATA_BITWIDTH>\n    //#define METADATA_DTYPE      ap_uint<METADATA_BITWIDTH>\n    typedef struct {\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n        ap_uint<STRM_IDX_BITWIDTH> sidx;\n    } METADATA_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        METADATA_DTYPE md;\n    } BV_PLUS_METADATA_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<BIT_BITWIDTH> bv_val;\n        ap_uint<INPUT_IDX_BITWIDTH> iidx;\n    } BV_PLUS_IIDX_PACKED_DTYPE;\n    typedef struct {\n        ap_uint<HASHONLY_BITWIDTH> hash;\n        METADATA_DTYPE md;\n    } PACKED_HASH_DTYPE;\n    /************************/\n    const int _BV_ROUNDING_FACTOR_ = (5) * BV_PACKED_BITWIDTH * (8) /* each sub bv is further partitioned into this chunks*/;\n    const int BV_LENGTH = ( (((1024*1024*4)*(5))-1)/_BV_ROUNDING_FACTOR_ + 1) * _BV_ROUNDING_FACTOR_;\ntypedef struct {\n    ap_uint<(32)> s0_k0;\n    ap_uint<(32)> s0_k1;\n    ap_uint<(32)> s1_k0;\n    ap_uint<(32)> s1_k1;\n    ap_uint<(32)> s2_k0;\n    ap_uint<(32)> s2_k1;\n    ap_uint<(32)> s3_k0;\n    ap_uint<(32)> s3_k1;\n    ap_uint<(32)> s4_k0;\n    ap_uint<(32)> s4_k1;\n    ap_uint<(32)> padding_5_k0;\n    ap_uint<(32)> padding_5_k1;\n    ap_uint<(32)> padding_6_k0;\n    ap_uint<(32)> padding_6_k1;\n    ap_uint<(32)> padding_7_k0;\n    ap_uint<(32)> padding_7_k1;\n} LOAD_DTYPE;\n// This naming is potentially confusing - we datapack TWICE.\n// Within each key-stream we pack 32 elements together.\n// Then, we coalesce among key-streams.\ntypedef struct {\n    ap_uint<((32))> s0_k0;\n    ap_uint<((32))> s0_k1;\n    ap_uint<((32))> s1_k0;\n    ap_uint<((32))> s1_k1;\n    ap_uint<((32))> s2_k0;\n    ap_uint<((32))> s2_k1;\n    ap_uint<((32))> s3_k0;\n    ap_uint<((32))> s3_k1;\n    ap_uint<((32))> s4_k0;\n    ap_uint<((32))> s4_k1;\n    ap_uint<((32))> padding_5_k0;\n    ap_uint<((32))> padding_5_k1;\n    ap_uint<((32))> padding_6_k0;\n    ap_uint<((32))> padding_6_k1;\n    ap_uint<((32))> padding_7_k0;\n    ap_uint<((32))> padding_7_k1;\n} STORE_DTYPE;\n/***************************************************/\n/***************************************************/\n/***************************************************/\n/* STM_DEPTH: In the worst case, the arbiter can send all of the hashed values to the same FIFO.\n *  So that FIFO will get filled, and the shuffle unit wont be able to handle it.\n *  We need at least NUM_STM FIFO elements between arbiter and shuffle. */\nconst int KEYS_PER_STM = (( ( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) | (( ( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) | (( ( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) | (( ( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) | (( ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 0) | ((( ((1024*1024*8*(5))-1)/(5) + 1)-1) >> 1) ) >> 2) ) >> 4) ) >> 8) ) >> 16 ) ))+1;\nconst int KEYPAIRS_PER_STM = KEYS_PER_STM/2; // 2 reads per cycle (2port bram)\nconst int TOTAL_NUM_KEYINPUT = KEYS_PER_STM * (5);\nconst int PACKED_OUTPUTS_PER_STM = ( (KEYPAIRS_PER_STM-1)/((32)) + 1);\nconst int PACKED_OUTPAIRS_PER_STM = PACKED_OUTPUTS_PER_STM * 2; // same number of outputs but half the stms if we pair them\nconst int NUM_PACKED_OUTPUTS = PACKED_OUTPUTS_PER_STM * (5) * 2; // 2 reads per cycle (2port bram)\ntypedef struct {\n    ap_uint<INPUT_IDX_BITWIDTH> strm0_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm1_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm2_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm3_out_idx;\n    ap_uint<INPUT_IDX_BITWIDTH> strm4_out_idx;\n} RATEMON_FEEDBACK_DTYPE;\nvoid loadKey(\n        uint64_t  key_in\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp0\n        ,tapa::ostreams<ap_uint<(32)>, (5)> & key_stream_kp1\n);\n/*************************************************************************************/\nvoid loadBV(\n    uint64_t  input_bv\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_0\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_1\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_2\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_3\n    ,tapa::ostream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream_4\n);\n/*************************************************************************************/\nuint32_t MurmurHash3_x86_32 (\n    ap_uint<(32)> key,\n    uint32_t seed\n){\n#pragma HLS inline\n    const int nblocks = ((32) / 8) / 4;\n    uint32_t h1 = seed;\n    const uint32_t c1 = 0xcc9e2d51;\n    const uint32_t c2 = 0x1b873593;\n    //length is limited as this:  KEY_SIZE_IN_BYTES / 4  <= KEY_SIZE_IN_BYTES\n    BLOCK_DIVIDING:\n    for( int i = 0; i < nblocks; i++){\n#pragma HLS UNROLL\n        ap_uint<(32)> tmp;\n        tmp.range(31,0) = key.range(32*i+31, 32*i);\n        uint32_t k1 = tmp;\n        k1 *= c1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //k1 = ROTL32(k1,15);\n        k1 = ( (k1 << 15) | (k1 >> (17)) );\n        k1 = k1*c2;\n        h1 ^= k1;\n        // copy-paste the body of the rotl() function, otherwise it doesn't work.\n        //h1 = ROTL32(h1,13);\n        h1 = ( (h1 << 13) | (h1 >> 19) );\n        h1 = h1*5 + 0xe6546b64;\n    }\n    //Remainder from block division\n    uint32_t tail = key[nblocks];\n    //Finalization\n    h1 ^= ((32) / 8);\n    //h1 = fmix32(h1);\n    h1 ^= h1>>16;\n    h1 *= 0x85ebca6b;\n    h1 ^= h1>>13;\n    h1 *= 0xc2b2ae35;\n    h1 ^= h1>>16;\n    uint32_t retval;\n    //retval = (uint32_t)key * (seed+3);\n    retval = h1;\n    return retval;\n}\nvoid computeHash_Feeder(\n        int strm_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_in_stream,\n        tapa::ostreams<ap_uint<(32)>, (5)> & key_out_stream\n);\nvoid computeHash_Computer(\n        int stm_idx,\n        int hash_idx,\n        int keypair_idx,\n        tapa::istream<ap_uint<(32)> > & key_stream,\n        tapa::ostream<ap_uint<HASHONLY_BITWIDTH> > & hash_stream\n);\n// CONFIG: need NUM_HASH calls to INVOKE_COMPUTERS_FOR_HASH\n/*************************************************************************************/\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// Arbiter                           //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid bloom_arb_forwarder(\n        int arb_idx\n        ,int kp_idx\n        ,tapa::istreams<ap_uint<HASHONLY_BITWIDTH>, (5)> & hash_stream\n        ,tapa::ostreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & arb_stream\n);\nvoid bloom_hier_arbiter_atom(\n        int arb_idx,\n        int partition_idx,\n        int kp_idx,\n        int atom_ID,\n        tapa::istream<RATEMON_FEEDBACK_DTYPE> & ratemon_stream,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream0,\n        tapa::istream<PACKED_HASH_DTYPE> & in_stream1,\n        tapa::ostream<PACKED_HASH_DTYPE> & out_stream\n);\nvoid bloom_arbiter_ratemonitor(\n    int arb_idx\n    ,int kp_idx\n    ,char ratemon_ID\n    ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_in\n    ,tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &arb_stream_out\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_0\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_1\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_2\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_3\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_4\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_5\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_6\n    ,tapa::ostreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &fdbk_stream_7\n);\nvoid bloom_arbiter_tree_singlepartition(\n    int arb_idx\n    ,int partition_idx\n    ,int kp_idx\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm0\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm1\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm2\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm3\n    ,tapa::istream<PACKED_HASH_DTYPE> &arb_stm4\n    ,tapa::istreams<RATEMON_FEEDBACK_DTYPE, ((5) - 1)> &ratemon_feedback\n    ,tapa::ostream<PACKED_HASH_DTYPE> &arbtree_out\n) ;\nvoid bloom_single_arbiter(\n        int arb_idx\n        , int kp_idx\n        , tapa::istreams<PACKED_HASH_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> &in_arb_streams\n        , tapa::ostreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> &bv_lookup_stream\n) ;\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n///////// END OF Arbiter                    //////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nvoid queryResult_per_hash(\n        int hash_idx\n        ,tapa::istream<ap_uint<BV_PACKED_BITWIDTH> > & bv_load_stream\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp0\n        ,tapa::istreams<PACKED_HASH_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & bv_lookup_stream_kp1\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp0\n        ,tapa::ostreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream_kp1\n) ;\n/*************************************************************************************/\nvoid shuffle_TtoS_per_hash(\n        int shuffle_idx\n        ,int kp_idx\n        ,tapa::istreams<BV_PLUS_METADATA_PACKED_DTYPE, (8) /* each sub bv is further partitioned into this chunks*/> & query_bv_packed_stream\n        ,tapa::ostreams<BV_PLUS_IIDX_PACKED_DTYPE, (5)*(8) /* each sub bv is further partitioned into this chunks*/> & inter_shuffle_stream\n);\nvoid shuffle_reordering_per_hash(\n        int shuffle_idx\n        ,int stm_idx\n        ,int kp_idx\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p0\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p1\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p2\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p3\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p4\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p5\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p6\n        ,tapa::istream<BV_PLUS_IIDX_PACKED_DTYPE> & inter_shuffle_stream_p7\n        ,tapa::ostream<ap_uint<BIT_BITWIDTH> > & reconstruct_stream\n)\n;\nvoid bloom_aggregate_SPLIT(\n        int agg_idx,\n        int kp_idx,\n        tapa::istreams<ap_uint<BIT_BITWIDTH>, (5)> & reconstruct_stream,\n        tapa::ostream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n);\n/*************************************************************************************/\nvoid packOutput(\n        int strm_idx\n        ,int kp_idx\n        ,tapa::istream<ap_uint<BIT_BITWIDTH> > & aggregate_stream\n        ,tapa::ostream<ap_uint<((32))> > & packed_outputs_stream\n) ;\nvoid writeOutput_synchronous(\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s0_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s1_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s2_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s3_kp1,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp0,\n        tapa::istream<ap_uint<((32))> >& packed_outputs_stream_s4_kp1,\n        tapa::mmap<STORE_DTYPE> outmmap\n){\n#pragma HLS disaggregate variable = packed_outputs_stream_s0_kp0\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s0_kp0._\n#pragma HLS aggregate variable = packed_outputs_stream_s0_kp0._ bit\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s0_kp0._peek\n#pragma HLS aggregate variable = packed_outputs_stream_s0_kp0._peek bit\nvoid(packed_outputs_stream_s0_kp0._.empty());\nvoid(packed_outputs_stream_s0_kp0._peek.empty());\n\n#pragma HLS disaggregate variable = packed_outputs_stream_s0_kp1\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s0_kp1._\n#pragma HLS aggregate variable = packed_outputs_stream_s0_kp1._ bit\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s0_kp1._peek\n#pragma HLS aggregate variable = packed_outputs_stream_s0_kp1._peek bit\nvoid(packed_outputs_stream_s0_kp1._.empty());\nvoid(packed_outputs_stream_s0_kp1._peek.empty());\n\n#pragma HLS disaggregate variable = packed_outputs_stream_s1_kp0\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s1_kp0._\n#pragma HLS aggregate variable = packed_outputs_stream_s1_kp0._ bit\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s1_kp0._peek\n#pragma HLS aggregate variable = packed_outputs_stream_s1_kp0._peek bit\nvoid(packed_outputs_stream_s1_kp0._.empty());\nvoid(packed_outputs_stream_s1_kp0._peek.empty());\n\n#pragma HLS disaggregate variable = packed_outputs_stream_s1_kp1\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s1_kp1._\n#pragma HLS aggregate variable = packed_outputs_stream_s1_kp1._ bit\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s1_kp1._peek\n#pragma HLS aggregate variable = packed_outputs_stream_s1_kp1._peek bit\nvoid(packed_outputs_stream_s1_kp1._.empty());\nvoid(packed_outputs_stream_s1_kp1._peek.empty());\n\n#pragma HLS disaggregate variable = packed_outputs_stream_s2_kp0\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s2_kp0._\n#pragma HLS aggregate variable = packed_outputs_stream_s2_kp0._ bit\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s2_kp0._peek\n#pragma HLS aggregate variable = packed_outputs_stream_s2_kp0._peek bit\nvoid(packed_outputs_stream_s2_kp0._.empty());\nvoid(packed_outputs_stream_s2_kp0._peek.empty());\n\n#pragma HLS disaggregate variable = packed_outputs_stream_s2_kp1\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s2_kp1._\n#pragma HLS aggregate variable = packed_outputs_stream_s2_kp1._ bit\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s2_kp1._peek\n#pragma HLS aggregate variable = packed_outputs_stream_s2_kp1._peek bit\nvoid(packed_outputs_stream_s2_kp1._.empty());\nvoid(packed_outputs_stream_s2_kp1._peek.empty());\n\n#pragma HLS disaggregate variable = packed_outputs_stream_s3_kp0\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s3_kp0._\n#pragma HLS aggregate variable = packed_outputs_stream_s3_kp0._ bit\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s3_kp0._peek\n#pragma HLS aggregate variable = packed_outputs_stream_s3_kp0._peek bit\nvoid(packed_outputs_stream_s3_kp0._.empty());\nvoid(packed_outputs_stream_s3_kp0._peek.empty());\n\n#pragma HLS disaggregate variable = packed_outputs_stream_s3_kp1\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s3_kp1._\n#pragma HLS aggregate variable = packed_outputs_stream_s3_kp1._ bit\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s3_kp1._peek\n#pragma HLS aggregate variable = packed_outputs_stream_s3_kp1._peek bit\nvoid(packed_outputs_stream_s3_kp1._.empty());\nvoid(packed_outputs_stream_s3_kp1._peek.empty());\n\n#pragma HLS disaggregate variable = packed_outputs_stream_s4_kp0\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s4_kp0._\n#pragma HLS aggregate variable = packed_outputs_stream_s4_kp0._ bit\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s4_kp0._peek\n#pragma HLS aggregate variable = packed_outputs_stream_s4_kp0._peek bit\nvoid(packed_outputs_stream_s4_kp0._.empty());\nvoid(packed_outputs_stream_s4_kp0._peek.empty());\n\n#pragma HLS disaggregate variable = packed_outputs_stream_s4_kp1\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s4_kp1._\n#pragma HLS aggregate variable = packed_outputs_stream_s4_kp1._ bit\n#pragma HLS interface ap_fifo port = packed_outputs_stream_s4_kp1._peek\n#pragma HLS aggregate variable = packed_outputs_stream_s4_kp1._peek bit\nvoid(packed_outputs_stream_s4_kp1._.empty());\nvoid(packed_outputs_stream_s4_kp1._peek.empty());\n\n#pragma HLS interface m_axi port = outmmap offset = direct bundle = outmmap\n\n    STORE_DTYPE to_store;\n    for (int i = 0; i < PACKED_OUTPUTS_PER_STM; ++i) {\n        to_store.s0_k0 = packed_outputs_stream_s0_kp0.read();\n        to_store.s0_k1 = packed_outputs_stream_s0_kp1.read();\n        to_store.s1_k0 = packed_outputs_stream_s1_kp0.read();\n        to_store.s1_k1 = packed_outputs_stream_s1_kp1.read();\n        to_store.s2_k0 = packed_outputs_stream_s2_kp0.read();\n        to_store.s2_k1 = packed_outputs_stream_s2_kp1.read();\n        to_store.s3_k0 = packed_outputs_stream_s3_kp0.read();\n        to_store.s3_k1 = packed_outputs_stream_s3_kp1.read();\n        to_store.s4_k0 = packed_outputs_stream_s4_kp0.read();\n        to_store.s4_k1 = packed_outputs_stream_s4_kp1.read();\n        outmmap[i] = to_store;\n    }\n}\n/*************************************************************************************/\nvoid workload(\n    uint64_t  input_bv\n    ,uint64_t  key_in\n    ,uint64_t  out_bits\n     //Add a dummy, useless variable because TAPA fast-cosim doesnt work without it.\n    ,int UNUSED_DUMMY\n)\n;\n",
            "level": "lower",
            "target": "hls",
            "vendor": "xilinx"
        }
    },
    "top": "workload"
}
