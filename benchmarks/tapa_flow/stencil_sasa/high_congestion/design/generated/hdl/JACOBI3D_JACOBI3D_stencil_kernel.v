// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module JACOBI3D_JACOBI3D_stencil_kernel (
        ap_clk,
        ap_rst,
        t1_1_0_0,
        t1_0_0_1,
        t1_0_0_m1,
        t1_0_0_0,
        t1_0_m1_0,
        t1_m1_0_0,
        t1_0_1_0,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] t1_1_0_0;
input  [31:0] t1_0_0_1;
input  [31:0] t1_0_0_m1;
input  [31:0] t1_0_0_0;
input  [31:0] t1_0_m1_0;
input  [31:0] t1_m1_0_0;
input  [31:0] t1_0_1_0;
output  [31:0] ap_return;
input   ap_ce;

reg[31:0] ap_return;

reg   [31:0] t1_0_1_0_read_reg_91;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] t1_0_1_0_read_reg_91_pp0_iter1_reg;
reg   [31:0] t1_0_1_0_read_reg_91_pp0_iter2_reg;
reg   [31:0] t1_0_1_0_read_reg_91_pp0_iter3_reg;
reg   [31:0] t1_0_1_0_read_reg_91_pp0_iter4_reg;
reg   [31:0] t1_0_1_0_read_reg_91_pp0_iter5_reg;
reg   [31:0] t1_0_1_0_read_reg_91_pp0_iter6_reg;
reg   [31:0] t1_0_1_0_read_reg_91_pp0_iter7_reg;
reg   [31:0] t1_0_1_0_read_reg_91_pp0_iter8_reg;
reg   [31:0] t1_0_1_0_read_reg_91_pp0_iter9_reg;
reg   [31:0] t1_0_1_0_read_reg_91_pp0_iter10_reg;
reg   [31:0] t1_0_1_0_read_reg_91_pp0_iter11_reg;
reg   [31:0] t1_0_1_0_read_reg_91_pp0_iter12_reg;
reg   [31:0] t1_0_1_0_read_reg_91_pp0_iter13_reg;
reg   [31:0] t1_m1_0_0_read_reg_96;
reg   [31:0] t1_m1_0_0_read_reg_96_pp0_iter1_reg;
reg   [31:0] t1_m1_0_0_read_reg_96_pp0_iter2_reg;
reg   [31:0] t1_m1_0_0_read_reg_96_pp0_iter3_reg;
reg   [31:0] t1_m1_0_0_read_reg_96_pp0_iter4_reg;
reg   [31:0] t1_m1_0_0_read_reg_96_pp0_iter5_reg;
reg   [31:0] t1_m1_0_0_read_reg_96_pp0_iter6_reg;
reg   [31:0] t1_0_m1_0_read_reg_101;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter1_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter2_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter3_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter4_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter5_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter6_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter7_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter8_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter9_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter10_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter11_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter12_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter13_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter14_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter15_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter16_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter17_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter18_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter19_reg;
reg   [31:0] t1_0_m1_0_read_reg_101_pp0_iter20_reg;
reg   [31:0] t1_0_0_m1_read_reg_111;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter1_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter2_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter3_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter4_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter5_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter6_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter7_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter8_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter9_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter10_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter11_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter12_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter13_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter14_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter15_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter16_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter17_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter18_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter19_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter20_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter21_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter22_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter23_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter24_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter25_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter26_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter27_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter28_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter29_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter30_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter31_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter32_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter33_reg;
reg   [31:0] t1_0_0_m1_read_reg_111_pp0_iter34_reg;
reg   [31:0] t1_0_0_1_read_reg_116;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter1_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter2_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter3_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter4_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter5_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter6_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter7_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter8_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter9_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter10_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter11_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter12_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter13_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter14_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter15_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter16_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter17_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter18_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter19_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter20_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter21_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter22_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter23_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter24_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter25_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter26_reg;
reg   [31:0] t1_0_0_1_read_reg_116_pp0_iter27_reg;
wire   [31:0] grp_fu_60_p2;
reg   [31:0] add_reg_126;
wire   [31:0] grp_fu_66_p2;
reg   [31:0] add1_reg_131;
wire   [31:0] grp_fu_70_p2;
reg   [31:0] add2_reg_136;
wire   [31:0] grp_fu_74_p2;
reg   [31:0] add3_reg_141;
wire   [31:0] grp_fu_78_p2;
reg   [31:0] add4_reg_146;
wire   [31:0] grp_fu_82_p2;
reg   [31:0] add5_reg_151;
wire    ap_block_pp0_stage0;
reg    grp_fu_60_ce;
reg    grp_fu_66_ce;
reg    grp_fu_70_ce;
reg    grp_fu_74_ce;
reg    grp_fu_78_ce;
reg    grp_fu_82_ce;
wire   [31:0] grp_fu_86_p2;
reg    grp_fu_86_ce;
reg    ap_ce_reg;
reg   [31:0] t1_1_0_0_int_reg;
reg   [31:0] t1_0_0_1_int_reg;
reg   [31:0] t1_0_0_m1_int_reg;
reg   [31:0] t1_0_0_0_int_reg;
reg   [31:0] t1_0_m1_0_int_reg;
reg   [31:0] t1_m1_0_0_int_reg;
reg   [31:0] t1_0_1_0_int_reg;
reg   [31:0] ap_return_int_reg;

JACOBI3D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(t1_0_0_0_int_reg),
    .din1(t1_1_0_0_int_reg),
    .ce(grp_fu_60_ce),
    .dout(grp_fu_60_p2)
);

JACOBI3D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_reg_126),
    .din1(t1_m1_0_0_read_reg_96_pp0_iter6_reg),
    .ce(grp_fu_66_ce),
    .dout(grp_fu_66_p2)
);

JACOBI3D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add1_reg_131),
    .din1(t1_0_1_0_read_reg_91_pp0_iter13_reg),
    .ce(grp_fu_70_ce),
    .dout(grp_fu_70_p2)
);

JACOBI3D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add2_reg_136),
    .din1(t1_0_m1_0_read_reg_101_pp0_iter20_reg),
    .ce(grp_fu_74_ce),
    .dout(grp_fu_74_p2)
);

JACOBI3D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add3_reg_141),
    .din1(t1_0_0_1_read_reg_116_pp0_iter27_reg),
    .ce(grp_fu_78_ce),
    .dout(grp_fu_78_p2)
);

JACOBI3D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add4_reg_146),
    .din1(t1_0_0_m1_read_reg_111_pp0_iter34_reg),
    .ce(grp_fu_82_ce),
    .dout(grp_fu_82_p2)
);

JACOBI3D_fmul_32ns_32ns_32_4_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_0_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add5_reg_151),
    .din1(32'd1041385765),
    .ce(grp_fu_86_ce),
    .dout(grp_fu_86_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add1_reg_131 <= grp_fu_66_p2;
        add2_reg_136 <= grp_fu_70_p2;
        add3_reg_141 <= grp_fu_74_p2;
        add4_reg_146 <= grp_fu_78_p2;
        add5_reg_151 <= grp_fu_82_p2;
        add_reg_126 <= grp_fu_60_p2;
        t1_0_0_1_read_reg_116 <= t1_0_0_1_int_reg;
        t1_0_0_1_read_reg_116_pp0_iter10_reg <= t1_0_0_1_read_reg_116_pp0_iter9_reg;
        t1_0_0_1_read_reg_116_pp0_iter11_reg <= t1_0_0_1_read_reg_116_pp0_iter10_reg;
        t1_0_0_1_read_reg_116_pp0_iter12_reg <= t1_0_0_1_read_reg_116_pp0_iter11_reg;
        t1_0_0_1_read_reg_116_pp0_iter13_reg <= t1_0_0_1_read_reg_116_pp0_iter12_reg;
        t1_0_0_1_read_reg_116_pp0_iter14_reg <= t1_0_0_1_read_reg_116_pp0_iter13_reg;
        t1_0_0_1_read_reg_116_pp0_iter15_reg <= t1_0_0_1_read_reg_116_pp0_iter14_reg;
        t1_0_0_1_read_reg_116_pp0_iter16_reg <= t1_0_0_1_read_reg_116_pp0_iter15_reg;
        t1_0_0_1_read_reg_116_pp0_iter17_reg <= t1_0_0_1_read_reg_116_pp0_iter16_reg;
        t1_0_0_1_read_reg_116_pp0_iter18_reg <= t1_0_0_1_read_reg_116_pp0_iter17_reg;
        t1_0_0_1_read_reg_116_pp0_iter19_reg <= t1_0_0_1_read_reg_116_pp0_iter18_reg;
        t1_0_0_1_read_reg_116_pp0_iter1_reg <= t1_0_0_1_read_reg_116;
        t1_0_0_1_read_reg_116_pp0_iter20_reg <= t1_0_0_1_read_reg_116_pp0_iter19_reg;
        t1_0_0_1_read_reg_116_pp0_iter21_reg <= t1_0_0_1_read_reg_116_pp0_iter20_reg;
        t1_0_0_1_read_reg_116_pp0_iter22_reg <= t1_0_0_1_read_reg_116_pp0_iter21_reg;
        t1_0_0_1_read_reg_116_pp0_iter23_reg <= t1_0_0_1_read_reg_116_pp0_iter22_reg;
        t1_0_0_1_read_reg_116_pp0_iter24_reg <= t1_0_0_1_read_reg_116_pp0_iter23_reg;
        t1_0_0_1_read_reg_116_pp0_iter25_reg <= t1_0_0_1_read_reg_116_pp0_iter24_reg;
        t1_0_0_1_read_reg_116_pp0_iter26_reg <= t1_0_0_1_read_reg_116_pp0_iter25_reg;
        t1_0_0_1_read_reg_116_pp0_iter27_reg <= t1_0_0_1_read_reg_116_pp0_iter26_reg;
        t1_0_0_1_read_reg_116_pp0_iter2_reg <= t1_0_0_1_read_reg_116_pp0_iter1_reg;
        t1_0_0_1_read_reg_116_pp0_iter3_reg <= t1_0_0_1_read_reg_116_pp0_iter2_reg;
        t1_0_0_1_read_reg_116_pp0_iter4_reg <= t1_0_0_1_read_reg_116_pp0_iter3_reg;
        t1_0_0_1_read_reg_116_pp0_iter5_reg <= t1_0_0_1_read_reg_116_pp0_iter4_reg;
        t1_0_0_1_read_reg_116_pp0_iter6_reg <= t1_0_0_1_read_reg_116_pp0_iter5_reg;
        t1_0_0_1_read_reg_116_pp0_iter7_reg <= t1_0_0_1_read_reg_116_pp0_iter6_reg;
        t1_0_0_1_read_reg_116_pp0_iter8_reg <= t1_0_0_1_read_reg_116_pp0_iter7_reg;
        t1_0_0_1_read_reg_116_pp0_iter9_reg <= t1_0_0_1_read_reg_116_pp0_iter8_reg;
        t1_0_0_m1_read_reg_111 <= t1_0_0_m1_int_reg;
        t1_0_0_m1_read_reg_111_pp0_iter10_reg <= t1_0_0_m1_read_reg_111_pp0_iter9_reg;
        t1_0_0_m1_read_reg_111_pp0_iter11_reg <= t1_0_0_m1_read_reg_111_pp0_iter10_reg;
        t1_0_0_m1_read_reg_111_pp0_iter12_reg <= t1_0_0_m1_read_reg_111_pp0_iter11_reg;
        t1_0_0_m1_read_reg_111_pp0_iter13_reg <= t1_0_0_m1_read_reg_111_pp0_iter12_reg;
        t1_0_0_m1_read_reg_111_pp0_iter14_reg <= t1_0_0_m1_read_reg_111_pp0_iter13_reg;
        t1_0_0_m1_read_reg_111_pp0_iter15_reg <= t1_0_0_m1_read_reg_111_pp0_iter14_reg;
        t1_0_0_m1_read_reg_111_pp0_iter16_reg <= t1_0_0_m1_read_reg_111_pp0_iter15_reg;
        t1_0_0_m1_read_reg_111_pp0_iter17_reg <= t1_0_0_m1_read_reg_111_pp0_iter16_reg;
        t1_0_0_m1_read_reg_111_pp0_iter18_reg <= t1_0_0_m1_read_reg_111_pp0_iter17_reg;
        t1_0_0_m1_read_reg_111_pp0_iter19_reg <= t1_0_0_m1_read_reg_111_pp0_iter18_reg;
        t1_0_0_m1_read_reg_111_pp0_iter1_reg <= t1_0_0_m1_read_reg_111;
        t1_0_0_m1_read_reg_111_pp0_iter20_reg <= t1_0_0_m1_read_reg_111_pp0_iter19_reg;
        t1_0_0_m1_read_reg_111_pp0_iter21_reg <= t1_0_0_m1_read_reg_111_pp0_iter20_reg;
        t1_0_0_m1_read_reg_111_pp0_iter22_reg <= t1_0_0_m1_read_reg_111_pp0_iter21_reg;
        t1_0_0_m1_read_reg_111_pp0_iter23_reg <= t1_0_0_m1_read_reg_111_pp0_iter22_reg;
        t1_0_0_m1_read_reg_111_pp0_iter24_reg <= t1_0_0_m1_read_reg_111_pp0_iter23_reg;
        t1_0_0_m1_read_reg_111_pp0_iter25_reg <= t1_0_0_m1_read_reg_111_pp0_iter24_reg;
        t1_0_0_m1_read_reg_111_pp0_iter26_reg <= t1_0_0_m1_read_reg_111_pp0_iter25_reg;
        t1_0_0_m1_read_reg_111_pp0_iter27_reg <= t1_0_0_m1_read_reg_111_pp0_iter26_reg;
        t1_0_0_m1_read_reg_111_pp0_iter28_reg <= t1_0_0_m1_read_reg_111_pp0_iter27_reg;
        t1_0_0_m1_read_reg_111_pp0_iter29_reg <= t1_0_0_m1_read_reg_111_pp0_iter28_reg;
        t1_0_0_m1_read_reg_111_pp0_iter2_reg <= t1_0_0_m1_read_reg_111_pp0_iter1_reg;
        t1_0_0_m1_read_reg_111_pp0_iter30_reg <= t1_0_0_m1_read_reg_111_pp0_iter29_reg;
        t1_0_0_m1_read_reg_111_pp0_iter31_reg <= t1_0_0_m1_read_reg_111_pp0_iter30_reg;
        t1_0_0_m1_read_reg_111_pp0_iter32_reg <= t1_0_0_m1_read_reg_111_pp0_iter31_reg;
        t1_0_0_m1_read_reg_111_pp0_iter33_reg <= t1_0_0_m1_read_reg_111_pp0_iter32_reg;
        t1_0_0_m1_read_reg_111_pp0_iter34_reg <= t1_0_0_m1_read_reg_111_pp0_iter33_reg;
        t1_0_0_m1_read_reg_111_pp0_iter3_reg <= t1_0_0_m1_read_reg_111_pp0_iter2_reg;
        t1_0_0_m1_read_reg_111_pp0_iter4_reg <= t1_0_0_m1_read_reg_111_pp0_iter3_reg;
        t1_0_0_m1_read_reg_111_pp0_iter5_reg <= t1_0_0_m1_read_reg_111_pp0_iter4_reg;
        t1_0_0_m1_read_reg_111_pp0_iter6_reg <= t1_0_0_m1_read_reg_111_pp0_iter5_reg;
        t1_0_0_m1_read_reg_111_pp0_iter7_reg <= t1_0_0_m1_read_reg_111_pp0_iter6_reg;
        t1_0_0_m1_read_reg_111_pp0_iter8_reg <= t1_0_0_m1_read_reg_111_pp0_iter7_reg;
        t1_0_0_m1_read_reg_111_pp0_iter9_reg <= t1_0_0_m1_read_reg_111_pp0_iter8_reg;
        t1_0_1_0_read_reg_91 <= t1_0_1_0_int_reg;
        t1_0_1_0_read_reg_91_pp0_iter10_reg <= t1_0_1_0_read_reg_91_pp0_iter9_reg;
        t1_0_1_0_read_reg_91_pp0_iter11_reg <= t1_0_1_0_read_reg_91_pp0_iter10_reg;
        t1_0_1_0_read_reg_91_pp0_iter12_reg <= t1_0_1_0_read_reg_91_pp0_iter11_reg;
        t1_0_1_0_read_reg_91_pp0_iter13_reg <= t1_0_1_0_read_reg_91_pp0_iter12_reg;
        t1_0_1_0_read_reg_91_pp0_iter1_reg <= t1_0_1_0_read_reg_91;
        t1_0_1_0_read_reg_91_pp0_iter2_reg <= t1_0_1_0_read_reg_91_pp0_iter1_reg;
        t1_0_1_0_read_reg_91_pp0_iter3_reg <= t1_0_1_0_read_reg_91_pp0_iter2_reg;
        t1_0_1_0_read_reg_91_pp0_iter4_reg <= t1_0_1_0_read_reg_91_pp0_iter3_reg;
        t1_0_1_0_read_reg_91_pp0_iter5_reg <= t1_0_1_0_read_reg_91_pp0_iter4_reg;
        t1_0_1_0_read_reg_91_pp0_iter6_reg <= t1_0_1_0_read_reg_91_pp0_iter5_reg;
        t1_0_1_0_read_reg_91_pp0_iter7_reg <= t1_0_1_0_read_reg_91_pp0_iter6_reg;
        t1_0_1_0_read_reg_91_pp0_iter8_reg <= t1_0_1_0_read_reg_91_pp0_iter7_reg;
        t1_0_1_0_read_reg_91_pp0_iter9_reg <= t1_0_1_0_read_reg_91_pp0_iter8_reg;
        t1_0_m1_0_read_reg_101 <= t1_0_m1_0_int_reg;
        t1_0_m1_0_read_reg_101_pp0_iter10_reg <= t1_0_m1_0_read_reg_101_pp0_iter9_reg;
        t1_0_m1_0_read_reg_101_pp0_iter11_reg <= t1_0_m1_0_read_reg_101_pp0_iter10_reg;
        t1_0_m1_0_read_reg_101_pp0_iter12_reg <= t1_0_m1_0_read_reg_101_pp0_iter11_reg;
        t1_0_m1_0_read_reg_101_pp0_iter13_reg <= t1_0_m1_0_read_reg_101_pp0_iter12_reg;
        t1_0_m1_0_read_reg_101_pp0_iter14_reg <= t1_0_m1_0_read_reg_101_pp0_iter13_reg;
        t1_0_m1_0_read_reg_101_pp0_iter15_reg <= t1_0_m1_0_read_reg_101_pp0_iter14_reg;
        t1_0_m1_0_read_reg_101_pp0_iter16_reg <= t1_0_m1_0_read_reg_101_pp0_iter15_reg;
        t1_0_m1_0_read_reg_101_pp0_iter17_reg <= t1_0_m1_0_read_reg_101_pp0_iter16_reg;
        t1_0_m1_0_read_reg_101_pp0_iter18_reg <= t1_0_m1_0_read_reg_101_pp0_iter17_reg;
        t1_0_m1_0_read_reg_101_pp0_iter19_reg <= t1_0_m1_0_read_reg_101_pp0_iter18_reg;
        t1_0_m1_0_read_reg_101_pp0_iter1_reg <= t1_0_m1_0_read_reg_101;
        t1_0_m1_0_read_reg_101_pp0_iter20_reg <= t1_0_m1_0_read_reg_101_pp0_iter19_reg;
        t1_0_m1_0_read_reg_101_pp0_iter2_reg <= t1_0_m1_0_read_reg_101_pp0_iter1_reg;
        t1_0_m1_0_read_reg_101_pp0_iter3_reg <= t1_0_m1_0_read_reg_101_pp0_iter2_reg;
        t1_0_m1_0_read_reg_101_pp0_iter4_reg <= t1_0_m1_0_read_reg_101_pp0_iter3_reg;
        t1_0_m1_0_read_reg_101_pp0_iter5_reg <= t1_0_m1_0_read_reg_101_pp0_iter4_reg;
        t1_0_m1_0_read_reg_101_pp0_iter6_reg <= t1_0_m1_0_read_reg_101_pp0_iter5_reg;
        t1_0_m1_0_read_reg_101_pp0_iter7_reg <= t1_0_m1_0_read_reg_101_pp0_iter6_reg;
        t1_0_m1_0_read_reg_101_pp0_iter8_reg <= t1_0_m1_0_read_reg_101_pp0_iter7_reg;
        t1_0_m1_0_read_reg_101_pp0_iter9_reg <= t1_0_m1_0_read_reg_101_pp0_iter8_reg;
        t1_m1_0_0_read_reg_96 <= t1_m1_0_0_int_reg;
        t1_m1_0_0_read_reg_96_pp0_iter1_reg <= t1_m1_0_0_read_reg_96;
        t1_m1_0_0_read_reg_96_pp0_iter2_reg <= t1_m1_0_0_read_reg_96_pp0_iter1_reg;
        t1_m1_0_0_read_reg_96_pp0_iter3_reg <= t1_m1_0_0_read_reg_96_pp0_iter2_reg;
        t1_m1_0_0_read_reg_96_pp0_iter4_reg <= t1_m1_0_0_read_reg_96_pp0_iter3_reg;
        t1_m1_0_0_read_reg_96_pp0_iter5_reg <= t1_m1_0_0_read_reg_96_pp0_iter4_reg;
        t1_m1_0_0_read_reg_96_pp0_iter6_reg <= t1_m1_0_0_read_reg_96_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= grp_fu_86_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        t1_0_0_0_int_reg <= t1_0_0_0;
        t1_0_0_1_int_reg <= t1_0_0_1;
        t1_0_0_m1_int_reg <= t1_0_0_m1;
        t1_0_1_0_int_reg <= t1_0_1_0;
        t1_0_m1_0_int_reg <= t1_0_m1_0;
        t1_1_0_0_int_reg <= t1_1_0_0;
        t1_m1_0_0_int_reg <= t1_m1_0_0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = grp_fu_86_p2;
    end else begin
        ap_return = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_60_ce = 1'b1;
    end else begin
        grp_fu_60_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_66_ce = 1'b1;
    end else begin
        grp_fu_66_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_70_ce = 1'b1;
    end else begin
        grp_fu_70_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_74_ce = 1'b1;
    end else begin
        grp_fu_74_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_78_ce = 1'b1;
    end else begin
        grp_fu_78_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_82_ce = 1'b1;
    end else begin
        grp_fu_82_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_86_ce = 1'b1;
    end else begin
        grp_fu_86_ce = 1'b0;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

endmodule //JACOBI3D_JACOBI3D_stencil_kernel
