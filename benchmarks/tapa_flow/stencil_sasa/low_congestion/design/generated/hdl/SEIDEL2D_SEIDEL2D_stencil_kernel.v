// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module SEIDEL2D_SEIDEL2D_stencil_kernel (
        ap_clk,
        ap_rst,
        in_0_1,
        in_m1_1,
        in_0_0,
        in_m1_0,
        in_m1_m1,
        in_0_m1,
        in_1_m1,
        in_1_1,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] in_0_1;
input  [31:0] in_m1_1;
input  [31:0] in_0_0;
input  [31:0] in_m1_0;
input  [31:0] in_m1_m1;
input  [31:0] in_0_m1;
input  [31:0] in_1_m1;
input  [31:0] in_1_1;
output  [31:0] ap_return;
input   ap_ce;

reg[31:0] ap_return;

reg   [31:0] in_1_1_read_reg_113;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] in_1_1_read_reg_113_pp0_iter1_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter2_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter3_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter4_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter5_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter6_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter7_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter8_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter9_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter10_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter11_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter12_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter13_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter14_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter15_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter16_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter17_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter18_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter19_reg;
reg   [31:0] in_1_1_read_reg_113_pp0_iter20_reg;
wire   [31:0] grp_fu_68_p2;
reg   [31:0] temp_1_reg_154;
wire   [31:0] grp_fu_74_p2;
reg   [31:0] temp_2_reg_159;
wire   [31:0] grp_fu_80_p2;
reg   [31:0] temp_3_reg_164;
wire   [31:0] grp_fu_86_p2;
reg   [31:0] temp_4_reg_169;
wire   [31:0] grp_fu_92_p2;
reg   [31:0] temp_5_reg_174;
wire   [31:0] grp_fu_96_p2;
reg   [31:0] temp_6_reg_179;
wire   [31:0] grp_fu_100_p2;
reg   [31:0] temp_7_reg_184;
wire   [31:0] grp_fu_104_p2;
reg   [31:0] add7_reg_189;
wire    ap_block_pp0_stage0;
reg    grp_fu_68_ce;
reg    grp_fu_74_ce;
reg    grp_fu_80_ce;
reg    grp_fu_86_ce;
reg    grp_fu_92_ce;
reg    grp_fu_96_ce;
reg    grp_fu_100_ce;
reg    grp_fu_104_ce;
wire   [31:0] grp_fu_108_p2;
reg    grp_fu_108_ce;
reg    ap_ce_reg;
reg   [31:0] in_0_1_int_reg;
reg   [31:0] in_m1_1_int_reg;
reg   [31:0] in_0_0_int_reg;
reg   [31:0] in_m1_0_int_reg;
reg   [31:0] in_m1_m1_int_reg;
reg   [31:0] in_0_m1_int_reg;
reg   [31:0] in_1_m1_int_reg;
reg   [31:0] in_1_1_int_reg;
reg   [31:0] ap_return_int_reg;

SEIDEL2D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_m1_m1_int_reg),
    .din1(in_0_m1_int_reg),
    .ce(grp_fu_68_ce),
    .dout(grp_fu_68_p2)
);

SEIDEL2D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_1_m1_int_reg),
    .din1(in_m1_0_int_reg),
    .ce(grp_fu_74_ce),
    .dout(grp_fu_74_p2)
);

SEIDEL2D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_0_0_int_reg),
    .din1(in_0_1_int_reg),
    .ce(grp_fu_80_ce),
    .dout(grp_fu_80_p2)
);

SEIDEL2D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_m1_1_int_reg),
    .din1(in_0_1_int_reg),
    .ce(grp_fu_86_ce),
    .dout(grp_fu_86_p2)
);

SEIDEL2D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(temp_1_reg_154),
    .din1(temp_2_reg_159),
    .ce(grp_fu_92_ce),
    .dout(grp_fu_92_p2)
);

SEIDEL2D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(temp_3_reg_164),
    .din1(temp_4_reg_169),
    .ce(grp_fu_96_ce),
    .dout(grp_fu_96_p2)
);

SEIDEL2D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(temp_5_reg_174),
    .din1(temp_6_reg_179),
    .ce(grp_fu_100_ce),
    .dout(grp_fu_100_p2)
);

SEIDEL2D_fadd_32ns_32ns_32_7_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_0_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(temp_7_reg_184),
    .din1(in_1_1_read_reg_113_pp0_iter20_reg),
    .ce(grp_fu_104_ce),
    .dout(grp_fu_104_p2)
);

SEIDEL2D_fdiv_32ns_32ns_32_12_no_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_12_no_dsp_0_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add7_reg_189),
    .din1(32'd1091567616),
    .ce(grp_fu_108_ce),
    .dout(grp_fu_108_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add7_reg_189 <= grp_fu_104_p2;
        in_1_1_read_reg_113 <= in_1_1_int_reg;
        in_1_1_read_reg_113_pp0_iter10_reg <= in_1_1_read_reg_113_pp0_iter9_reg;
        in_1_1_read_reg_113_pp0_iter11_reg <= in_1_1_read_reg_113_pp0_iter10_reg;
        in_1_1_read_reg_113_pp0_iter12_reg <= in_1_1_read_reg_113_pp0_iter11_reg;
        in_1_1_read_reg_113_pp0_iter13_reg <= in_1_1_read_reg_113_pp0_iter12_reg;
        in_1_1_read_reg_113_pp0_iter14_reg <= in_1_1_read_reg_113_pp0_iter13_reg;
        in_1_1_read_reg_113_pp0_iter15_reg <= in_1_1_read_reg_113_pp0_iter14_reg;
        in_1_1_read_reg_113_pp0_iter16_reg <= in_1_1_read_reg_113_pp0_iter15_reg;
        in_1_1_read_reg_113_pp0_iter17_reg <= in_1_1_read_reg_113_pp0_iter16_reg;
        in_1_1_read_reg_113_pp0_iter18_reg <= in_1_1_read_reg_113_pp0_iter17_reg;
        in_1_1_read_reg_113_pp0_iter19_reg <= in_1_1_read_reg_113_pp0_iter18_reg;
        in_1_1_read_reg_113_pp0_iter1_reg <= in_1_1_read_reg_113;
        in_1_1_read_reg_113_pp0_iter20_reg <= in_1_1_read_reg_113_pp0_iter19_reg;
        in_1_1_read_reg_113_pp0_iter2_reg <= in_1_1_read_reg_113_pp0_iter1_reg;
        in_1_1_read_reg_113_pp0_iter3_reg <= in_1_1_read_reg_113_pp0_iter2_reg;
        in_1_1_read_reg_113_pp0_iter4_reg <= in_1_1_read_reg_113_pp0_iter3_reg;
        in_1_1_read_reg_113_pp0_iter5_reg <= in_1_1_read_reg_113_pp0_iter4_reg;
        in_1_1_read_reg_113_pp0_iter6_reg <= in_1_1_read_reg_113_pp0_iter5_reg;
        in_1_1_read_reg_113_pp0_iter7_reg <= in_1_1_read_reg_113_pp0_iter6_reg;
        in_1_1_read_reg_113_pp0_iter8_reg <= in_1_1_read_reg_113_pp0_iter7_reg;
        in_1_1_read_reg_113_pp0_iter9_reg <= in_1_1_read_reg_113_pp0_iter8_reg;
        temp_1_reg_154 <= grp_fu_68_p2;
        temp_2_reg_159 <= grp_fu_74_p2;
        temp_3_reg_164 <= grp_fu_80_p2;
        temp_4_reg_169 <= grp_fu_86_p2;
        temp_5_reg_174 <= grp_fu_92_p2;
        temp_6_reg_179 <= grp_fu_96_p2;
        temp_7_reg_184 <= grp_fu_100_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= grp_fu_108_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        in_0_0_int_reg <= in_0_0;
        in_0_1_int_reg <= in_0_1;
        in_0_m1_int_reg <= in_0_m1;
        in_1_1_int_reg <= in_1_1;
        in_1_m1_int_reg <= in_1_m1;
        in_m1_0_int_reg <= in_m1_0;
        in_m1_1_int_reg <= in_m1_1;
        in_m1_m1_int_reg <= in_m1_m1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = grp_fu_108_p2;
    end else begin
        ap_return = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_100_ce = 1'b1;
    end else begin
        grp_fu_100_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_104_ce = 1'b1;
    end else begin
        grp_fu_104_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_108_ce = 1'b1;
    end else begin
        grp_fu_108_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_68_ce = 1'b1;
    end else begin
        grp_fu_68_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_74_ce = 1'b1;
    end else begin
        grp_fu_74_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_80_ce = 1'b1;
    end else begin
        grp_fu_80_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_86_ce = 1'b1;
    end else begin
        grp_fu_86_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_92_ce = 1'b1;
    end else begin
        grp_fu_92_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_96_ce = 1'b1;
    end else begin
        grp_fu_96_ce = 1'b0;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

endmodule //SEIDEL2D_SEIDEL2D_stencil_kernel
