// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module FloatvAddFloatv_FloatvAddFloatv_Pipeline_cc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_in0_s_dout,
        fifo_in0_s_empty_n,
        fifo_in0_s_read,
        fifo_in1_s_dout,
        fifo_in1_s_empty_n,
        fifo_in1_s_read,
        fifo_out_din,
        fifo_out_full_n,
        fifo_out_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [512:0] fifo_in0_s_dout;
input   fifo_in0_s_empty_n;
output   fifo_in0_s_read;
input  [512:0] fifo_in1_s_dout;
input   fifo_in1_s_empty_n;
output   fifo_in1_s_read;
output  [512:0] fifo_out_din;
input   fifo_out_full_n;
output   fifo_out_write;

reg ap_done;
reg ap_idle;
reg fifo_in0_s_read;
reg fifo_in1_s_read;
reg fifo_out_write;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_out_blk_n;
reg    ap_enable_reg_pp0_iter8;
wire    ap_block_pp0_stage0;
reg   [0:0] and_ln162_reg_1158;
reg   [0:0] and_ln162_reg_1158_pp0_iter7_reg;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
reg    ap_block_state10_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] and_ln162_fu_613_p2;
wire    ap_CS_fsm_pp0_stage0;
reg   [0:0] and_ln162_reg_1158_pp0_iter1_reg;
reg   [0:0] and_ln162_reg_1158_pp0_iter2_reg;
reg   [0:0] and_ln162_reg_1158_pp0_iter3_reg;
reg   [0:0] and_ln162_reg_1158_pp0_iter4_reg;
reg   [0:0] and_ln162_reg_1158_pp0_iter5_reg;
reg   [0:0] and_ln162_reg_1158_pp0_iter6_reg;
wire   [0:0] p_vld2_fu_619_p1;
wire   [31:0] elem_val_M_elems_fu_661_p1;
wire   [31:0] elem_val_M_elems_1_fu_675_p1;
wire   [31:0] bitcast_ln78_fu_689_p1;
wire   [31:0] bitcast_ln78_1_fu_703_p1;
wire   [31:0] bitcast_ln78_2_fu_717_p1;
wire   [31:0] bitcast_ln78_3_fu_731_p1;
wire   [31:0] bitcast_ln78_4_fu_745_p1;
wire   [31:0] bitcast_ln78_5_fu_759_p1;
wire   [31:0] bitcast_ln78_6_fu_773_p1;
wire   [31:0] bitcast_ln78_7_fu_787_p1;
wire   [31:0] bitcast_ln78_8_fu_801_p1;
wire   [31:0] bitcast_ln78_9_fu_815_p1;
wire   [31:0] bitcast_ln78_10_fu_829_p1;
wire   [31:0] bitcast_ln78_11_fu_833_p1;
wire   [31:0] bitcast_ln78_12_fu_837_p1;
wire   [31:0] bitcast_ln78_13_fu_841_p1;
wire   [0:0] p_vld_fu_845_p1;
wire   [31:0] elem_val_M_elems_4_fu_887_p1;
wire   [31:0] elem_val_M_elems_5_fu_901_p1;
wire   [31:0] bitcast_ln78_16_fu_915_p1;
wire   [31:0] bitcast_ln78_17_fu_929_p1;
wire   [31:0] bitcast_ln78_18_fu_943_p1;
wire   [31:0] bitcast_ln78_19_fu_957_p1;
wire   [31:0] bitcast_ln78_20_fu_971_p1;
wire   [31:0] bitcast_ln78_21_fu_985_p1;
wire   [31:0] bitcast_ln78_22_fu_999_p1;
wire   [31:0] bitcast_ln78_23_fu_1013_p1;
wire   [31:0] bitcast_ln78_24_fu_1027_p1;
wire   [31:0] bitcast_ln78_25_fu_1041_p1;
wire   [31:0] bitcast_ln78_26_fu_1055_p1;
wire   [31:0] bitcast_ln78_27_fu_1059_p1;
wire   [31:0] bitcast_ln78_28_fu_1063_p1;
wire   [31:0] bitcast_ln78_29_fu_1067_p1;
wire   [31:0] grp_fu_517_p2;
reg   [31:0] add_i_reg_1330;
wire   [31:0] grp_fu_523_p2;
reg   [31:0] add_i_1_reg_1335;
wire   [31:0] grp_fu_529_p2;
reg   [31:0] add_i_2_reg_1340;
wire   [31:0] grp_fu_535_p2;
reg   [31:0] add_i_3_reg_1345;
wire   [31:0] grp_fu_541_p2;
reg   [31:0] add_i_4_reg_1350;
wire   [31:0] grp_fu_547_p2;
reg   [31:0] add_i_5_reg_1355;
wire   [31:0] grp_fu_553_p2;
reg   [31:0] add_i_6_reg_1360;
wire   [31:0] grp_fu_559_p2;
reg   [31:0] add_i_7_reg_1365;
wire   [31:0] grp_fu_565_p2;
reg   [31:0] add_i_8_reg_1370;
wire   [31:0] grp_fu_571_p2;
reg   [31:0] add_i_9_reg_1375;
wire   [31:0] grp_fu_577_p2;
reg   [31:0] add_i_s_reg_1380;
wire   [31:0] grp_fu_583_p2;
reg   [31:0] add_i_10_reg_1385;
wire   [31:0] grp_fu_589_p2;
reg   [31:0] add_i_11_reg_1390;
wire   [31:0] grp_fu_595_p2;
reg   [31:0] add_i_12_reg_1395;
wire   [31:0] grp_fu_601_p2;
reg   [31:0] add_i_13_reg_1400;
wire   [31:0] grp_fu_607_p2;
reg   [31:0] add_i_14_reg_1405;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_val_M_elems_3_reg_133;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_val_M_elems_3_reg_133;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_val_M_elems_2_reg_145;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_val_M_elems_2_reg_145;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_reg_157;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_reg_157;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_75_reg_169;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_75_reg_169;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_76_reg_181;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_76_reg_181;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_77_reg_193;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_77_reg_193;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_78_reg_205;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_78_reg_205;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_79_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_79_reg_217;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_80_reg_229;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_80_reg_229;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_81_reg_241;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_81_reg_241;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_82_reg_253;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_82_reg_253;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_83_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_83_reg_265;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_84_reg_277;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_84_reg_277;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_85_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_85_reg_289;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_86_reg_301;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_86_reg_301;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_87_reg_313;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_87_reg_313;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_32_0_reg_325;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_32_0_reg_325;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_30_0_reg_337;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_30_0_reg_337;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_28_0_reg_349;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_28_0_reg_349;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_26_0_reg_361;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_26_0_reg_361;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_24_0_reg_373;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_24_0_reg_373;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_22_0_reg_385;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_22_0_reg_385;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_20_0_reg_397;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_20_0_reg_397;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_18_0_reg_409;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_18_0_reg_409;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_16_0_reg_421;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_16_0_reg_421;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_14_0_reg_433;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_14_0_reg_433;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_12_0_reg_445;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_12_0_reg_445;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_10_0_reg_457;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_10_0_reg_457;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_8_0_reg_469;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_8_0_reg_469;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_i_val_sroa_6_0_reg_481;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_i_val_sroa_6_0_reg_481;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_val_M_elems_7_reg_493;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_val_M_elems_7_reg_493;
wire   [31:0] ap_phi_reg_pp0_iter0_elem_val_M_elems_6_reg_505;
reg   [31:0] ap_phi_reg_pp0_iter1_elem_val_M_elems_6_reg_505;
wire   [0:0] tmp_nbreadreq_fu_98_p3;
wire   [0:0] tmp_1_nbreadreq_fu_106_p3;
wire   [0:0] fifo_in0_s_read_nbread_fu_114_p2_0;
wire   [0:0] fifo_in1_s_read_nbread_fu_120_p2_0;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] trunc_ln78_fu_627_p1;
wire   [31:0] tmp_3_fu_665_p4;
wire   [31:0] tmp_4_fu_679_p4;
wire   [31:0] tmp_5_fu_693_p4;
wire   [31:0] tmp_6_fu_707_p4;
wire   [31:0] tmp_7_fu_721_p4;
wire   [31:0] tmp_8_fu_735_p4;
wire   [31:0] tmp_9_fu_749_p4;
wire   [31:0] tmp_s_fu_763_p4;
wire   [31:0] tmp_2_fu_777_p4;
wire   [31:0] tmp_10_fu_791_p4;
wire   [31:0] tmp_11_fu_805_p4;
wire   [31:0] tmp_12_fu_819_p4;
wire   [31:0] tmp_13_fu_631_p4;
wire   [31:0] trunc_ln_fu_641_p4;
wire   [31:0] trunc_ln78_2_fu_651_p4;
wire   [31:0] trunc_ln78_1_fu_853_p1;
wire   [31:0] tmp_15_fu_891_p4;
wire   [31:0] tmp_16_fu_905_p4;
wire   [31:0] tmp_17_fu_919_p4;
wire   [31:0] tmp_18_fu_933_p4;
wire   [31:0] tmp_19_fu_947_p4;
wire   [31:0] tmp_20_fu_961_p4;
wire   [31:0] tmp_21_fu_975_p4;
wire   [31:0] tmp_22_fu_989_p4;
wire   [31:0] tmp_23_fu_1003_p4;
wire   [31:0] tmp_24_fu_1017_p4;
wire   [31:0] tmp_25_fu_1031_p4;
wire   [31:0] tmp_26_fu_1045_p4;
wire   [31:0] tmp_14_fu_857_p4;
wire   [31:0] trunc_ln78_4_fu_867_p4;
wire   [31:0] trunc_ln78_5_fu_877_p4;
wire   [31:0] bitcast_ln151_15_fu_1116_p1;
wire   [31:0] bitcast_ln151_14_fu_1113_p1;
wire   [31:0] bitcast_ln151_13_fu_1110_p1;
wire   [31:0] bitcast_ln151_12_fu_1107_p1;
wire   [31:0] bitcast_ln151_11_fu_1104_p1;
wire   [31:0] bitcast_ln151_10_fu_1101_p1;
wire   [31:0] bitcast_ln151_9_fu_1098_p1;
wire   [31:0] bitcast_ln151_8_fu_1095_p1;
wire   [31:0] bitcast_ln151_7_fu_1092_p1;
wire   [31:0] bitcast_ln151_6_fu_1089_p1;
wire   [31:0] bitcast_ln151_5_fu_1086_p1;
wire   [31:0] bitcast_ln151_4_fu_1083_p1;
wire   [31:0] bitcast_ln151_3_fu_1080_p1;
wire   [31:0] bitcast_ln151_2_fu_1077_p1;
wire   [31:0] bitcast_ln151_1_fu_1074_p1;
wire   [31:0] bitcast_ln151_fu_1071_p1;
reg    grp_fu_517_ce;
reg    grp_fu_523_ce;
reg    grp_fu_529_ce;
reg    grp_fu_535_ce;
reg    grp_fu_541_ce;
reg    grp_fu_547_ce;
reg    grp_fu_553_ce;
reg    grp_fu_559_ce;
reg    grp_fu_565_ce;
reg    grp_fu_571_ce;
reg    grp_fu_577_ce;
reg    grp_fu_583_ce;
reg    grp_fu_589_ce;
reg    grp_fu_595_ce;
reg    grp_fu_601_ce;
reg    grp_fu_607_ce;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_444;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_elem_val_M_elems_3_reg_133),
    .din1(ap_phi_reg_pp0_iter1_elem_val_M_elems_6_reg_505),
    .ce(grp_fu_517_ce),
    .dout(grp_fu_517_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_elem_val_M_elems_2_reg_145),
    .din1(ap_phi_reg_pp0_iter1_elem_val_M_elems_7_reg_493),
    .ce(grp_fu_523_ce),
    .dout(grp_fu_523_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_reg_157),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_6_0_reg_481),
    .ce(grp_fu_529_ce),
    .dout(grp_fu_529_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_75_reg_169),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_8_0_reg_469),
    .ce(grp_fu_535_ce),
    .dout(grp_fu_535_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_76_reg_181),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_10_0_reg_457),
    .ce(grp_fu_541_ce),
    .dout(grp_fu_541_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_77_reg_193),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_12_0_reg_445),
    .ce(grp_fu_547_ce),
    .dout(grp_fu_547_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_78_reg_205),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_14_0_reg_433),
    .ce(grp_fu_553_ce),
    .dout(grp_fu_553_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_79_reg_217),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_16_0_reg_421),
    .ce(grp_fu_559_ce),
    .dout(grp_fu_559_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_80_reg_229),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_18_0_reg_409),
    .ce(grp_fu_565_ce),
    .dout(grp_fu_565_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_81_reg_241),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_20_0_reg_397),
    .ce(grp_fu_571_ce),
    .dout(grp_fu_571_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_82_reg_253),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_22_0_reg_385),
    .ce(grp_fu_577_ce),
    .dout(grp_fu_577_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_83_reg_265),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_24_0_reg_373),
    .ce(grp_fu_583_ce),
    .dout(grp_fu_583_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_84_reg_277),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_26_0_reg_361),
    .ce(grp_fu_589_ce),
    .dout(grp_fu_589_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_85_reg_289),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_28_0_reg_349),
    .ce(grp_fu_595_ce),
    .dout(grp_fu_595_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_86_reg_301),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_30_0_reg_337),
    .ce(grp_fu_601_ce),
    .dout(grp_fu_601_p2)
);

FloatvAddFloatv_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_empty_87_reg_313),
    .din1(ap_phi_reg_pp0_iter1_elem_i_val_sroa_32_0_reg_325),
    .ce(grp_fu_607_ce),
    .dout(grp_fu_607_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_10_0_reg_457 <= bitcast_ln78_18_fu_943_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_10_0_reg_457 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_10_0_reg_457;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_12_0_reg_445 <= bitcast_ln78_19_fu_957_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_12_0_reg_445 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_12_0_reg_445;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_14_0_reg_433 <= bitcast_ln78_20_fu_971_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_14_0_reg_433 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_14_0_reg_433;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_16_0_reg_421 <= bitcast_ln78_21_fu_985_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_16_0_reg_421 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_16_0_reg_421;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_18_0_reg_409 <= bitcast_ln78_22_fu_999_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_18_0_reg_409 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_18_0_reg_409;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_20_0_reg_397 <= bitcast_ln78_23_fu_1013_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_20_0_reg_397 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_20_0_reg_397;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_22_0_reg_385 <= bitcast_ln78_24_fu_1027_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_22_0_reg_385 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_22_0_reg_385;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_24_0_reg_373 <= bitcast_ln78_25_fu_1041_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_24_0_reg_373 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_24_0_reg_373;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_26_0_reg_361 <= bitcast_ln78_26_fu_1055_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_26_0_reg_361 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_26_0_reg_361;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_28_0_reg_349 <= bitcast_ln78_27_fu_1059_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_28_0_reg_349 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_28_0_reg_349;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_30_0_reg_337 <= bitcast_ln78_28_fu_1063_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_30_0_reg_337 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_30_0_reg_337;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_32_0_reg_325 <= bitcast_ln78_29_fu_1067_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_32_0_reg_325 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_32_0_reg_325;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_6_0_reg_481 <= bitcast_ln78_16_fu_915_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_6_0_reg_481 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_6_0_reg_481;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_8_0_reg_469 <= bitcast_ln78_17_fu_929_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_i_val_sroa_8_0_reg_469 <= ap_phi_reg_pp0_iter0_elem_i_val_sroa_8_0_reg_469;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_val_M_elems_2_reg_145 <= elem_val_M_elems_1_fu_675_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_val_M_elems_2_reg_145 <= ap_phi_reg_pp0_iter0_elem_val_M_elems_2_reg_145;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_val_M_elems_3_reg_133 <= elem_val_M_elems_fu_661_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_val_M_elems_3_reg_133 <= ap_phi_reg_pp0_iter0_elem_val_M_elems_3_reg_133;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_val_M_elems_6_reg_505 <= elem_val_M_elems_4_fu_887_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_val_M_elems_6_reg_505 <= ap_phi_reg_pp0_iter0_elem_val_M_elems_6_reg_505;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld_fu_845_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_elem_val_M_elems_7_reg_493 <= elem_val_M_elems_5_fu_901_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_elem_val_M_elems_7_reg_493 <= ap_phi_reg_pp0_iter0_elem_val_M_elems_7_reg_493;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_75_reg_169 <= bitcast_ln78_1_fu_703_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_75_reg_169 <= ap_phi_reg_pp0_iter0_empty_75_reg_169;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_76_reg_181 <= bitcast_ln78_2_fu_717_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_76_reg_181 <= ap_phi_reg_pp0_iter0_empty_76_reg_181;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_77_reg_193 <= bitcast_ln78_3_fu_731_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_77_reg_193 <= ap_phi_reg_pp0_iter0_empty_77_reg_193;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_78_reg_205 <= bitcast_ln78_4_fu_745_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_78_reg_205 <= ap_phi_reg_pp0_iter0_empty_78_reg_205;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_79_reg_217 <= bitcast_ln78_5_fu_759_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_79_reg_217 <= ap_phi_reg_pp0_iter0_empty_79_reg_217;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_80_reg_229 <= bitcast_ln78_6_fu_773_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_80_reg_229 <= ap_phi_reg_pp0_iter0_empty_80_reg_229;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_81_reg_241 <= bitcast_ln78_7_fu_787_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_81_reg_241 <= ap_phi_reg_pp0_iter0_empty_81_reg_241;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_82_reg_253 <= bitcast_ln78_8_fu_801_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_82_reg_253 <= ap_phi_reg_pp0_iter0_empty_82_reg_253;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_83_reg_265 <= bitcast_ln78_9_fu_815_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_83_reg_265 <= ap_phi_reg_pp0_iter0_empty_83_reg_265;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_84_reg_277 <= bitcast_ln78_10_fu_829_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_84_reg_277 <= ap_phi_reg_pp0_iter0_empty_84_reg_277;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_85_reg_289 <= bitcast_ln78_11_fu_833_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_85_reg_289 <= ap_phi_reg_pp0_iter0_empty_85_reg_289;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_86_reg_301 <= bitcast_ln78_12_fu_837_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_86_reg_301 <= ap_phi_reg_pp0_iter0_empty_86_reg_301;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_87_reg_313 <= bitcast_ln78_13_fu_841_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_87_reg_313 <= ap_phi_reg_pp0_iter0_empty_87_reg_313;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_444)) begin
        if (((1'd1 == and_ln162_fu_613_p2) & (p_vld2_fu_619_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_empty_reg_157 <= bitcast_ln78_fu_689_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_reg_157 <= ap_phi_reg_pp0_iter0_empty_reg_157;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln162_reg_1158_pp0_iter6_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_i_10_reg_1385 <= grp_fu_583_p2;
        add_i_11_reg_1390 <= grp_fu_589_p2;
        add_i_12_reg_1395 <= grp_fu_595_p2;
        add_i_13_reg_1400 <= grp_fu_601_p2;
        add_i_14_reg_1405 <= grp_fu_607_p2;
        add_i_1_reg_1335 <= grp_fu_523_p2;
        add_i_2_reg_1340 <= grp_fu_529_p2;
        add_i_3_reg_1345 <= grp_fu_535_p2;
        add_i_4_reg_1350 <= grp_fu_541_p2;
        add_i_5_reg_1355 <= grp_fu_547_p2;
        add_i_6_reg_1360 <= grp_fu_553_p2;
        add_i_7_reg_1365 <= grp_fu_559_p2;
        add_i_8_reg_1370 <= grp_fu_565_p2;
        add_i_9_reg_1375 <= grp_fu_571_p2;
        add_i_reg_1330 <= grp_fu_517_p2;
        add_i_s_reg_1380 <= grp_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln162_reg_1158 <= and_ln162_fu_613_p2;
        and_ln162_reg_1158_pp0_iter1_reg <= and_ln162_reg_1158;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln162_reg_1158_pp0_iter2_reg <= and_ln162_reg_1158_pp0_iter1_reg;
        and_ln162_reg_1158_pp0_iter3_reg <= and_ln162_reg_1158_pp0_iter2_reg;
        and_ln162_reg_1158_pp0_iter4_reg <= and_ln162_reg_1158_pp0_iter3_reg;
        and_ln162_reg_1158_pp0_iter5_reg <= and_ln162_reg_1158_pp0_iter4_reg;
        and_ln162_reg_1158_pp0_iter6_reg <= and_ln162_reg_1158_pp0_iter5_reg;
        and_ln162_reg_1158_pp0_iter7_reg <= and_ln162_reg_1158_pp0_iter6_reg;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln162_fu_613_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (fifo_in0_s_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_in0_s_read = 1'b1;
    end else begin
        fifo_in0_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln162_fu_613_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (fifo_in1_s_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_in1_s_read = 1'b1;
    end else begin
        fifo_in1_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln162_reg_1158_pp0_iter7_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        fifo_out_blk_n = fifo_out_full_n;
    end else begin
        fifo_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln162_reg_1158_pp0_iter7_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        fifo_out_write = 1'b1;
    end else begin
        fifo_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_517_ce = 1'b1;
    end else begin
        grp_fu_517_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_523_ce = 1'b1;
    end else begin
        grp_fu_523_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_529_ce = 1'b1;
    end else begin
        grp_fu_529_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_535_ce = 1'b1;
    end else begin
        grp_fu_535_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_541_ce = 1'b1;
    end else begin
        grp_fu_541_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_547_ce = 1'b1;
    end else begin
        grp_fu_547_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_553_ce = 1'b1;
    end else begin
        grp_fu_553_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_559_ce = 1'b1;
    end else begin
        grp_fu_559_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_565_ce = 1'b1;
    end else begin
        grp_fu_565_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_571_ce = 1'b1;
    end else begin
        grp_fu_571_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_577_ce = 1'b1;
    end else begin
        grp_fu_577_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_583_ce = 1'b1;
    end else begin
        grp_fu_583_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_589_ce = 1'b1;
    end else begin
        grp_fu_589_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_595_ce = 1'b1;
    end else begin
        grp_fu_595_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_601_ce = 1'b1;
    end else begin
        grp_fu_601_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_607_ce = 1'b1;
    end else begin
        grp_fu_607_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln162_fu_613_p2 = (tmp_nbreadreq_fu_98_p3 & tmp_1_nbreadreq_fu_106_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'd1 == and_ln162_reg_1158_pp0_iter7_reg) & (ap_enable_reg_pp0_iter8 == 1'b1) & (fifo_out_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'd1 == and_ln162_reg_1158_pp0_iter7_reg) & (ap_enable_reg_pp0_iter8 == 1'b1) & (fifo_out_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'd1 == and_ln162_reg_1158_pp0_iter7_reg) & (ap_enable_reg_pp0_iter8 == 1'b1) & (fifo_out_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter8 = ((1'd1 == and_ln162_reg_1158_pp0_iter7_reg) & (fifo_out_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_444 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_10_0_reg_457 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_12_0_reg_445 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_14_0_reg_433 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_16_0_reg_421 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_18_0_reg_409 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_20_0_reg_397 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_22_0_reg_385 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_24_0_reg_373 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_26_0_reg_361 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_28_0_reg_349 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_30_0_reg_337 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_32_0_reg_325 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_6_0_reg_481 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_i_val_sroa_8_0_reg_469 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_val_M_elems_2_reg_145 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_val_M_elems_3_reg_133 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_val_M_elems_6_reg_505 = 'bx;

assign ap_phi_reg_pp0_iter0_elem_val_M_elems_7_reg_493 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_75_reg_169 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_76_reg_181 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_77_reg_193 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_78_reg_205 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_79_reg_217 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_80_reg_229 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_81_reg_241 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_82_reg_253 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_83_reg_265 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_84_reg_277 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_85_reg_289 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_86_reg_301 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_87_reg_313 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_reg_157 = 'bx;

assign ap_ready = 1'b0;

assign bitcast_ln151_10_fu_1101_p1 = add_i_s_reg_1380;

assign bitcast_ln151_11_fu_1104_p1 = add_i_10_reg_1385;

assign bitcast_ln151_12_fu_1107_p1 = add_i_11_reg_1390;

assign bitcast_ln151_13_fu_1110_p1 = add_i_12_reg_1395;

assign bitcast_ln151_14_fu_1113_p1 = add_i_13_reg_1400;

assign bitcast_ln151_15_fu_1116_p1 = add_i_14_reg_1405;

assign bitcast_ln151_1_fu_1074_p1 = add_i_1_reg_1335;

assign bitcast_ln151_2_fu_1077_p1 = add_i_2_reg_1340;

assign bitcast_ln151_3_fu_1080_p1 = add_i_3_reg_1345;

assign bitcast_ln151_4_fu_1083_p1 = add_i_4_reg_1350;

assign bitcast_ln151_5_fu_1086_p1 = add_i_5_reg_1355;

assign bitcast_ln151_6_fu_1089_p1 = add_i_6_reg_1360;

assign bitcast_ln151_7_fu_1092_p1 = add_i_7_reg_1365;

assign bitcast_ln151_8_fu_1095_p1 = add_i_8_reg_1370;

assign bitcast_ln151_9_fu_1098_p1 = add_i_9_reg_1375;

assign bitcast_ln151_fu_1071_p1 = add_i_reg_1330;

assign bitcast_ln78_10_fu_829_p1 = tmp_12_fu_819_p4;

assign bitcast_ln78_11_fu_833_p1 = tmp_13_fu_631_p4;

assign bitcast_ln78_12_fu_837_p1 = trunc_ln_fu_641_p4;

assign bitcast_ln78_13_fu_841_p1 = trunc_ln78_2_fu_651_p4;

assign bitcast_ln78_16_fu_915_p1 = tmp_16_fu_905_p4;

assign bitcast_ln78_17_fu_929_p1 = tmp_17_fu_919_p4;

assign bitcast_ln78_18_fu_943_p1 = tmp_18_fu_933_p4;

assign bitcast_ln78_19_fu_957_p1 = tmp_19_fu_947_p4;

assign bitcast_ln78_1_fu_703_p1 = tmp_5_fu_693_p4;

assign bitcast_ln78_20_fu_971_p1 = tmp_20_fu_961_p4;

assign bitcast_ln78_21_fu_985_p1 = tmp_21_fu_975_p4;

assign bitcast_ln78_22_fu_999_p1 = tmp_22_fu_989_p4;

assign bitcast_ln78_23_fu_1013_p1 = tmp_23_fu_1003_p4;

assign bitcast_ln78_24_fu_1027_p1 = tmp_24_fu_1017_p4;

assign bitcast_ln78_25_fu_1041_p1 = tmp_25_fu_1031_p4;

assign bitcast_ln78_26_fu_1055_p1 = tmp_26_fu_1045_p4;

assign bitcast_ln78_27_fu_1059_p1 = tmp_14_fu_857_p4;

assign bitcast_ln78_28_fu_1063_p1 = trunc_ln78_4_fu_867_p4;

assign bitcast_ln78_29_fu_1067_p1 = trunc_ln78_5_fu_877_p4;

assign bitcast_ln78_2_fu_717_p1 = tmp_6_fu_707_p4;

assign bitcast_ln78_3_fu_731_p1 = tmp_7_fu_721_p4;

assign bitcast_ln78_4_fu_745_p1 = tmp_8_fu_735_p4;

assign bitcast_ln78_5_fu_759_p1 = tmp_9_fu_749_p4;

assign bitcast_ln78_6_fu_773_p1 = tmp_s_fu_763_p4;

assign bitcast_ln78_7_fu_787_p1 = tmp_2_fu_777_p4;

assign bitcast_ln78_8_fu_801_p1 = tmp_10_fu_791_p4;

assign bitcast_ln78_9_fu_815_p1 = tmp_11_fu_805_p4;

assign bitcast_ln78_fu_689_p1 = tmp_4_fu_679_p4;

assign elem_val_M_elems_1_fu_675_p1 = tmp_3_fu_665_p4;

assign elem_val_M_elems_4_fu_887_p1 = trunc_ln78_1_fu_853_p1;

assign elem_val_M_elems_5_fu_901_p1 = tmp_15_fu_891_p4;

assign elem_val_M_elems_fu_661_p1 = trunc_ln78_fu_627_p1;

assign fifo_in0_s_read_nbread_fu_114_p2_0 = fifo_in0_s_empty_n;

assign fifo_in1_s_read_nbread_fu_120_p2_0 = fifo_in1_s_empty_n;

assign fifo_out_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{1'd0}, {bitcast_ln151_15_fu_1116_p1}}}, {bitcast_ln151_14_fu_1113_p1}}}, {bitcast_ln151_13_fu_1110_p1}}}, {bitcast_ln151_12_fu_1107_p1}}}, {bitcast_ln151_11_fu_1104_p1}}}, {bitcast_ln151_10_fu_1101_p1}}}, {bitcast_ln151_9_fu_1098_p1}}}, {bitcast_ln151_8_fu_1095_p1}}}, {bitcast_ln151_7_fu_1092_p1}}}, {bitcast_ln151_6_fu_1089_p1}}}, {bitcast_ln151_5_fu_1086_p1}}}, {bitcast_ln151_4_fu_1083_p1}}}, {bitcast_ln151_3_fu_1080_p1}}}, {bitcast_ln151_2_fu_1077_p1}}}, {bitcast_ln151_1_fu_1074_p1}}}, {bitcast_ln151_fu_1071_p1}};

assign p_vld2_fu_619_p1 = fifo_in0_s_read_nbread_fu_114_p2_0;

assign p_vld_fu_845_p1 = fifo_in1_s_read_nbread_fu_120_p2_0;

assign tmp_10_fu_791_p4 = {{fifo_in0_s_dout[351:320]}};

assign tmp_11_fu_805_p4 = {{fifo_in0_s_dout[383:352]}};

assign tmp_12_fu_819_p4 = {{fifo_in0_s_dout[415:384]}};

assign tmp_13_fu_631_p4 = {{fifo_in0_s_dout[447:416]}};

assign tmp_14_fu_857_p4 = {{fifo_in1_s_dout[447:416]}};

assign tmp_15_fu_891_p4 = {{fifo_in1_s_dout[63:32]}};

assign tmp_16_fu_905_p4 = {{fifo_in1_s_dout[95:64]}};

assign tmp_17_fu_919_p4 = {{fifo_in1_s_dout[127:96]}};

assign tmp_18_fu_933_p4 = {{fifo_in1_s_dout[159:128]}};

assign tmp_19_fu_947_p4 = {{fifo_in1_s_dout[191:160]}};

assign tmp_1_nbreadreq_fu_106_p3 = fifo_in1_s_empty_n;

assign tmp_20_fu_961_p4 = {{fifo_in1_s_dout[223:192]}};

assign tmp_21_fu_975_p4 = {{fifo_in1_s_dout[255:224]}};

assign tmp_22_fu_989_p4 = {{fifo_in1_s_dout[287:256]}};

assign tmp_23_fu_1003_p4 = {{fifo_in1_s_dout[319:288]}};

assign tmp_24_fu_1017_p4 = {{fifo_in1_s_dout[351:320]}};

assign tmp_25_fu_1031_p4 = {{fifo_in1_s_dout[383:352]}};

assign tmp_26_fu_1045_p4 = {{fifo_in1_s_dout[415:384]}};

assign tmp_2_fu_777_p4 = {{fifo_in0_s_dout[319:288]}};

assign tmp_3_fu_665_p4 = {{fifo_in0_s_dout[63:32]}};

assign tmp_4_fu_679_p4 = {{fifo_in0_s_dout[95:64]}};

assign tmp_5_fu_693_p4 = {{fifo_in0_s_dout[127:96]}};

assign tmp_6_fu_707_p4 = {{fifo_in0_s_dout[159:128]}};

assign tmp_7_fu_721_p4 = {{fifo_in0_s_dout[191:160]}};

assign tmp_8_fu_735_p4 = {{fifo_in0_s_dout[223:192]}};

assign tmp_9_fu_749_p4 = {{fifo_in0_s_dout[255:224]}};

assign tmp_nbreadreq_fu_98_p3 = fifo_in0_s_empty_n;

assign tmp_s_fu_763_p4 = {{fifo_in0_s_dout[287:256]}};

assign trunc_ln78_1_fu_853_p1 = fifo_in1_s_dout[31:0];

assign trunc_ln78_2_fu_651_p4 = {{fifo_in0_s_dout[511:480]}};

assign trunc_ln78_4_fu_867_p4 = {{fifo_in1_s_dout[479:448]}};

assign trunc_ln78_5_fu_877_p4 = {{fifo_in1_s_dout[511:480]}};

assign trunc_ln78_fu_627_p1 = fifo_in0_s_dout[31:0];

assign trunc_ln_fu_641_p4 = {{fifo_in0_s_dout[479:448]}};

endmodule //FloatvAddFloatv_FloatvAddFloatv_Pipeline_cc
