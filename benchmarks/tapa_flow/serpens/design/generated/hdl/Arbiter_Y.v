// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

(* CORE_GENERATION_INFO="Arbiter_Y_Arbiter_Y,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.330000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.850757,HLS_SYN_LAT=909,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=783,HLS_SYN_LUT=871,HLS_VERSION=2022_2}" *)

module Arbiter_Y (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        P_N,
        M,
        fifo_in_0_dout,
        fifo_in_0_empty_n,
        fifo_in_0_read,
        fifo_in_1_dout,
        fifo_in_1_empty_n,
        fifo_in_1_read,
        fifo_in_2_dout,
        fifo_in_2_empty_n,
        fifo_in_2_read,
        fifo_in_peek_0_dout,
        fifo_in_peek_0_empty_n,
        fifo_in_peek_0_read,
        fifo_in_peek_1_dout,
        fifo_in_peek_1_empty_n,
        fifo_in_peek_1_read,
        fifo_in_peek_2_dout,
        fifo_in_peek_2_empty_n,
        fifo_in_peek_2_read,
        fifo_out_din,
        fifo_out_full_n,
        fifo_out_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] P_N;
input  [31:0] M;
input  [64:0] fifo_in_0_dout;
input   fifo_in_0_empty_n;
output   fifo_in_0_read;
input  [64:0] fifo_in_1_dout;
input   fifo_in_1_empty_n;
output   fifo_in_1_read;
input  [64:0] fifo_in_2_dout;
input   fifo_in_2_empty_n;
output   fifo_in_2_read;
input  [64:0] fifo_in_peek_0_dout;
input   fifo_in_peek_0_empty_n;
output   fifo_in_peek_0_read;
input  [64:0] fifo_in_peek_1_dout;
input   fifo_in_peek_1_empty_n;
output   fifo_in_peek_1_read;
input  [64:0] fifo_in_peek_2_dout;
input   fifo_in_peek_2_empty_n;
output   fifo_in_peek_2_read;
output  [64:0] fifo_out_din;
input   fifo_out_full_n;
output   fifo_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_in_0_read;
reg fifo_in_1_read;
reg fifo_in_2_read;
reg fifo_out_write;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire  signed [31:0] add_ln150_fu_159_p2;
reg  signed [31:0] add_ln150_reg_280;
reg   [0:0] tmp_reg_285;
reg   [27:0] num_out_reg_291;
wire    ap_CS_fsm_state2;
wire   [64:0] grp_fu_192_p2;
reg   [64:0] mul_ln150_reg_301;
wire    ap_CS_fsm_state3;
reg   [26:0] tmp_2_reg_306;
wire  signed [26:0] select_ln150_1_fu_235_p3;
reg  signed [26:0] select_ln150_1_reg_312;
wire    ap_CS_fsm_state4;
wire  signed [31:0] rp_time_fu_247_p3;
reg  signed [31:0] rp_time_reg_318;
wire    ap_CS_fsm_state5;
wire  signed [28:0] num_pe_output_fu_265_p2;
reg   [28:0] num_pe_output_reg_323;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_274_p2;
reg   [31:0] num_ite_Y_reg_334;
wire    ap_CS_fsm_state7;
wire    grp_Arbiter_Y_Pipeline_aby_fu_144_ap_start;
wire    grp_Arbiter_Y_Pipeline_aby_fu_144_ap_done;
wire    grp_Arbiter_Y_Pipeline_aby_fu_144_ap_idle;
wire    grp_Arbiter_Y_Pipeline_aby_fu_144_ap_ready;
wire   [64:0] grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_out_din;
wire    grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_out_write;
wire    grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_in_0_read;
wire    grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_in_1_read;
wire    grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_in_2_read;
reg    grp_Arbiter_Y_Pipeline_aby_fu_144_ap_start_reg;
wire    ap_CS_fsm_state8;
wire   [31:0] add_ln151_fu_173_p2;
wire   [33:0] grp_fu_192_p1;
wire   [64:0] sub_ln150_fu_208_p2;
wire   [26:0] tmp_1_fu_213_p4;
wire   [26:0] select_ln150_fu_223_p3;
wire   [26:0] sub_ln150_1_fu_229_p2;
wire   [0:0] icmp_ln149_fu_241_p2;
wire   [28:0] shl_ln_fu_258_p3;
wire  signed [28:0] sext_ln150_fu_255_p1;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_Arbiter_Y_Pipeline_aby_fu_144_ap_start_reg = 1'b0;
end

Arbiter_Y_Arbiter_Y_Pipeline_aby grp_Arbiter_Y_Pipeline_aby_fu_144(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Arbiter_Y_Pipeline_aby_fu_144_ap_start),
    .ap_done(grp_Arbiter_Y_Pipeline_aby_fu_144_ap_done),
    .ap_idle(grp_Arbiter_Y_Pipeline_aby_fu_144_ap_idle),
    .ap_ready(grp_Arbiter_Y_Pipeline_aby_fu_144_ap_ready),
    .num_ite_Y(num_ite_Y_reg_334),
    .fifo_out_din(grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_out_din),
    .fifo_out_full_n(fifo_out_full_n),
    .fifo_out_write(grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_out_write),
    .fifo_in_0_dout(fifo_in_0_dout),
    .fifo_in_0_empty_n(fifo_in_0_empty_n),
    .fifo_in_0_read(grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_in_0_read),
    .fifo_in_1_dout(fifo_in_1_dout),
    .fifo_in_1_empty_n(fifo_in_1_empty_n),
    .fifo_in_1_read(grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_in_1_read),
    .fifo_in_2_dout(fifo_in_2_dout),
    .fifo_in_2_empty_n(fifo_in_2_empty_n),
    .fifo_in_2_read(grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_in_2_read),
    .sext_ln150_1(num_pe_output_reg_323),
    .sext_ln151(num_out_reg_291)
);

Arbiter_Y_mul_32s_34ns_65_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_32s_34ns_65_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_ln150_reg_280),
    .din1(grp_fu_192_p1),
    .ce(1'b1),
    .dout(grp_fu_192_p2)
);

Arbiter_Y_mul_29s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_29s_32s_32_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(num_pe_output_reg_323),
    .din1(rp_time_reg_318),
    .ce(1'b1),
    .dout(grp_fu_274_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Arbiter_Y_Pipeline_aby_fu_144_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_Arbiter_Y_Pipeline_aby_fu_144_ap_start_reg <= 1'b1;
        end else if ((grp_Arbiter_Y_Pipeline_aby_fu_144_ap_ready == 1'b1)) begin
            grp_Arbiter_Y_Pipeline_aby_fu_144_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln150_reg_280 <= add_ln150_fu_159_p2;
        num_out_reg_291 <= {{add_ln151_fu_173_p2[31:4]}};
        tmp_reg_285 <= add_ln150_fu_159_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln150_reg_301 <= grp_fu_192_p2;
        tmp_2_reg_306 <= {{grp_fu_192_p2[64:38]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        num_ite_Y_reg_334 <= grp_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        num_pe_output_reg_323 <= num_pe_output_fu_265_p2;
        rp_time_reg_318 <= rp_time_fu_247_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        select_ln150_1_reg_312 <= select_ln150_1_fu_235_p3;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_Arbiter_Y_Pipeline_aby_fu_144_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_Arbiter_Y_Pipeline_aby_fu_144_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_Arbiter_Y_Pipeline_aby_fu_144_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fifo_in_0_read = grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_in_0_read;
    end else begin
        fifo_in_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fifo_in_1_read = grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_in_1_read;
    end else begin
        fifo_in_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fifo_in_2_read = grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_in_2_read;
    end else begin
        fifo_in_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fifo_out_write = grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_out_write;
    end else begin
        fifo_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_Arbiter_Y_Pipeline_aby_fu_144_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln150_fu_159_p2 = (M + 32'd47);

assign add_ln151_fu_173_p2 = (M + 32'd15);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign fifo_in_peek_0_read = 1'b0;

assign fifo_in_peek_1_read = 1'b0;

assign fifo_in_peek_2_read = 1'b0;

assign fifo_out_din = grp_Arbiter_Y_Pipeline_aby_fu_144_fifo_out_din;

assign grp_Arbiter_Y_Pipeline_aby_fu_144_ap_start = grp_Arbiter_Y_Pipeline_aby_fu_144_ap_start_reg;

assign grp_fu_192_p1 = 65'd5726623062;

assign icmp_ln149_fu_241_p2 = ((P_N == 32'd0) ? 1'b1 : 1'b0);

assign num_pe_output_fu_265_p2 = ($signed(shl_ln_fu_258_p3) - $signed(sext_ln150_fu_255_p1));

assign rp_time_fu_247_p3 = ((icmp_ln149_fu_241_p2[0:0] == 1'b1) ? 32'd1 : P_N);

assign select_ln150_1_fu_235_p3 = ((tmp_reg_285[0:0] == 1'b1) ? sub_ln150_1_fu_229_p2 : tmp_2_reg_306);

assign select_ln150_fu_223_p3 = ((tmp_reg_285[0:0] == 1'b1) ? tmp_1_fu_213_p4 : tmp_2_reg_306);

assign sext_ln150_fu_255_p1 = select_ln150_1_reg_312;

assign shl_ln_fu_258_p3 = {{select_ln150_1_reg_312}, {2'd0}};

assign sub_ln150_1_fu_229_p2 = (27'd0 - select_ln150_fu_223_p3);

assign sub_ln150_fu_208_p2 = (65'd0 - mul_ln150_reg_301);

assign tmp_1_fu_213_p4 = {{sub_ln150_fu_208_p2[64:38]}};

endmodule //Arbiter_Y
