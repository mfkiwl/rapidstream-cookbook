// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

(* CORE_GENERATION_INFO="read_B_read_B,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.330000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.430900,HLS_SYN_LAT=2000035,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=348,HLS_SYN_LUT=403,HLS_VERSION=2022_2}" *)

module read_B (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        B_read_addr_din,
        B_read_addr_full_n,
        B_read_addr_write,
        B_read_data_s_dout,
        B_read_data_s_empty_n,
        B_read_data_s_read,
        B_read_data_peek_dout,
        B_read_data_peek_empty_n,
        B_read_data_peek_read,
        B_write_addr_din,
        B_write_addr_full_n,
        B_write_addr_write,
        B_write_data_din,
        B_write_data_full_n,
        B_write_data_write,
        B_write_resp_s_dout,
        B_write_resp_s_empty_n,
        B_write_resp_s_read,
        B_write_resp_peek_dout,
        B_write_resp_peek_empty_n,
        B_write_resp_peek_read,
        fifo_B_din,
        fifo_B_full_n,
        fifo_B_write,
        K,
        P_N
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [64:0] B_read_addr_din;
input   B_read_addr_full_n;
output   B_read_addr_write;
input  [512:0] B_read_data_s_dout;
input   B_read_data_s_empty_n;
output   B_read_data_s_read;
input  [512:0] B_read_data_peek_dout;
input   B_read_data_peek_empty_n;
output   B_read_data_peek_read;
output  [64:0] B_write_addr_din;
input   B_write_addr_full_n;
output   B_write_addr_write;
output  [512:0] B_write_data_din;
input   B_write_data_full_n;
output   B_write_data_write;
input  [8:0] B_write_resp_s_dout;
input   B_write_resp_s_empty_n;
output   B_write_resp_s_read;
input  [8:0] B_write_resp_peek_dout;
input   B_write_resp_peek_empty_n;
output   B_write_resp_peek_read;
output  [512:0] fifo_B_din;
input   fifo_B_full_n;
output   fifo_B_write;
input  [31:0] K;
input  [31:0] P_N;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg B_read_addr_write;
reg B_read_data_s_read;
reg fifo_B_write;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] N16_reg_290;
reg  signed [28:0] trunc_ln_reg_296;
reg   [13:0] lshr_ln_reg_301;
wire    ap_CS_fsm_state2;
wire   [15:0] rp_time_fu_253_p3;
reg   [15:0] rp_time_reg_316;
wire    ap_CS_fsm_state3;
wire   [31:0] grp_fu_242_p2;
reg   [31:0] num_ite_B_reg_321;
wire    grp_read_B_Pipeline_rd_B_fu_170_ap_start;
wire    grp_read_B_Pipeline_rd_B_fu_170_ap_done;
wire    grp_read_B_Pipeline_rd_B_fu_170_ap_idle;
wire    grp_read_B_Pipeline_rd_B_fu_170_ap_ready;
wire   [512:0] grp_read_B_Pipeline_rd_B_fu_170_fifo_B_din;
wire    grp_read_B_Pipeline_rd_B_fu_170_fifo_B_write;
wire    grp_read_B_Pipeline_rd_B_fu_170_B_read_data_s_read;
wire   [64:0] grp_read_B_Pipeline_rd_B_fu_170_B_read_addr_din;
wire    grp_read_B_Pipeline_rd_B_fu_170_B_read_addr_write;
reg    grp_read_B_Pipeline_rd_B_fu_170_ap_start_reg;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln98_fu_267_p2;
wire    ap_CS_fsm_state5;
reg   [14:0] rp_fu_90;
wire   [14:0] rp_2_fu_272_p2;
wire   [15:0] N_fu_181_p1;
wire   [31:0] add_ln96_fu_199_p2;
wire   [16:0] zext_ln95_fu_195_p1;
wire   [16:0] add_ln96_1_fu_215_p2;
wire   [13:0] grp_fu_242_p0;
wire   [0:0] icmp_ln94_fu_248_p2;
wire   [15:0] zext_ln98_fu_263_p1;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire   [31:0] grp_fu_242_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_read_B_Pipeline_rd_B_fu_170_ap_start_reg = 1'b0;
end

read_B_read_B_Pipeline_rd_B grp_read_B_Pipeline_rd_B_fu_170(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_read_B_Pipeline_rd_B_fu_170_ap_start),
    .ap_done(grp_read_B_Pipeline_rd_B_fu_170_ap_done),
    .ap_idle(grp_read_B_Pipeline_rd_B_fu_170_ap_idle),
    .ap_ready(grp_read_B_Pipeline_rd_B_fu_170_ap_ready),
    .num_ite_B(num_ite_B_reg_321),
    .fifo_B_din(grp_read_B_Pipeline_rd_B_fu_170_fifo_B_din),
    .fifo_B_full_n(fifo_B_full_n),
    .fifo_B_write(grp_read_B_Pipeline_rd_B_fu_170_fifo_B_write),
    .B_read_data_s_dout(B_read_data_s_dout),
    .B_read_data_s_empty_n(B_read_data_s_empty_n),
    .B_read_data_s_read(grp_read_B_Pipeline_rd_B_fu_170_B_read_data_s_read),
    .B_read_addr_din(grp_read_B_Pipeline_rd_B_fu_170_B_read_addr_din),
    .B_read_addr_full_n(B_read_addr_full_n),
    .B_read_addr_write(grp_read_B_Pipeline_rd_B_fu_170_B_read_addr_write)
);

read_B_mul_14ns_29s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 29 ),
    .dout_WIDTH( 32 ))
mul_14ns_29s_32_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_242_p0),
    .din1(trunc_ln_reg_296),
    .ce(1'b1),
    .dout(grp_fu_242_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_read_B_Pipeline_rd_B_fu_170_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln98_fu_267_p2 == 1'd1))) begin
            grp_read_B_Pipeline_rd_B_fu_170_ap_start_reg <= 1'b1;
        end else if ((grp_read_B_Pipeline_rd_B_fu_170_ap_ready == 1'b1)) begin
            grp_read_B_Pipeline_rd_B_fu_170_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        rp_fu_90 <= 15'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln98_fu_267_p2 == 1'd1))) begin
        rp_fu_90 <= rp_2_fu_272_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        N16_reg_290 <= {{P_N[31:16]}};
        lshr_ln_reg_301 <= {{add_ln96_1_fu_215_p2[16:3]}};
        trunc_ln_reg_296 <= {{add_ln96_fu_199_p2[31:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        num_ite_B_reg_321 <= grp_fu_242_p2;
        rp_time_reg_316 <= rp_time_fu_253_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        B_read_addr_write = grp_read_B_Pipeline_rd_B_fu_170_B_read_addr_write;
    end else begin
        B_read_addr_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        B_read_data_s_read = grp_read_B_Pipeline_rd_B_fu_170_B_read_data_s_read;
    end else begin
        B_read_data_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_read_B_Pipeline_rd_B_fu_170_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln98_fu_267_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln98_fu_267_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fifo_B_write = grp_read_B_Pipeline_rd_B_fu_170_fifo_B_write;
    end else begin
        fifo_B_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln98_fu_267_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((grp_read_B_Pipeline_rd_B_fu_170_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_read_addr_din = grp_read_B_Pipeline_rd_B_fu_170_B_read_addr_din;

assign B_read_data_peek_read = 1'b0;

assign B_write_addr_din = 65'd0;

assign B_write_addr_write = 1'b0;

assign B_write_data_din = 513'd0;

assign B_write_data_write = 1'b0;

assign B_write_resp_peek_read = 1'b0;

assign B_write_resp_s_read = 1'b0;

assign N_fu_181_p1 = P_N[15:0];

assign add_ln96_1_fu_215_p2 = (zext_ln95_fu_195_p1 + 17'd7);

assign add_ln96_fu_199_p2 = (K + 32'd7);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign fifo_B_din = grp_read_B_Pipeline_rd_B_fu_170_fifo_B_din;

assign grp_fu_242_p0 = grp_fu_242_p00;

assign grp_fu_242_p00 = lshr_ln_reg_301;

assign grp_read_B_Pipeline_rd_B_fu_170_ap_start = grp_read_B_Pipeline_rd_B_fu_170_ap_start_reg;

assign icmp_ln94_fu_248_p2 = ((N16_reg_290 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_267_p2 = (($signed(zext_ln98_fu_263_p1) < $signed(rp_time_reg_316)) ? 1'b1 : 1'b0);

assign rp_2_fu_272_p2 = (rp_fu_90 + 15'd1);

assign rp_time_fu_253_p3 = ((icmp_ln94_fu_248_p2[0:0] == 1'b1) ? 16'd1 : N16_reg_290);

assign zext_ln95_fu_195_p1 = N_fu_181_p1;

assign zext_ln98_fu_263_p1 = rp_fu_90;

endmodule //read_B
