// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module Scatter_1_2_Scatter_1_2_Pipeline_VITIS_LOOP_405_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_in_s_dout,
        fifo_in_s_empty_n,
        fifo_in_s_read,
        fifo_out_0_din,
        fifo_out_0_full_n,
        fifo_out_0_write,
        fifo_out_1_din,
        fifo_out_1_full_n,
        fifo_out_1_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [512:0] fifo_in_s_dout;
input   fifo_in_s_empty_n;
output   fifo_in_s_read;
output  [256:0] fifo_out_0_din;
input   fifo_out_0_full_n;
output   fifo_out_0_write;
output  [256:0] fifo_out_1_din;
input   fifo_out_1_full_n;
output   fifo_out_1_write;

reg ap_done;
reg ap_idle;
reg fifo_in_s_read;
reg fifo_out_0_write;
reg fifo_out_1_write;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] tmp_nbreadreq_fu_42_p3;
wire    ap_CS_fsm_state2;
wire   [0:0] and_ln409_1_fu_92_p2;
wire   [0:0] and_ln409_fu_86_p0;
wire   [0:0] and_ln409_fu_86_p1;
wire   [0:0] and_ln409_fu_86_p2;
wire   [255:0] trunc_ln628_fu_102_p1;
wire   [255:0] tmp_7_fu_115_p4;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln409_1_fu_92_p2) & (fifo_in_s_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_in_s_read = 1'b1;
    end else begin
        fifo_in_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln409_1_fu_92_p2) & (fifo_out_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_out_0_write = 1'b1;
    end else begin
        fifo_out_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln409_1_fu_92_p2) & (fifo_out_1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_out_1_write = 1'b1;
    end else begin
        fifo_out_1_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln409_1_fu_92_p2 = (tmp_nbreadreq_fu_42_p3 & and_ln409_fu_86_p2);

assign and_ln409_fu_86_p0 = fifo_out_0_full_n;

assign and_ln409_fu_86_p1 = fifo_out_1_full_n;

assign and_ln409_fu_86_p2 = (and_ln409_fu_86_p1 & and_ln409_fu_86_p0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_ready = 1'b0;

assign fifo_out_0_din = {{1'd0}, {trunc_ln628_fu_102_p1}};

assign fifo_out_1_din = {{1'd0}, {tmp_7_fu_115_p4}};

assign tmp_7_fu_115_p4 = {{fifo_in_s_dout[511:256]}};

assign tmp_nbreadreq_fu_42_p3 = fifo_in_s_empty_n;

assign trunc_ln628_fu_102_p1 = fifo_in_s_dout[255:0];

endmodule //Scatter_1_2_Scatter_1_2_Pipeline_VITIS_LOOP_405_1
