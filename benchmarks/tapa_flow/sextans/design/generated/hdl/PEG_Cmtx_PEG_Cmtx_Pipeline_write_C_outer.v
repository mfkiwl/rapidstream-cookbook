// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module PEG_Cmtx_PEG_Cmtx_Pipeline_write_C_outer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_C_out_din,
        fifo_C_out_full_n,
        fifo_C_out_write,
        num_v_out,
        local_C_V_address0,
        local_C_V_ce0,
        local_C_V_q0,
        local_C_V_4_address0,
        local_C_V_4_ce0,
        local_C_V_4_q0,
        local_C_V_8_address0,
        local_C_V_8_ce0,
        local_C_V_8_q0,
        local_C_V_12_address0,
        local_C_V_12_ce0,
        local_C_V_12_q0,
        local_C_V_1_address0,
        local_C_V_1_ce0,
        local_C_V_1_q0,
        local_C_V_5_address0,
        local_C_V_5_ce0,
        local_C_V_5_q0,
        local_C_V_9_address0,
        local_C_V_9_ce0,
        local_C_V_9_q0,
        local_C_V_13_address0,
        local_C_V_13_ce0,
        local_C_V_13_q0,
        local_C_V_2_address0,
        local_C_V_2_ce0,
        local_C_V_2_q0,
        local_C_V_6_address0,
        local_C_V_6_ce0,
        local_C_V_6_q0,
        local_C_V_10_address0,
        local_C_V_10_ce0,
        local_C_V_10_q0,
        local_C_V_14_address0,
        local_C_V_14_ce0,
        local_C_V_14_q0,
        local_C_V_3_address0,
        local_C_V_3_ce0,
        local_C_V_3_q0,
        local_C_V_7_address0,
        local_C_V_7_ce0,
        local_C_V_7_q0,
        local_C_V_11_address0,
        local_C_V_11_ce0,
        local_C_V_11_q0,
        local_C_V_15_address0,
        local_C_V_15_ce0,
        local_C_V_15_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [256:0] fifo_C_out_din;
input   fifo_C_out_full_n;
output   fifo_C_out_write;
input  [27:0] num_v_out;
output  [12:0] local_C_V_address0;
output   local_C_V_ce0;
input  [63:0] local_C_V_q0;
output  [12:0] local_C_V_4_address0;
output   local_C_V_4_ce0;
input  [63:0] local_C_V_4_q0;
output  [12:0] local_C_V_8_address0;
output   local_C_V_8_ce0;
input  [63:0] local_C_V_8_q0;
output  [12:0] local_C_V_12_address0;
output   local_C_V_12_ce0;
input  [63:0] local_C_V_12_q0;
output  [12:0] local_C_V_1_address0;
output   local_C_V_1_ce0;
input  [63:0] local_C_V_1_q0;
output  [12:0] local_C_V_5_address0;
output   local_C_V_5_ce0;
input  [63:0] local_C_V_5_q0;
output  [12:0] local_C_V_9_address0;
output   local_C_V_9_ce0;
input  [63:0] local_C_V_9_q0;
output  [12:0] local_C_V_13_address0;
output   local_C_V_13_ce0;
input  [63:0] local_C_V_13_q0;
output  [12:0] local_C_V_2_address0;
output   local_C_V_2_ce0;
input  [63:0] local_C_V_2_q0;
output  [12:0] local_C_V_6_address0;
output   local_C_V_6_ce0;
input  [63:0] local_C_V_6_q0;
output  [12:0] local_C_V_10_address0;
output   local_C_V_10_ce0;
input  [63:0] local_C_V_10_q0;
output  [12:0] local_C_V_14_address0;
output   local_C_V_14_ce0;
input  [63:0] local_C_V_14_q0;
output  [12:0] local_C_V_3_address0;
output   local_C_V_3_ce0;
input  [63:0] local_C_V_3_q0;
output  [12:0] local_C_V_7_address0;
output   local_C_V_7_ce0;
input  [63:0] local_C_V_7_q0;
output  [12:0] local_C_V_11_address0;
output   local_C_V_11_ce0;
input  [63:0] local_C_V_11_q0;
output  [12:0] local_C_V_15_address0;
output   local_C_V_15_ce0;
input  [63:0] local_C_V_15_q0;

reg ap_idle;
reg fifo_C_out_write;
reg local_C_V_ce0;
reg local_C_V_4_ce0;
reg local_C_V_8_ce0;
reg local_C_V_12_ce0;
reg local_C_V_1_ce0;
reg local_C_V_5_ce0;
reg local_C_V_9_ce0;
reg local_C_V_13_ce0;
reg local_C_V_2_ce0;
reg local_C_V_6_ce0;
reg local_C_V_10_ce0;
reg local_C_V_14_ce0;
reg local_C_V_3_ce0;
reg local_C_V_7_ce0;
reg local_C_V_11_ce0;
reg local_C_V_15_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln278_fu_338_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_C_out_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] u_64_V_fu_392_p6;
reg   [63:0] u_64_V_reg_630;
wire   [63:0] u_64_V_1_fu_406_p6;
reg   [63:0] u_64_V_1_reg_635;
wire   [63:0] u_64_V_2_fu_420_p6;
reg   [63:0] u_64_V_2_reg_640;
wire   [63:0] u_64_V_3_fu_434_p6;
reg   [63:0] u_64_V_3_reg_645;
wire   [63:0] idxprom1431_fu_360_p1;
reg   [26:0] i_fu_92;
wire   [26:0] i_2_fu_344_p2;
wire    ap_loop_init;
reg   [26:0] ap_sig_allocacmp_i_1;
reg   [31:0] c_idx_fu_96;
wire   [31:0] c_idx_1_fu_508_p3;
reg    ap_block_pp0_stage0_01001;
wire   [27:0] zext_ln278_fu_334_p1;
wire   [12:0] tmp_4_fu_350_p4;
wire   [1:0] trunc_ln283_fu_388_p1;
wire   [0:0] icmp_ln287_1_fu_454_p2;
wire   [0:0] icmp_ln287_fu_448_p2;
wire   [0:0] or_ln287_fu_468_p2;
wire   [31:0] select_ln287_fu_460_p3;
wire   [0:0] icmp_ln287_3_fu_488_p2;
wire   [0:0] icmp_ln287_2_fu_482_p2;
wire   [0:0] empty_57_fu_502_p2;
wire   [31:0] empty_fu_494_p3;
wire   [31:0] select_ln287_1_fu_474_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

PEG_Cmtx_mux_42_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_42_64_1_1_U73(
    .din0(local_C_V_q0),
    .din1(local_C_V_4_q0),
    .din2(local_C_V_8_q0),
    .din3(local_C_V_12_q0),
    .din4(trunc_ln283_fu_388_p1),
    .dout(u_64_V_fu_392_p6)
);

PEG_Cmtx_mux_42_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_42_64_1_1_U74(
    .din0(local_C_V_1_q0),
    .din1(local_C_V_5_q0),
    .din2(local_C_V_9_q0),
    .din3(local_C_V_13_q0),
    .din4(trunc_ln283_fu_388_p1),
    .dout(u_64_V_1_fu_406_p6)
);

PEG_Cmtx_mux_42_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_42_64_1_1_U75(
    .din0(local_C_V_2_q0),
    .din1(local_C_V_6_q0),
    .din2(local_C_V_10_q0),
    .din3(local_C_V_14_q0),
    .din4(trunc_ln283_fu_388_p1),
    .dout(u_64_V_2_fu_420_p6)
);

PEG_Cmtx_mux_42_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_42_64_1_1_U76(
    .din0(local_C_V_3_q0),
    .din1(local_C_V_7_q0),
    .din2(local_C_V_11_q0),
    .din3(local_C_V_15_q0),
    .din4(trunc_ln283_fu_388_p1),
    .dout(u_64_V_3_fu_434_p6)
);

PEG_Cmtx_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c_idx_fu_96 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            c_idx_fu_96 <= c_idx_1_fu_508_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln278_fu_338_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_92 <= i_2_fu_344_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_92 <= 27'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        u_64_V_1_reg_635 <= u_64_V_1_fu_406_p6;
        u_64_V_2_reg_640 <= u_64_V_2_fu_420_p6;
        u_64_V_3_reg_645 <= u_64_V_3_fu_434_p6;
        u_64_V_reg_630 <= u_64_V_fu_392_p6;
    end
end

always @ (*) begin
    if (((icmp_ln278_fu_338_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 27'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        fifo_C_out_blk_n = fifo_C_out_full_n;
    end else begin
        fifo_C_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        fifo_C_out_write = 1'b1;
    end else begin
        fifo_C_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_10_ce0 = 1'b1;
    end else begin
        local_C_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_11_ce0 = 1'b1;
    end else begin
        local_C_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_12_ce0 = 1'b1;
    end else begin
        local_C_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_13_ce0 = 1'b1;
    end else begin
        local_C_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_14_ce0 = 1'b1;
    end else begin
        local_C_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_15_ce0 = 1'b1;
    end else begin
        local_C_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_1_ce0 = 1'b1;
    end else begin
        local_C_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_2_ce0 = 1'b1;
    end else begin
        local_C_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_3_ce0 = 1'b1;
    end else begin
        local_C_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_4_ce0 = 1'b1;
    end else begin
        local_C_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_5_ce0 = 1'b1;
    end else begin
        local_C_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_6_ce0 = 1'b1;
    end else begin
        local_C_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_7_ce0 = 1'b1;
    end else begin
        local_C_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_8_ce0 = 1'b1;
    end else begin
        local_C_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_9_ce0 = 1'b1;
    end else begin
        local_C_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_ce0 = 1'b1;
    end else begin
        local_C_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((fifo_C_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((fifo_C_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((fifo_C_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (fifo_C_out_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign c_idx_1_fu_508_p3 = ((empty_57_fu_502_p2[0:0] == 1'b1) ? empty_fu_494_p3 : select_ln287_1_fu_474_p3);

assign empty_57_fu_502_p2 = (icmp_ln287_3_fu_488_p2 | icmp_ln287_2_fu_482_p2);

assign empty_fu_494_p3 = ((icmp_ln287_3_fu_488_p2[0:0] == 1'b1) ? 32'd0 : 32'd1);

assign fifo_C_out_din = {{{{{{{{1'd0}, {u_64_V_3_reg_645}}}, {u_64_V_2_reg_640}}}, {u_64_V_1_reg_635}}}, {u_64_V_reg_630}};

assign i_2_fu_344_p2 = (ap_sig_allocacmp_i_1 + 27'd1);

assign icmp_ln278_fu_338_p2 = (($signed(zext_ln278_fu_334_p1) < $signed(num_v_out)) ? 1'b1 : 1'b0);

assign icmp_ln287_1_fu_454_p2 = ((c_idx_fu_96 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln287_2_fu_482_p2 = ((c_idx_fu_96 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln287_3_fu_488_p2 = ((c_idx_fu_96 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln287_fu_448_p2 = ((c_idx_fu_96 == 32'd0) ? 1'b1 : 1'b0);

assign idxprom1431_fu_360_p1 = tmp_4_fu_350_p4;

assign local_C_V_10_address0 = idxprom1431_fu_360_p1;

assign local_C_V_11_address0 = idxprom1431_fu_360_p1;

assign local_C_V_12_address0 = idxprom1431_fu_360_p1;

assign local_C_V_13_address0 = idxprom1431_fu_360_p1;

assign local_C_V_14_address0 = idxprom1431_fu_360_p1;

assign local_C_V_15_address0 = idxprom1431_fu_360_p1;

assign local_C_V_1_address0 = idxprom1431_fu_360_p1;

assign local_C_V_2_address0 = idxprom1431_fu_360_p1;

assign local_C_V_3_address0 = idxprom1431_fu_360_p1;

assign local_C_V_4_address0 = idxprom1431_fu_360_p1;

assign local_C_V_5_address0 = idxprom1431_fu_360_p1;

assign local_C_V_6_address0 = idxprom1431_fu_360_p1;

assign local_C_V_7_address0 = idxprom1431_fu_360_p1;

assign local_C_V_8_address0 = idxprom1431_fu_360_p1;

assign local_C_V_9_address0 = idxprom1431_fu_360_p1;

assign local_C_V_address0 = idxprom1431_fu_360_p1;

assign or_ln287_fu_468_p2 = (icmp_ln287_fu_448_p2 | icmp_ln287_1_fu_454_p2);

assign select_ln287_1_fu_474_p3 = ((or_ln287_fu_468_p2[0:0] == 1'b1) ? select_ln287_fu_460_p3 : c_idx_fu_96);

assign select_ln287_fu_460_p3 = ((icmp_ln287_1_fu_454_p2[0:0] == 1'b1) ? 32'd3 : 32'd2);

assign tmp_4_fu_350_p4 = {{ap_sig_allocacmp_i_1[14:2]}};

assign trunc_ln283_fu_388_p1 = c_idx_fu_96[1:0];

assign zext_ln278_fu_334_p1 = ap_sig_allocacmp_i_1;

endmodule //PEG_Cmtx_PEG_Cmtx_Pipeline_write_C_outer
