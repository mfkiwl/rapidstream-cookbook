// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

(* CORE_GENERATION_INFO="left_div_left_div,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=4.300000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.959000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2384,HLS_SYN_LUT=1580,HLS_VERSION=2022_2}" *)

module left_div (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rp_time,
        M,
        qr_s_dout,
        qr_s_empty_n,
        qr_s_read,
        qr_peek_dout,
        qr_peek_empty_n,
        qr_peek_read,
        qdiagA_s_dout,
        qdiagA_s_empty_n,
        qdiagA_s_read,
        qdiagA_peek_dout,
        qdiagA_peek_empty_n,
        qdiagA_peek_read,
        qz_0_din,
        qz_0_full_n,
        qz_0_write,
        qz_1_din,
        qz_1_full_n,
        qz_1_write,
        qr_m6_din,
        qr_m6_full_n,
        qr_m6_write,
        qrmem_din,
        qrmem_full_n,
        qrmem_write,
        q_gbc_s_dout,
        q_gbc_s_empty_n,
        q_gbc_s_read,
        q_gbc_peek_dout,
        q_gbc_peek_empty_n,
        q_gbc_peek_read,
        q_gbc_out_din,
        q_gbc_out_full_n,
        q_gbc_out_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] rp_time;
input  [31:0] M;
input  [512:0] qr_s_dout;
input   qr_s_empty_n;
output   qr_s_read;
input  [512:0] qr_peek_dout;
input   qr_peek_empty_n;
output   qr_peek_read;
input  [512:0] qdiagA_s_dout;
input   qdiagA_s_empty_n;
output   qdiagA_s_read;
input  [512:0] qdiagA_peek_dout;
input   qdiagA_peek_empty_n;
output   qdiagA_peek_read;
output  [512:0] qz_0_din;
input   qz_0_full_n;
output   qz_0_write;
output  [512:0] qz_1_din;
input   qz_1_full_n;
output   qz_1_write;
output  [512:0] qr_m6_din;
input   qr_m6_full_n;
output   qr_m6_write;
output  [512:0] qrmem_din;
input   qrmem_full_n;
output   qrmem_write;
input  [1:0] q_gbc_s_dout;
input   q_gbc_s_empty_n;
output   q_gbc_s_read;
input  [1:0] q_gbc_peek_dout;
input   q_gbc_peek_empty_n;
output   q_gbc_peek_read;
output  [1:0] q_gbc_out_din;
input   q_gbc_out_full_n;
output   q_gbc_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg qr_s_read;
reg qdiagA_s_read;
reg qz_0_write;
reg qz_1_write;
reg qr_m6_write;
reg qrmem_write;
reg q_gbc_s_read;
reg q_gbc_out_write;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    q_gbc_s_blk_n;
wire    ap_CS_fsm_state6;
reg   [0:0] inst_q_idx_V_reg_346;
reg    q_gbc_out_blk_n;
reg   [28:0] inst_len_reg_330;
wire   [31:0] empty_30_fu_240_p2;
reg   [31:0] empty_30_reg_335;
wire   [0:0] inst_q_idx_V_fu_279_p1;
wire    ap_CS_fsm_state3;
wire    grp_left_div_Pipeline_cc_fu_205_ap_start;
wire    grp_left_div_Pipeline_cc_fu_205_ap_done;
wire    grp_left_div_Pipeline_cc_fu_205_ap_idle;
wire    grp_left_div_Pipeline_cc_fu_205_ap_ready;
wire   [512:0] grp_left_div_Pipeline_cc_fu_205_qz_0_din;
wire    grp_left_div_Pipeline_cc_fu_205_qz_0_write;
wire   [512:0] grp_left_div_Pipeline_cc_fu_205_qz_1_din;
wire    grp_left_div_Pipeline_cc_fu_205_qz_1_write;
wire   [512:0] grp_left_div_Pipeline_cc_fu_205_qr_m6_din;
wire    grp_left_div_Pipeline_cc_fu_205_qr_m6_write;
wire    grp_left_div_Pipeline_cc_fu_205_qr_s_read;
wire    grp_left_div_Pipeline_cc_fu_205_qdiagA_s_read;
wire   [512:0] grp_left_div_Pipeline_cc_fu_205_qrmem_din;
wire    grp_left_div_Pipeline_cc_fu_205_qrmem_write;
reg    grp_left_div_Pipeline_cc_fu_205_ap_start_reg;
wire    ap_CS_fsm_state4;
reg   [31:0] rp_fu_84;
wire   [31:0] rp_3_fu_301_p2;
reg    ap_block_state6;
wire    ap_CS_fsm_state2;
reg   [0:0] term_flag_fu_88;
wire   [0:0] term_flag_2_fu_283_p1;
wire   [31:0] add_ln457_fu_224_p2;
wire   [0:0] icmp_ln460_fu_268_p2;
wire   [0:0] xor_ln460_fu_262_p2;
wire   [0:0] and_ln460_fu_273_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_left_div_Pipeline_cc_fu_205_ap_start_reg = 1'b0;
end

left_div_left_div_Pipeline_cc grp_left_div_Pipeline_cc_fu_205(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_left_div_Pipeline_cc_fu_205_ap_start),
    .ap_done(grp_left_div_Pipeline_cc_fu_205_ap_done),
    .ap_idle(grp_left_div_Pipeline_cc_fu_205_ap_idle),
    .ap_ready(grp_left_div_Pipeline_cc_fu_205_ap_ready),
    .qz_0_din(grp_left_div_Pipeline_cc_fu_205_qz_0_din),
    .qz_0_full_n(qz_0_full_n),
    .qz_0_write(grp_left_div_Pipeline_cc_fu_205_qz_0_write),
    .qz_1_din(grp_left_div_Pipeline_cc_fu_205_qz_1_din),
    .qz_1_full_n(qz_1_full_n),
    .qz_1_write(grp_left_div_Pipeline_cc_fu_205_qz_1_write),
    .sext_ln457(inst_len_reg_330),
    .qr_m6_din(grp_left_div_Pipeline_cc_fu_205_qr_m6_din),
    .qr_m6_full_n(qr_m6_full_n),
    .qr_m6_write(grp_left_div_Pipeline_cc_fu_205_qr_m6_write),
    .qr_s_dout(qr_s_dout),
    .qr_s_empty_n(qr_s_empty_n),
    .qr_s_read(grp_left_div_Pipeline_cc_fu_205_qr_s_read),
    .qdiagA_s_dout(qdiagA_s_dout),
    .qdiagA_s_empty_n(qdiagA_s_empty_n),
    .qdiagA_s_read(grp_left_div_Pipeline_cc_fu_205_qdiagA_s_read),
    .inst_q_idx_V(inst_q_idx_V_reg_346),
    .qrmem_din(grp_left_div_Pipeline_cc_fu_205_qrmem_din),
    .qrmem_full_n(qrmem_full_n),
    .qrmem_write(grp_left_div_Pipeline_cc_fu_205_qrmem_write),
    .M(M)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_left_div_Pipeline_cc_fu_205_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_left_div_Pipeline_cc_fu_205_ap_start_reg <= 1'b1;
        end else if ((grp_left_div_Pipeline_cc_fu_205_ap_ready == 1'b1)) begin
            grp_left_div_Pipeline_cc_fu_205_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        rp_fu_84 <= 32'd4294967294;
    end else if ((~(((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_out_full_n == 1'b0)) | ((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_s_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6))) begin
        rp_fu_84 <= rp_3_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        term_flag_fu_88 <= 1'd0;
    end else if ((~(((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_out_full_n == 1'b0)) | ((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_s_empty_n == 1'b0))) & (inst_q_idx_V_reg_346 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        term_flag_fu_88 <= term_flag_2_fu_283_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_30_reg_335[31 : 1] <= empty_30_fu_240_p2[31 : 1];
        inst_len_reg_330 <= {{add_ln457_fu_224_p2[31:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        inst_q_idx_V_reg_346 <= inst_q_idx_V_fu_279_p1;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_left_div_Pipeline_cc_fu_205_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_out_full_n == 1'b0)) | ((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_s_empty_n == 1'b0)))) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == and_ln460_fu_273_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == and_ln460_fu_273_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((inst_q_idx_V_reg_346 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        q_gbc_out_blk_n = q_gbc_out_full_n;
    end else begin
        q_gbc_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_out_full_n == 1'b0)) | ((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_s_empty_n == 1'b0))) & (inst_q_idx_V_reg_346 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        q_gbc_out_write = 1'b1;
    end else begin
        q_gbc_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((inst_q_idx_V_reg_346 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        q_gbc_s_blk_n = q_gbc_s_empty_n;
    end else begin
        q_gbc_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_out_full_n == 1'b0)) | ((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_s_empty_n == 1'b0))) & (inst_q_idx_V_reg_346 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        q_gbc_s_read = 1'b1;
    end else begin
        q_gbc_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        qdiagA_s_read = grp_left_div_Pipeline_cc_fu_205_qdiagA_s_read;
    end else begin
        qdiagA_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        qr_m6_write = grp_left_div_Pipeline_cc_fu_205_qr_m6_write;
    end else begin
        qr_m6_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        qr_s_read = grp_left_div_Pipeline_cc_fu_205_qr_s_read;
    end else begin
        qr_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        qrmem_write = grp_left_div_Pipeline_cc_fu_205_qrmem_write;
    end else begin
        qrmem_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        qz_0_write = grp_left_div_Pipeline_cc_fu_205_qz_0_write;
    end else begin
        qz_0_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        qz_1_write = grp_left_div_Pipeline_cc_fu_205_qz_1_write;
    end else begin
        qz_1_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == and_ln460_fu_273_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_left_div_Pipeline_cc_fu_205_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if ((~(((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_out_full_n == 1'b0)) | ((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_s_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln457_fu_224_p2 = (M + 32'd7);

assign and_ln460_fu_273_p2 = (xor_ln460_fu_262_p2 & icmp_ln460_fu_268_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state6 = (((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_out_full_n == 1'b0)) | ((inst_q_idx_V_reg_346 == 1'd1) & (q_gbc_s_empty_n == 1'b0)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_30_fu_240_p2 = rp_time << 32'd1;

assign grp_left_div_Pipeline_cc_fu_205_ap_start = grp_left_div_Pipeline_cc_fu_205_ap_start_reg;

assign icmp_ln460_fu_268_p2 = (($signed(rp_fu_84) < $signed(empty_30_reg_335)) ? 1'b1 : 1'b0);

assign inst_q_idx_V_fu_279_p1 = rp_fu_84[0:0];

assign q_gbc_out_din = {{1'd0}, {term_flag_2_fu_283_p1}};

assign q_gbc_peek_read = 1'b0;

assign qdiagA_peek_read = 1'b0;

assign qr_m6_din = grp_left_div_Pipeline_cc_fu_205_qr_m6_din;

assign qr_peek_read = 1'b0;

assign qrmem_din = grp_left_div_Pipeline_cc_fu_205_qrmem_din;

assign qz_0_din = grp_left_div_Pipeline_cc_fu_205_qz_0_din;

assign qz_1_din = grp_left_div_Pipeline_cc_fu_205_qz_1_din;

assign rp_3_fu_301_p2 = (rp_fu_84 + 32'd1);

assign term_flag_2_fu_283_p1 = q_gbc_s_dout[0:0];

assign xor_ln460_fu_262_p2 = (term_flag_fu_88 ^ 1'd1);

always @ (posedge ap_clk) begin
    empty_30_reg_335[0] <= 1'b0;
end

endmodule //left_div
