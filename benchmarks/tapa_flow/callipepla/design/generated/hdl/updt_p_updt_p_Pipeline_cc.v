// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module updt_p_updt_p_Pipeline_cc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        qout_din,
        qout_full_n,
        qout_write,
        sext_ln434,
        qz_s_dout,
        qz_s_empty_n,
        qz_s_read,
        qp_s_dout,
        qp_s_empty_n,
        qp_s_read,
        qp2m3_din,
        qp2m3_full_n,
        qp2m3_write,
        rzndo_1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [512:0] qout_din;
input   qout_full_n;
output   qout_write;
input  [28:0] sext_ln434;
input  [512:0] qz_s_dout;
input   qz_s_empty_n;
output   qz_s_read;
input  [512:0] qp_s_dout;
input   qp_s_empty_n;
output   qp_s_read;
output  [512:0] qp2m3_din;
input   qp2m3_full_n;
output   qp2m3_write;
input  [63:0] rzndo_1;

reg ap_idle;
reg qout_write;
reg qz_s_read;
reg qp_s_read;
reg qp2m3_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
reg   [0:0] and_ln448_1_reg_554;
reg   [0:0] and_ln448_1_reg_554_pp0_iter11_reg;
reg    ap_block_state13_pp0_stage0_iter12;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln446_fu_222_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    qout_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] and_ln448_1_fu_234_p2;
reg   [0:0] and_ln448_1_reg_554_pp0_iter1_reg;
reg   [0:0] and_ln448_1_reg_554_pp0_iter2_reg;
reg   [0:0] and_ln448_1_reg_554_pp0_iter3_reg;
reg   [0:0] and_ln448_1_reg_554_pp0_iter4_reg;
reg   [0:0] and_ln448_1_reg_554_pp0_iter5_reg;
reg   [0:0] and_ln448_1_reg_554_pp0_iter6_reg;
reg   [0:0] and_ln448_1_reg_554_pp0_iter7_reg;
reg   [0:0] and_ln448_1_reg_554_pp0_iter8_reg;
reg   [0:0] and_ln448_1_reg_554_pp0_iter9_reg;
reg   [0:0] and_ln448_1_reg_554_pp0_iter10_reg;
wire   [63:0] trunc_ln78_fu_244_p1;
reg   [63:0] trunc_ln78_reg_558;
reg   [63:0] trunc_ln78_reg_558_pp0_iter1_reg;
reg   [63:0] trunc_ln78_reg_558_pp0_iter2_reg;
reg   [63:0] trunc_ln78_reg_558_pp0_iter3_reg;
reg   [63:0] trunc_ln78_reg_558_pp0_iter4_reg;
reg   [63:0] trunc_ln78_reg_558_pp0_iter5_reg;
reg   [63:0] trunc_ln78_reg_558_pp0_iter6_reg;
reg   [63:0] tmp_3_reg_563;
reg   [63:0] tmp_3_reg_563_pp0_iter1_reg;
reg   [63:0] tmp_3_reg_563_pp0_iter2_reg;
reg   [63:0] tmp_3_reg_563_pp0_iter3_reg;
reg   [63:0] tmp_3_reg_563_pp0_iter4_reg;
reg   [63:0] tmp_3_reg_563_pp0_iter5_reg;
reg   [63:0] tmp_3_reg_563_pp0_iter6_reg;
reg   [63:0] tmp_5_reg_568;
reg   [63:0] tmp_5_reg_568_pp0_iter1_reg;
reg   [63:0] tmp_5_reg_568_pp0_iter2_reg;
reg   [63:0] tmp_5_reg_568_pp0_iter3_reg;
reg   [63:0] tmp_5_reg_568_pp0_iter4_reg;
reg   [63:0] tmp_5_reg_568_pp0_iter5_reg;
reg   [63:0] tmp_5_reg_568_pp0_iter6_reg;
reg   [63:0] tmp_7_reg_573;
reg   [63:0] tmp_7_reg_573_pp0_iter1_reg;
reg   [63:0] tmp_7_reg_573_pp0_iter2_reg;
reg   [63:0] tmp_7_reg_573_pp0_iter3_reg;
reg   [63:0] tmp_7_reg_573_pp0_iter4_reg;
reg   [63:0] tmp_7_reg_573_pp0_iter5_reg;
reg   [63:0] tmp_7_reg_573_pp0_iter6_reg;
reg   [63:0] tmp_8_reg_578;
reg   [63:0] tmp_8_reg_578_pp0_iter1_reg;
reg   [63:0] tmp_8_reg_578_pp0_iter2_reg;
reg   [63:0] tmp_8_reg_578_pp0_iter3_reg;
reg   [63:0] tmp_8_reg_578_pp0_iter4_reg;
reg   [63:0] tmp_8_reg_578_pp0_iter5_reg;
reg   [63:0] tmp_8_reg_578_pp0_iter6_reg;
reg   [63:0] trunc_ln1_reg_583;
reg   [63:0] trunc_ln1_reg_583_pp0_iter1_reg;
reg   [63:0] trunc_ln1_reg_583_pp0_iter2_reg;
reg   [63:0] trunc_ln1_reg_583_pp0_iter3_reg;
reg   [63:0] trunc_ln1_reg_583_pp0_iter4_reg;
reg   [63:0] trunc_ln1_reg_583_pp0_iter5_reg;
reg   [63:0] trunc_ln1_reg_583_pp0_iter6_reg;
reg   [63:0] trunc_ln78_2_reg_588;
reg   [63:0] trunc_ln78_2_reg_588_pp0_iter1_reg;
reg   [63:0] trunc_ln78_2_reg_588_pp0_iter2_reg;
reg   [63:0] trunc_ln78_2_reg_588_pp0_iter3_reg;
reg   [63:0] trunc_ln78_2_reg_588_pp0_iter4_reg;
reg   [63:0] trunc_ln78_2_reg_588_pp0_iter5_reg;
reg   [63:0] trunc_ln78_2_reg_588_pp0_iter6_reg;
reg   [63:0] tmp_6_reg_593;
reg   [63:0] tmp_6_reg_593_pp0_iter1_reg;
reg   [63:0] tmp_6_reg_593_pp0_iter2_reg;
reg   [63:0] tmp_6_reg_593_pp0_iter3_reg;
reg   [63:0] tmp_6_reg_593_pp0_iter4_reg;
reg   [63:0] tmp_6_reg_593_pp0_iter5_reg;
reg   [63:0] tmp_6_reg_593_pp0_iter6_reg;
wire   [63:0] trunc_ln78_1_fu_322_p1;
reg   [63:0] trunc_ln78_1_reg_598;
reg   [63:0] tmp_9_reg_603;
reg   [63:0] tmp_4_reg_608;
reg   [63:0] tmp_10_reg_613;
reg   [63:0] tmp_11_reg_618;
reg   [63:0] trunc_ln78_3_reg_623;
reg   [63:0] trunc_ln78_4_reg_628;
reg   [63:0] tmp_s_reg_633;
wire   [63:0] grp_fu_178_p2;
reg   [63:0] mul_i_reg_678;
wire   [63:0] grp_fu_182_p2;
reg   [63:0] mul_i_1_reg_683;
wire   [63:0] grp_fu_186_p2;
reg   [63:0] mul_i_2_reg_688;
wire   [63:0] grp_fu_190_p2;
reg   [63:0] mul_i_3_reg_693;
wire   [63:0] grp_fu_194_p2;
reg   [63:0] mul_i_4_reg_698;
wire   [63:0] grp_fu_198_p2;
reg   [63:0] mul_i_5_reg_703;
wire   [63:0] grp_fu_202_p2;
reg   [63:0] mul_i_6_reg_708;
wire   [63:0] grp_fu_206_p2;
reg   [63:0] mul_i_7_reg_713;
wire   [63:0] grp_fu_146_p2;
reg   [63:0] add_i_reg_758;
wire   [63:0] grp_fu_150_p2;
reg   [63:0] add_i_1_reg_763;
wire   [63:0] grp_fu_154_p2;
reg   [63:0] add_i_2_reg_768;
wire   [63:0] grp_fu_158_p2;
reg   [63:0] add_i_3_reg_773;
wire   [63:0] grp_fu_162_p2;
reg   [63:0] add_i_4_reg_778;
wire   [63:0] grp_fu_166_p2;
reg   [63:0] add_i_5_reg_783;
wire   [63:0] grp_fu_170_p2;
reg   [63:0] add_i_6_reg_788;
wire   [63:0] grp_fu_174_p2;
reg   [63:0] add_i_7_reg_793;
reg   [31:0] i_fu_80;
wire   [31:0] i_2_fu_409_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_i_1;
wire   [0:0] tmp_nbreadreq_fu_96_p3;
wire   [0:0] tmp_1_nbreadreq_fu_104_p3;
reg    ap_block_pp0_stage0_01001;
wire   [63:0] grp_fu_146_p0;
wire   [63:0] grp_fu_150_p0;
wire   [63:0] grp_fu_154_p0;
wire   [63:0] grp_fu_158_p0;
wire   [63:0] grp_fu_162_p0;
wire   [63:0] grp_fu_166_p0;
wire   [63:0] grp_fu_170_p0;
wire   [63:0] grp_fu_174_p0;
wire   [63:0] grp_fu_178_p1;
wire   [63:0] grp_fu_182_p1;
wire   [63:0] grp_fu_186_p1;
wire   [63:0] grp_fu_190_p1;
wire   [63:0] grp_fu_194_p1;
wire   [63:0] grp_fu_198_p1;
wire   [63:0] grp_fu_202_p1;
wire   [63:0] grp_fu_206_p1;
wire  signed [31:0] sext_ln434_cast_fu_210_p1;
wire   [0:0] and_ln448_fu_228_p1;
wire   [0:0] and_ln448_fu_228_p2;
wire   [511:0] trunc_ln146_fu_396_p1;
wire   [63:0] bitcast_ln151_7_fu_505_p1;
wire   [63:0] bitcast_ln151_6_fu_502_p1;
wire   [63:0] bitcast_ln151_5_fu_499_p1;
wire   [63:0] bitcast_ln151_4_fu_496_p1;
wire   [63:0] bitcast_ln151_3_fu_493_p1;
wire   [63:0] bitcast_ln151_2_fu_490_p1;
wire   [63:0] bitcast_ln151_1_fu_487_p1;
wire   [63:0] bitcast_ln151_fu_484_p1;
reg    grp_fu_146_ce;
reg    grp_fu_150_ce;
reg    grp_fu_154_ce;
reg    grp_fu_158_ce;
reg    grp_fu_162_ce;
reg    grp_fu_166_ce;
reg    grp_fu_170_ce;
reg    grp_fu_174_ce;
reg    grp_fu_178_ce;
reg    grp_fu_182_ce;
reg    grp_fu_186_ce;
reg    grp_fu_190_ce;
reg    grp_fu_194_ce;
reg    grp_fu_198_ce;
reg    grp_fu_202_ce;
reg    grp_fu_206_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_798;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_done_reg = 1'b0;
end

updt_p_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_146_p0),
    .din1(mul_i_reg_678),
    .ce(grp_fu_146_ce),
    .dout(grp_fu_146_p2)
);

updt_p_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_150_p0),
    .din1(mul_i_1_reg_683),
    .ce(grp_fu_150_ce),
    .dout(grp_fu_150_p2)
);

updt_p_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_154_p0),
    .din1(mul_i_2_reg_688),
    .ce(grp_fu_154_ce),
    .dout(grp_fu_154_p2)
);

updt_p_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_158_p0),
    .din1(mul_i_3_reg_693),
    .ce(grp_fu_158_ce),
    .dout(grp_fu_158_p2)
);

updt_p_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_162_p0),
    .din1(mul_i_4_reg_698),
    .ce(grp_fu_162_ce),
    .dout(grp_fu_162_p2)
);

updt_p_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_166_p0),
    .din1(mul_i_5_reg_703),
    .ce(grp_fu_166_ce),
    .dout(grp_fu_166_p2)
);

updt_p_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_170_p0),
    .din1(mul_i_6_reg_708),
    .ce(grp_fu_170_ce),
    .dout(grp_fu_170_p2)
);

updt_p_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_174_p0),
    .din1(mul_i_7_reg_713),
    .ce(grp_fu_174_ce),
    .dout(grp_fu_174_p2)
);

updt_p_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rzndo_1),
    .din1(grp_fu_178_p1),
    .ce(grp_fu_178_ce),
    .dout(grp_fu_178_p2)
);

updt_p_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rzndo_1),
    .din1(grp_fu_182_p1),
    .ce(grp_fu_182_ce),
    .dout(grp_fu_182_p2)
);

updt_p_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rzndo_1),
    .din1(grp_fu_186_p1),
    .ce(grp_fu_186_ce),
    .dout(grp_fu_186_p2)
);

updt_p_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rzndo_1),
    .din1(grp_fu_190_p1),
    .ce(grp_fu_190_ce),
    .dout(grp_fu_190_p2)
);

updt_p_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rzndo_1),
    .din1(grp_fu_194_p1),
    .ce(grp_fu_194_ce),
    .dout(grp_fu_194_p2)
);

updt_p_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rzndo_1),
    .din1(grp_fu_198_p1),
    .ce(grp_fu_198_ce),
    .dout(grp_fu_198_p2)
);

updt_p_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rzndo_1),
    .din1(grp_fu_202_p1),
    .ce(grp_fu_202_ce),
    .dout(grp_fu_202_p2)
);

updt_p_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rzndo_1),
    .din1(grp_fu_206_p1),
    .ce(grp_fu_206_ce),
    .dout(grp_fu_206_p2)
);

updt_p_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((1'b1 == ap_condition_798)) begin
            i_fu_80 <= i_2_fu_409_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_80 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln448_1_reg_554_pp0_iter10_reg))) begin
        add_i_1_reg_763 <= grp_fu_150_p2;
        add_i_2_reg_768 <= grp_fu_154_p2;
        add_i_3_reg_773 <= grp_fu_158_p2;
        add_i_4_reg_778 <= grp_fu_162_p2;
        add_i_5_reg_783 <= grp_fu_166_p2;
        add_i_6_reg_788 <= grp_fu_170_p2;
        add_i_7_reg_793 <= grp_fu_174_p2;
        add_i_reg_758 <= grp_fu_146_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln446_fu_222_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln448_1_reg_554 <= and_ln448_1_fu_234_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln448_1_reg_554_pp0_iter10_reg <= and_ln448_1_reg_554_pp0_iter9_reg;
        and_ln448_1_reg_554_pp0_iter11_reg <= and_ln448_1_reg_554_pp0_iter10_reg;
        and_ln448_1_reg_554_pp0_iter2_reg <= and_ln448_1_reg_554_pp0_iter1_reg;
        and_ln448_1_reg_554_pp0_iter3_reg <= and_ln448_1_reg_554_pp0_iter2_reg;
        and_ln448_1_reg_554_pp0_iter4_reg <= and_ln448_1_reg_554_pp0_iter3_reg;
        and_ln448_1_reg_554_pp0_iter5_reg <= and_ln448_1_reg_554_pp0_iter4_reg;
        and_ln448_1_reg_554_pp0_iter6_reg <= and_ln448_1_reg_554_pp0_iter5_reg;
        and_ln448_1_reg_554_pp0_iter7_reg <= and_ln448_1_reg_554_pp0_iter6_reg;
        and_ln448_1_reg_554_pp0_iter8_reg <= and_ln448_1_reg_554_pp0_iter7_reg;
        and_ln448_1_reg_554_pp0_iter9_reg <= and_ln448_1_reg_554_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        tmp_3_reg_563_pp0_iter2_reg <= tmp_3_reg_563_pp0_iter1_reg;
        tmp_3_reg_563_pp0_iter3_reg <= tmp_3_reg_563_pp0_iter2_reg;
        tmp_3_reg_563_pp0_iter4_reg <= tmp_3_reg_563_pp0_iter3_reg;
        tmp_3_reg_563_pp0_iter5_reg <= tmp_3_reg_563_pp0_iter4_reg;
        tmp_3_reg_563_pp0_iter6_reg <= tmp_3_reg_563_pp0_iter5_reg;
        tmp_5_reg_568_pp0_iter2_reg <= tmp_5_reg_568_pp0_iter1_reg;
        tmp_5_reg_568_pp0_iter3_reg <= tmp_5_reg_568_pp0_iter2_reg;
        tmp_5_reg_568_pp0_iter4_reg <= tmp_5_reg_568_pp0_iter3_reg;
        tmp_5_reg_568_pp0_iter5_reg <= tmp_5_reg_568_pp0_iter4_reg;
        tmp_5_reg_568_pp0_iter6_reg <= tmp_5_reg_568_pp0_iter5_reg;
        tmp_6_reg_593_pp0_iter2_reg <= tmp_6_reg_593_pp0_iter1_reg;
        tmp_6_reg_593_pp0_iter3_reg <= tmp_6_reg_593_pp0_iter2_reg;
        tmp_6_reg_593_pp0_iter4_reg <= tmp_6_reg_593_pp0_iter3_reg;
        tmp_6_reg_593_pp0_iter5_reg <= tmp_6_reg_593_pp0_iter4_reg;
        tmp_6_reg_593_pp0_iter6_reg <= tmp_6_reg_593_pp0_iter5_reg;
        tmp_7_reg_573_pp0_iter2_reg <= tmp_7_reg_573_pp0_iter1_reg;
        tmp_7_reg_573_pp0_iter3_reg <= tmp_7_reg_573_pp0_iter2_reg;
        tmp_7_reg_573_pp0_iter4_reg <= tmp_7_reg_573_pp0_iter3_reg;
        tmp_7_reg_573_pp0_iter5_reg <= tmp_7_reg_573_pp0_iter4_reg;
        tmp_7_reg_573_pp0_iter6_reg <= tmp_7_reg_573_pp0_iter5_reg;
        tmp_8_reg_578_pp0_iter2_reg <= tmp_8_reg_578_pp0_iter1_reg;
        tmp_8_reg_578_pp0_iter3_reg <= tmp_8_reg_578_pp0_iter2_reg;
        tmp_8_reg_578_pp0_iter4_reg <= tmp_8_reg_578_pp0_iter3_reg;
        tmp_8_reg_578_pp0_iter5_reg <= tmp_8_reg_578_pp0_iter4_reg;
        tmp_8_reg_578_pp0_iter6_reg <= tmp_8_reg_578_pp0_iter5_reg;
        trunc_ln1_reg_583_pp0_iter2_reg <= trunc_ln1_reg_583_pp0_iter1_reg;
        trunc_ln1_reg_583_pp0_iter3_reg <= trunc_ln1_reg_583_pp0_iter2_reg;
        trunc_ln1_reg_583_pp0_iter4_reg <= trunc_ln1_reg_583_pp0_iter3_reg;
        trunc_ln1_reg_583_pp0_iter5_reg <= trunc_ln1_reg_583_pp0_iter4_reg;
        trunc_ln1_reg_583_pp0_iter6_reg <= trunc_ln1_reg_583_pp0_iter5_reg;
        trunc_ln78_2_reg_588_pp0_iter2_reg <= trunc_ln78_2_reg_588_pp0_iter1_reg;
        trunc_ln78_2_reg_588_pp0_iter3_reg <= trunc_ln78_2_reg_588_pp0_iter2_reg;
        trunc_ln78_2_reg_588_pp0_iter4_reg <= trunc_ln78_2_reg_588_pp0_iter3_reg;
        trunc_ln78_2_reg_588_pp0_iter5_reg <= trunc_ln78_2_reg_588_pp0_iter4_reg;
        trunc_ln78_2_reg_588_pp0_iter6_reg <= trunc_ln78_2_reg_588_pp0_iter5_reg;
        trunc_ln78_reg_558_pp0_iter2_reg <= trunc_ln78_reg_558_pp0_iter1_reg;
        trunc_ln78_reg_558_pp0_iter3_reg <= trunc_ln78_reg_558_pp0_iter2_reg;
        trunc_ln78_reg_558_pp0_iter4_reg <= trunc_ln78_reg_558_pp0_iter3_reg;
        trunc_ln78_reg_558_pp0_iter5_reg <= trunc_ln78_reg_558_pp0_iter4_reg;
        trunc_ln78_reg_558_pp0_iter6_reg <= trunc_ln78_reg_558_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln448_1_reg_554_pp0_iter1_reg <= and_ln448_1_reg_554;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        tmp_3_reg_563_pp0_iter1_reg <= tmp_3_reg_563;
        tmp_5_reg_568_pp0_iter1_reg <= tmp_5_reg_568;
        tmp_6_reg_593_pp0_iter1_reg <= tmp_6_reg_593;
        tmp_7_reg_573_pp0_iter1_reg <= tmp_7_reg_573;
        tmp_8_reg_578_pp0_iter1_reg <= tmp_8_reg_578;
        trunc_ln1_reg_583_pp0_iter1_reg <= trunc_ln1_reg_583;
        trunc_ln78_2_reg_588_pp0_iter1_reg <= trunc_ln78_2_reg_588;
        trunc_ln78_reg_558_pp0_iter1_reg <= trunc_ln78_reg_558;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln448_1_reg_554_pp0_iter5_reg))) begin
        mul_i_1_reg_683 <= grp_fu_182_p2;
        mul_i_2_reg_688 <= grp_fu_186_p2;
        mul_i_3_reg_693 <= grp_fu_190_p2;
        mul_i_4_reg_698 <= grp_fu_194_p2;
        mul_i_5_reg_703 <= grp_fu_198_p2;
        mul_i_6_reg_708 <= grp_fu_202_p2;
        mul_i_7_reg_713 <= grp_fu_206_p2;
        mul_i_reg_678 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln446_fu_222_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln448_1_fu_234_p2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_10_reg_613 <= {{qp_s_dout[319:256]}};
        tmp_11_reg_618 <= {{qp_s_dout[383:320]}};
        tmp_3_reg_563 <= {{qz_s_dout[191:128]}};
        tmp_4_reg_608 <= {{qp_s_dout[255:192]}};
        tmp_5_reg_568 <= {{qz_s_dout[255:192]}};
        tmp_6_reg_593 <= {{qz_s_dout[127:64]}};
        tmp_7_reg_573 <= {{qz_s_dout[319:256]}};
        tmp_8_reg_578 <= {{qz_s_dout[383:320]}};
        tmp_9_reg_603 <= {{qp_s_dout[191:128]}};
        tmp_s_reg_633 <= {{qp_s_dout[127:64]}};
        trunc_ln1_reg_583 <= {{qz_s_dout[447:384]}};
        trunc_ln78_1_reg_598 <= trunc_ln78_1_fu_322_p1;
        trunc_ln78_2_reg_588 <= {{qz_s_dout[511:448]}};
        trunc_ln78_3_reg_623 <= {{qp_s_dout[447:384]}};
        trunc_ln78_4_reg_628 <= {{qp_s_dout[511:448]}};
        trunc_ln78_reg_558 <= trunc_ln78_fu_244_p1;
    end
end

always @ (*) begin
    if (((icmp_ln446_fu_222_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_80;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_146_ce = 1'b1;
    end else begin
        grp_fu_146_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_150_ce = 1'b1;
    end else begin
        grp_fu_150_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_154_ce = 1'b1;
    end else begin
        grp_fu_154_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_158_ce = 1'b1;
    end else begin
        grp_fu_158_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_162_ce = 1'b1;
    end else begin
        grp_fu_162_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_166_ce = 1'b1;
    end else begin
        grp_fu_166_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_170_ce = 1'b1;
    end else begin
        grp_fu_170_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_174_ce = 1'b1;
    end else begin
        grp_fu_174_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_178_ce = 1'b1;
    end else begin
        grp_fu_178_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_182_ce = 1'b1;
    end else begin
        grp_fu_182_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_186_ce = 1'b1;
    end else begin
        grp_fu_186_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_190_ce = 1'b1;
    end else begin
        grp_fu_190_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_194_ce = 1'b1;
    end else begin
        grp_fu_194_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_198_ce = 1'b1;
    end else begin
        grp_fu_198_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_202_ce = 1'b1;
    end else begin
        grp_fu_202_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_206_ce = 1'b1;
    end else begin
        grp_fu_206_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln448_1_reg_554_pp0_iter11_reg) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        qout_blk_n = qout_full_n;
    end else begin
        qout_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln448_1_reg_554_pp0_iter11_reg) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        qout_write = 1'b1;
    end else begin
        qout_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln446_fu_222_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln448_1_fu_234_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (qp2m3_full_n == 1'b1))) begin
        qp2m3_write = 1'b1;
    end else begin
        qp2m3_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln446_fu_222_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln448_1_fu_234_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (qp_s_empty_n == 1'b1))) begin
        qp_s_read = 1'b1;
    end else begin
        qp_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln446_fu_222_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln448_1_fu_234_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (qz_s_empty_n == 1'b1))) begin
        qz_s_read = 1'b1;
    end else begin
        qz_s_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln448_1_fu_234_p2 = (tmp_nbreadreq_fu_96_p3 & and_ln448_fu_228_p2);

assign and_ln448_fu_228_p1 = qp2m3_full_n;

assign and_ln448_fu_228_p2 = (tmp_1_nbreadreq_fu_104_p3 & and_ln448_fu_228_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'd1 == and_ln448_1_reg_554_pp0_iter11_reg) & (qout_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'd1 == and_ln448_1_reg_554_pp0_iter11_reg) & (qout_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'd1 == and_ln448_1_reg_554_pp0_iter11_reg) & (qout_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage0_iter12 = ((1'd1 == and_ln448_1_reg_554_pp0_iter11_reg) & (qout_full_n == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_798 = ((icmp_ln446_fu_222_p2 == 1'd1) & (1'd1 == and_ln448_1_fu_234_p2) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln151_1_fu_487_p1 = add_i_1_reg_763;

assign bitcast_ln151_2_fu_490_p1 = add_i_2_reg_768;

assign bitcast_ln151_3_fu_493_p1 = add_i_3_reg_773;

assign bitcast_ln151_4_fu_496_p1 = add_i_4_reg_778;

assign bitcast_ln151_5_fu_499_p1 = add_i_5_reg_783;

assign bitcast_ln151_6_fu_502_p1 = add_i_6_reg_788;

assign bitcast_ln151_7_fu_505_p1 = add_i_7_reg_793;

assign bitcast_ln151_fu_484_p1 = add_i_reg_758;

assign grp_fu_146_p0 = trunc_ln78_reg_558_pp0_iter6_reg;

assign grp_fu_150_p0 = tmp_6_reg_593_pp0_iter6_reg;

assign grp_fu_154_p0 = tmp_3_reg_563_pp0_iter6_reg;

assign grp_fu_158_p0 = tmp_5_reg_568_pp0_iter6_reg;

assign grp_fu_162_p0 = tmp_7_reg_573_pp0_iter6_reg;

assign grp_fu_166_p0 = tmp_8_reg_578_pp0_iter6_reg;

assign grp_fu_170_p0 = trunc_ln1_reg_583_pp0_iter6_reg;

assign grp_fu_174_p0 = trunc_ln78_2_reg_588_pp0_iter6_reg;

assign grp_fu_178_p1 = trunc_ln78_1_reg_598;

assign grp_fu_182_p1 = tmp_s_reg_633;

assign grp_fu_186_p1 = tmp_9_reg_603;

assign grp_fu_190_p1 = tmp_4_reg_608;

assign grp_fu_194_p1 = tmp_10_reg_613;

assign grp_fu_198_p1 = tmp_11_reg_618;

assign grp_fu_202_p1 = trunc_ln78_3_reg_623;

assign grp_fu_206_p1 = trunc_ln78_4_reg_628;

assign i_2_fu_409_p2 = (ap_sig_allocacmp_i_1 + 32'd1);

assign icmp_ln446_fu_222_p2 = (($signed(ap_sig_allocacmp_i_1) < $signed(sext_ln434_cast_fu_210_p1)) ? 1'b1 : 1'b0);

assign qout_din = {{{{{{{{{{{{{{{{1'd0}, {bitcast_ln151_7_fu_505_p1}}}, {bitcast_ln151_6_fu_502_p1}}}, {bitcast_ln151_5_fu_499_p1}}}, {bitcast_ln151_4_fu_496_p1}}}, {bitcast_ln151_3_fu_493_p1}}}, {bitcast_ln151_2_fu_490_p1}}}, {bitcast_ln151_1_fu_487_p1}}}, {bitcast_ln151_fu_484_p1}};

assign qp2m3_din = {{1'd0}, {trunc_ln146_fu_396_p1}};

assign sext_ln434_cast_fu_210_p1 = $signed(sext_ln434);

assign tmp_1_nbreadreq_fu_104_p3 = qp_s_empty_n;

assign tmp_nbreadreq_fu_96_p3 = qz_s_empty_n;

assign trunc_ln146_fu_396_p1 = qp_s_dout[511:0];

assign trunc_ln78_1_fu_322_p1 = qp_s_dout[63:0];

assign trunc_ln78_fu_244_p1 = qz_s_dout[63:0];

endmodule //updt_p_updt_p_Pipeline_cc
