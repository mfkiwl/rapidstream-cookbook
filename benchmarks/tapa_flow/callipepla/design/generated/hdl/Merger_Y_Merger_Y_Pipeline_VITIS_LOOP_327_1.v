// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module Merger_Y_Merger_Y_Pipeline_VITIS_LOOP_327_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_out_0_din,
        fifo_out_0_full_n,
        fifo_out_0_write,
        fifo_out_1_din,
        fifo_out_1_full_n,
        fifo_out_1_write,
        fifo_in_0_dout,
        fifo_in_0_empty_n,
        fifo_in_0_read,
        fifo_in_1_dout,
        fifo_in_1_empty_n,
        fifo_in_1_read,
        fifo_in_2_dout,
        fifo_in_2_empty_n,
        fifo_in_2_read,
        fifo_in_3_dout,
        fifo_in_3_empty_n,
        fifo_in_3_read,
        fifo_in_4_dout,
        fifo_in_4_empty_n,
        fifo_in_4_read,
        fifo_in_5_dout,
        fifo_in_5_empty_n,
        fifo_in_5_read,
        fifo_in_6_dout,
        fifo_in_6_empty_n,
        fifo_in_6_read,
        fifo_in_7_dout,
        fifo_in_7_empty_n,
        fifo_in_7_read
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [512:0] fifo_out_0_din;
input   fifo_out_0_full_n;
output   fifo_out_0_write;
output  [512:0] fifo_out_1_din;
input   fifo_out_1_full_n;
output   fifo_out_1_write;
input  [64:0] fifo_in_0_dout;
input   fifo_in_0_empty_n;
output   fifo_in_0_read;
input  [64:0] fifo_in_1_dout;
input   fifo_in_1_empty_n;
output   fifo_in_1_read;
input  [64:0] fifo_in_2_dout;
input   fifo_in_2_empty_n;
output   fifo_in_2_read;
input  [64:0] fifo_in_3_dout;
input   fifo_in_3_empty_n;
output   fifo_in_3_read;
input  [64:0] fifo_in_4_dout;
input   fifo_in_4_empty_n;
output   fifo_in_4_read;
input  [64:0] fifo_in_5_dout;
input   fifo_in_5_empty_n;
output   fifo_in_5_read;
input  [64:0] fifo_in_6_dout;
input   fifo_in_6_empty_n;
output   fifo_in_6_read;
input  [64:0] fifo_in_7_dout;
input   fifo_in_7_empty_n;
output   fifo_in_7_read;

reg ap_done;
reg ap_idle;
reg fifo_out_0_write;
reg fifo_out_1_write;
reg fifo_in_0_read;
reg fifo_in_1_read;
reg fifo_in_2_read;
reg fifo_in_3_read;
reg fifo_in_4_read;
reg fifo_in_5_read;
reg fifo_in_6_read;
reg fifo_in_7_read;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] tmp_2_nbreadreq_fu_66_p3;
wire   [0:0] tmp_3_nbreadreq_fu_74_p3;
wire   [0:0] tmp_4_nbreadreq_fu_82_p3;
wire   [0:0] tmp_5_nbreadreq_fu_90_p3;
wire   [0:0] tmp_6_nbreadreq_fu_98_p3;
wire   [0:0] tmp_7_nbreadreq_fu_106_p3;
wire   [0:0] tmp_8_nbreadreq_fu_114_p3;
wire   [0:0] tmp_9_nbreadreq_fu_122_p3;
wire    ap_CS_fsm_state2;
wire   [0:0] and_ln331_7_fu_240_p2;
wire   [512:0] p_0_fu_310_p10;
wire   [0:0] and_ln331_fu_192_p0;
wire   [0:0] and_ln331_fu_192_p1;
wire   [0:0] and_ln331_1_fu_198_p2;
wire   [0:0] and_ln331_2_fu_204_p2;
wire   [0:0] and_ln331_fu_192_p2;
wire   [0:0] and_ln331_5_fu_222_p2;
wire   [0:0] and_ln331_6_fu_228_p2;
wire   [0:0] and_ln331_4_fu_216_p2;
wire   [0:0] and_ln331_8_fu_234_p2;
wire   [0:0] and_ln331_3_fu_210_p2;
wire   [63:0] trunc_ln146_6_fu_306_p1;
wire   [63:0] trunc_ln146_5_fu_302_p1;
wire   [63:0] trunc_ln146_4_fu_298_p1;
wire   [63:0] trunc_ln146_3_fu_294_p1;
wire   [63:0] trunc_ln146_2_fu_290_p1;
wire   [63:0] trunc_ln146_1_fu_286_p1;
wire   [63:0] trunc_ln146_fu_282_p1;
wire   [63:0] elem_val_fu_250_p1;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln331_7_fu_240_p2) & (fifo_in_0_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_in_0_read = 1'b1;
    end else begin
        fifo_in_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln331_7_fu_240_p2) & (fifo_in_1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_in_1_read = 1'b1;
    end else begin
        fifo_in_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln331_7_fu_240_p2) & (fifo_in_2_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_in_2_read = 1'b1;
    end else begin
        fifo_in_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln331_7_fu_240_p2) & (fifo_in_3_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_in_3_read = 1'b1;
    end else begin
        fifo_in_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln331_7_fu_240_p2) & (fifo_in_4_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_in_4_read = 1'b1;
    end else begin
        fifo_in_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln331_7_fu_240_p2) & (fifo_in_5_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_in_5_read = 1'b1;
    end else begin
        fifo_in_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln331_7_fu_240_p2) & (fifo_in_6_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_in_6_read = 1'b1;
    end else begin
        fifo_in_6_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln331_7_fu_240_p2) & (fifo_in_7_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_in_7_read = 1'b1;
    end else begin
        fifo_in_7_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln331_7_fu_240_p2) & (fifo_out_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_out_0_write = 1'b1;
    end else begin
        fifo_out_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln331_7_fu_240_p2) & (fifo_out_1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        fifo_out_1_write = 1'b1;
    end else begin
        fifo_out_1_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln331_1_fu_198_p2 = (tmp_4_nbreadreq_fu_82_p3 & tmp_3_nbreadreq_fu_74_p3);

assign and_ln331_2_fu_204_p2 = (tmp_2_nbreadreq_fu_66_p3 & and_ln331_1_fu_198_p2);

assign and_ln331_3_fu_210_p2 = (and_ln331_fu_192_p2 & and_ln331_2_fu_204_p2);

assign and_ln331_4_fu_216_p2 = (tmp_6_nbreadreq_fu_98_p3 & tmp_5_nbreadreq_fu_90_p3);

assign and_ln331_5_fu_222_p2 = (tmp_9_nbreadreq_fu_122_p3 & tmp_8_nbreadreq_fu_114_p3);

assign and_ln331_6_fu_228_p2 = (tmp_7_nbreadreq_fu_106_p3 & and_ln331_5_fu_222_p2);

assign and_ln331_7_fu_240_p2 = (and_ln331_8_fu_234_p2 & and_ln331_3_fu_210_p2);

assign and_ln331_8_fu_234_p2 = (and_ln331_6_fu_228_p2 & and_ln331_4_fu_216_p2);

assign and_ln331_fu_192_p0 = fifo_out_0_full_n;

assign and_ln331_fu_192_p1 = fifo_out_1_full_n;

assign and_ln331_fu_192_p2 = (and_ln331_fu_192_p1 & and_ln331_fu_192_p0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_ready = 1'b0;

assign elem_val_fu_250_p1 = fifo_in_0_dout[63:0];

assign fifo_out_0_din = p_0_fu_310_p10;

assign fifo_out_1_din = p_0_fu_310_p10;

assign p_0_fu_310_p10 = {{{{{{{{{{{{{{{{1'd0}, {trunc_ln146_6_fu_306_p1}}}, {trunc_ln146_5_fu_302_p1}}}, {trunc_ln146_4_fu_298_p1}}}, {trunc_ln146_3_fu_294_p1}}}, {trunc_ln146_2_fu_290_p1}}}, {trunc_ln146_1_fu_286_p1}}}, {trunc_ln146_fu_282_p1}}}, {elem_val_fu_250_p1}};

assign tmp_2_nbreadreq_fu_66_p3 = fifo_in_0_empty_n;

assign tmp_3_nbreadreq_fu_74_p3 = fifo_in_1_empty_n;

assign tmp_4_nbreadreq_fu_82_p3 = fifo_in_2_empty_n;

assign tmp_5_nbreadreq_fu_90_p3 = fifo_in_3_empty_n;

assign tmp_6_nbreadreq_fu_98_p3 = fifo_in_4_empty_n;

assign tmp_7_nbreadreq_fu_106_p3 = fifo_in_5_empty_n;

assign tmp_8_nbreadreq_fu_114_p3 = fifo_in_6_empty_n;

assign tmp_9_nbreadreq_fu_122_p3 = fifo_in_7_empty_n;

assign trunc_ln146_1_fu_286_p1 = fifo_in_2_dout[63:0];

assign trunc_ln146_2_fu_290_p1 = fifo_in_3_dout[63:0];

assign trunc_ln146_3_fu_294_p1 = fifo_in_4_dout[63:0];

assign trunc_ln146_4_fu_298_p1 = fifo_in_5_dout[63:0];

assign trunc_ln146_5_fu_302_p1 = fifo_in_6_dout[63:0];

assign trunc_ln146_6_fu_306_p1 = fifo_in_7_dout[63:0];

assign trunc_ln146_fu_282_p1 = fifo_in_1_dout[63:0];

endmodule //Merger_Y_Merger_Y_Pipeline_VITIS_LOOP_327_1
