// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module ctrl_X_ctrl_X_Pipeline_qq (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln386,
        q_oldx_din,
        q_oldx_full_n,
        q_oldx_write,
        qm_din_0_dout,
        qm_din_0_empty_n,
        qm_din_0_read,
        trunc_ln,
        qm_dout_0_din,
        qm_dout_0_full_n,
        qm_dout_0_write,
        q_newx_s_dout,
        q_newx_s_empty_n,
        q_newx_s_read,
        trunc_ln151_1,
        qm_dout_1_din,
        qm_dout_1_full_n,
        qm_dout_1_write,
        qm_din_1_dout,
        qm_din_1_empty_n,
        qm_din_1_read
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [28:0] sext_ln386;
output  [512:0] q_oldx_din;
input   q_oldx_full_n;
output   q_oldx_write;
input  [512:0] qm_din_0_dout;
input   qm_din_0_empty_n;
output   qm_din_0_read;
input  [0:0] trunc_ln;
output  [512:0] qm_dout_0_din;
input   qm_dout_0_full_n;
output   qm_dout_0_write;
input  [512:0] q_newx_s_dout;
input   q_newx_s_empty_n;
output   q_newx_s_read;
input  [0:0] trunc_ln151_1;
output  [512:0] qm_dout_1_din;
input   qm_dout_1_full_n;
output   qm_dout_1_write;
input  [512:0] qm_din_1_dout;
input   qm_din_1_empty_n;
output   qm_din_1_read;

reg ap_idle;
reg q_oldx_write;
reg qm_din_0_read;
reg qm_dout_0_write;
reg q_newx_s_read;
reg qm_dout_1_write;
reg qm_din_1_read;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln181_fu_222_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [0:0] trunc_ln151_1_read_read_fu_74_p2;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] trunc_ln_read_reg_345;
reg   [0:0] icmp_ln181_reg_349;
reg   [0:0] ap_phi_mux_empty_17_phi_fu_182_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_empty_17_reg_179;
reg   [0:0] ap_phi_mux_empty_phi_fu_193_p4;
wire   [0:0] tmp_2_nbreadreq_fu_136_p3;
wire   [0:0] ap_phi_reg_pp0_iter1_empty_reg_190;
wire   [0:0] tmp_1_nbreadreq_fu_144_p3;
reg   [575:0] ap_phi_mux_p_in_phi_fu_204_p4;
wire   [575:0] tmp_6_fu_281_p4;
wire   [575:0] ap_phi_reg_pp0_iter1_p_in_reg_201;
wire   [0:0] and_ln190_fu_263_p2;
wire   [575:0] tmp_5_fu_304_p4;
reg   [31:0] i_fu_70;
wire   [31:0] i_3_fu_252_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_i_2;
wire    ap_block_pp0_stage0;
wire   [0:0] and_ln184_fu_228_p2;
wire   [0:0] tmp_s_nbreadreq_fu_92_p3;
wire   [512:0] p_1_fu_242_p3;
wire    ap_block_pp0_stage0_01001;
wire   [0:0] qm_din_0_read_nbread_fu_160_p2_0;
wire   [0:0] qm_din_1_read_nbread_fu_166_p2_0;
wire  signed [31:0] sext_ln386_cast_fu_210_p1;
wire   [511:0] trunc_ln146_fu_238_p1;
wire   [0:0] and_ln190_fu_263_p1;
wire   [511:0] trunc_ln78_1_fu_277_p1;
wire   [511:0] trunc_ln78_fu_300_p1;
wire   [511:0] tmp_7_fu_315_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_298;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

ctrl_X_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((1'b1 == ap_condition_298)) begin
            i_fu_70 <= i_3_fu_252_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_70 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln181_reg_349 <= icmp_ln181_fu_222_p2;
    end
end

always @ (*) begin
    if (((icmp_ln181_fu_222_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln181_fu_222_p2 == 1'd1)) begin
        if ((trunc_ln151_1_read_read_fu_74_p2 == 1'd1)) begin
            ap_phi_mux_empty_17_phi_fu_182_p4 = qm_dout_1_full_n;
        end else if ((trunc_ln151_1_read_read_fu_74_p2 == 1'd0)) begin
            ap_phi_mux_empty_17_phi_fu_182_p4 = qm_dout_0_full_n;
        end else begin
            ap_phi_mux_empty_17_phi_fu_182_p4 = ap_phi_reg_pp0_iter0_empty_17_reg_179;
        end
    end else begin
        ap_phi_mux_empty_17_phi_fu_182_p4 = ap_phi_reg_pp0_iter0_empty_17_reg_179;
    end
end

always @ (*) begin
    if ((icmp_ln181_reg_349 == 1'd1)) begin
        if ((trunc_ln_read_reg_345 == 1'd1)) begin
            ap_phi_mux_empty_phi_fu_193_p4 = tmp_1_nbreadreq_fu_144_p3;
        end else if ((trunc_ln_read_reg_345 == 1'd0)) begin
            ap_phi_mux_empty_phi_fu_193_p4 = tmp_2_nbreadreq_fu_136_p3;
        end else begin
            ap_phi_mux_empty_phi_fu_193_p4 = ap_phi_reg_pp0_iter1_empty_reg_190;
        end
    end else begin
        ap_phi_mux_empty_phi_fu_193_p4 = ap_phi_reg_pp0_iter1_empty_reg_190;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln190_fu_263_p2) & (icmp_ln181_reg_349 == 1'd1))) begin
        if ((trunc_ln_read_reg_345 == 1'd1)) begin
            ap_phi_mux_p_in_phi_fu_204_p4 = tmp_5_fu_304_p4;
        end else if ((trunc_ln_read_reg_345 == 1'd0)) begin
            ap_phi_mux_p_in_phi_fu_204_p4 = tmp_6_fu_281_p4;
        end else begin
            ap_phi_mux_p_in_phi_fu_204_p4 = ap_phi_reg_pp0_iter1_p_in_reg_201;
        end
    end else begin
        ap_phi_mux_p_in_phi_fu_204_p4 = ap_phi_reg_pp0_iter1_p_in_reg_201;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_70;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln184_fu_228_p2) & (q_newx_s_empty_n == 1'b1) & (icmp_ln181_fu_222_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_newx_s_read = 1'b1;
    end else begin
        q_newx_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln190_fu_263_p2) & (q_oldx_full_n == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_oldx_write = 1'b1;
    end else begin
        q_oldx_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln190_fu_263_p2) & (icmp_ln181_reg_349 == 1'd1) & (trunc_ln_read_reg_345 == 1'd0) & (qm_din_0_empty_n == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qm_din_0_read = 1'b1;
    end else begin
        qm_din_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln190_fu_263_p2) & (icmp_ln181_reg_349 == 1'd1) & (trunc_ln_read_reg_345 == 1'd1) & (qm_din_1_empty_n == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qm_din_1_read = 1'b1;
    end else begin
        qm_din_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln184_fu_228_p2) & (trunc_ln151_1_read_read_fu_74_p2 == 1'd0) & (qm_dout_0_full_n == 1'b1) & (icmp_ln181_fu_222_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qm_dout_0_write = 1'b1;
    end else begin
        qm_dout_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln184_fu_228_p2) & (trunc_ln151_1_read_read_fu_74_p2 == 1'd1) & (qm_dout_1_full_n == 1'b1) & (icmp_ln181_fu_222_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qm_dout_1_write = 1'b1;
    end else begin
        qm_dout_1_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln184_fu_228_p2 = (tmp_s_nbreadreq_fu_92_p3 & ap_phi_mux_empty_17_phi_fu_182_p4);

assign and_ln190_fu_263_p1 = q_oldx_full_n;

assign and_ln190_fu_263_p2 = (ap_phi_mux_empty_phi_fu_193_p4 & and_ln190_fu_263_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_298 = ((1'd1 == and_ln184_fu_228_p2) & (icmp_ln181_fu_222_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_empty_17_reg_179 = 'bx;

assign ap_phi_reg_pp0_iter1_empty_reg_190 = 'bx;

assign ap_phi_reg_pp0_iter1_p_in_reg_201 = 'bx;

assign i_3_fu_252_p2 = (ap_sig_allocacmp_i_2 + 32'd1);

assign icmp_ln181_fu_222_p2 = (($signed(ap_sig_allocacmp_i_2) < $signed(sext_ln386_cast_fu_210_p1)) ? 1'b1 : 1'b0);

assign p_1_fu_242_p3 = {{1'd0}, {trunc_ln146_fu_238_p1}};

assign q_oldx_din = {{1'd0}, {tmp_7_fu_315_p4}};

assign qm_din_0_read_nbread_fu_160_p2_0 = qm_din_0_empty_n;

assign qm_din_1_read_nbread_fu_166_p2_0 = qm_din_1_empty_n;

assign qm_dout_0_din = p_1_fu_242_p3;

assign qm_dout_1_din = p_1_fu_242_p3;

assign sext_ln386_cast_fu_210_p1 = $signed(sext_ln386);

assign tmp_1_nbreadreq_fu_144_p3 = qm_din_1_empty_n;

assign tmp_2_nbreadreq_fu_136_p3 = qm_din_0_empty_n;

assign tmp_5_fu_304_p4 = {{{trunc_ln78_fu_300_p1}, {63'd0}}, {qm_din_1_read_nbread_fu_166_p2_0}};

assign tmp_6_fu_281_p4 = {{{trunc_ln78_1_fu_277_p1}, {63'd0}}, {qm_din_0_read_nbread_fu_160_p2_0}};

assign tmp_7_fu_315_p4 = {{ap_phi_mux_p_in_phi_fu_204_p4[575:64]}};

assign tmp_s_nbreadreq_fu_92_p3 = q_newx_s_empty_n;

assign trunc_ln146_fu_238_p1 = q_newx_s_dout[511:0];

assign trunc_ln151_1_read_read_fu_74_p2 = trunc_ln151_1;

assign trunc_ln78_1_fu_277_p1 = qm_din_0_dout[511:0];

assign trunc_ln78_fu_300_p1 = qm_din_1_dout[511:0];

assign trunc_ln_read_reg_345 = trunc_ln;

endmodule //ctrl_X_ctrl_X_Pipeline_qq
