// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module ctrl_P_ctrl_P_Pipeline_q1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln381,
        q_dotp_din,
        q_dotp_full_n,
        q_dotp_write,
        qm_din_0_dout,
        qm_din_0_empty_n,
        qm_din_0_read,
        trunc_ln151_1,
        qm_din_1_dout,
        qm_din_1_empty_n,
        qm_din_1_read
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [28:0] sext_ln381;
output  [512:0] q_dotp_din;
input   q_dotp_full_n;
output   q_dotp_write;
input  [512:0] qm_din_0_dout;
input   qm_din_0_empty_n;
output   qm_din_0_read;
input  [0:0] trunc_ln151_1;
input  [512:0] qm_din_1_dout;
input   qm_din_1_empty_n;
output   qm_din_1_read;

reg ap_idle;
reg q_dotp_write;
reg qm_din_0_read;
reg qm_din_1_read;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln161_fu_153_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [0:0] ap_phi_mux_empty_phi_fu_124_p4;
wire   [0:0] tmp_9_nbreadreq_fu_78_p3;
wire   [0:0] ap_phi_reg_pp0_iter0_empty_reg_121;
wire   [0:0] trunc_ln151_1_read_read_fu_66_p2;
wire   [0:0] tmp_s_nbreadreq_fu_86_p3;
reg   [575:0] ap_phi_mux_p_in1_phi_fu_135_p4;
wire   [575:0] tmp_12_fu_177_p4;
wire   [575:0] ap_phi_reg_pp0_iter0_p_in1_reg_132;
wire   [0:0] and_ln164_fu_159_p2;
wire   [575:0] tmp_11_fu_200_p4;
reg   [31:0] i_1_fu_62;
wire   [31:0] i_3_fu_230_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_i;
wire   [0:0] qm_din_0_read_nbread_fu_102_p2_0;
wire   [0:0] qm_din_1_read_nbread_fu_108_p2_0;
wire  signed [31:0] sext_ln381_cast_fu_141_p1;
wire   [0:0] and_ln164_fu_159_p1;
wire   [511:0] trunc_ln78_2_fu_173_p1;
wire   [511:0] trunc_ln78_fu_196_p1;
wire   [511:0] tmp_13_fu_211_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

ctrl_P_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        if (((1'd1 == and_ln164_fu_159_p2) & (icmp_ln161_fu_153_p2 == 1'd1))) begin
            i_1_fu_62 <= i_3_fu_230_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_62 <= 32'd0;
        end
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln161_fu_153_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln161_fu_153_p2 == 1'd1)) begin
        if ((trunc_ln151_1_read_read_fu_66_p2 == 1'd1)) begin
            ap_phi_mux_empty_phi_fu_124_p4 = tmp_s_nbreadreq_fu_86_p3;
        end else if ((trunc_ln151_1_read_read_fu_66_p2 == 1'd0)) begin
            ap_phi_mux_empty_phi_fu_124_p4 = tmp_9_nbreadreq_fu_78_p3;
        end else begin
            ap_phi_mux_empty_phi_fu_124_p4 = ap_phi_reg_pp0_iter0_empty_reg_121;
        end
    end else begin
        ap_phi_mux_empty_phi_fu_124_p4 = ap_phi_reg_pp0_iter0_empty_reg_121;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln164_fu_159_p2) & (icmp_ln161_fu_153_p2 == 1'd1))) begin
        if ((trunc_ln151_1_read_read_fu_66_p2 == 1'd1)) begin
            ap_phi_mux_p_in1_phi_fu_135_p4 = tmp_11_fu_200_p4;
        end else if ((trunc_ln151_1_read_read_fu_66_p2 == 1'd0)) begin
            ap_phi_mux_p_in1_phi_fu_135_p4 = tmp_12_fu_177_p4;
        end else begin
            ap_phi_mux_p_in1_phi_fu_135_p4 = ap_phi_reg_pp0_iter0_p_in1_reg_132;
        end
    end else begin
        ap_phi_mux_p_in1_phi_fu_135_p4 = ap_phi_reg_pp0_iter0_p_in1_reg_132;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i = 32'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_62;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln164_fu_159_p2) & (q_dotp_full_n == 1'b1) & (icmp_ln161_fu_153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        q_dotp_write = 1'b1;
    end else begin
        q_dotp_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln151_1_read_read_fu_66_p2 == 1'd0) & (1'd1 == and_ln164_fu_159_p2) & (qm_din_0_empty_n == 1'b1) & (icmp_ln161_fu_153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        qm_din_0_read = 1'b1;
    end else begin
        qm_din_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln151_1_read_read_fu_66_p2 == 1'd1) & (1'd1 == and_ln164_fu_159_p2) & (qm_din_1_empty_n == 1'b1) & (icmp_ln161_fu_153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        qm_din_1_read = 1'b1;
    end else begin
        qm_din_1_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln164_fu_159_p1 = q_dotp_full_n;

assign and_ln164_fu_159_p2 = (ap_phi_mux_empty_phi_fu_124_p4 & and_ln164_fu_159_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_empty_reg_121 = 'bx;

assign ap_phi_reg_pp0_iter0_p_in1_reg_132 = 'bx;

assign i_3_fu_230_p2 = (ap_sig_allocacmp_i + 32'd1);

assign icmp_ln161_fu_153_p2 = (($signed(ap_sig_allocacmp_i) < $signed(sext_ln381_cast_fu_141_p1)) ? 1'b1 : 1'b0);

assign q_dotp_din = {{1'd0}, {tmp_13_fu_211_p4}};

assign qm_din_0_read_nbread_fu_102_p2_0 = qm_din_0_empty_n;

assign qm_din_1_read_nbread_fu_108_p2_0 = qm_din_1_empty_n;

assign sext_ln381_cast_fu_141_p1 = $signed(sext_ln381);

assign tmp_11_fu_200_p4 = {{{trunc_ln78_fu_196_p1}, {63'd0}}, {qm_din_1_read_nbread_fu_108_p2_0}};

assign tmp_12_fu_177_p4 = {{{trunc_ln78_2_fu_173_p1}, {63'd0}}, {qm_din_0_read_nbread_fu_102_p2_0}};

assign tmp_13_fu_211_p4 = {{ap_phi_mux_p_in1_phi_fu_135_p4[575:64]}};

assign tmp_9_nbreadreq_fu_78_p3 = qm_din_0_empty_n;

assign tmp_s_nbreadreq_fu_86_p3 = qm_din_1_empty_n;

assign trunc_ln151_1_read_read_fu_66_p2 = trunc_ln151_1;

assign trunc_ln78_2_fu_173_p1 = qm_din_0_dout[511:0];

assign trunc_ln78_fu_196_p1 = qm_din_1_dout[511:0];

endmodule //ctrl_P_ctrl_P_Pipeline_q1
