// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module kernel3_PE_wrapper_11_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_A_PE_11_152_dout,
        fifo_A_PE_11_152_num_data_valid,
        fifo_A_PE_11_152_fifo_cap,
        fifo_A_PE_11_152_empty_n,
        fifo_A_PE_11_152_read,
        fifo_A_PE_11_253_din,
        fifo_A_PE_11_253_num_data_valid,
        fifo_A_PE_11_253_fifo_cap,
        fifo_A_PE_11_253_full_n,
        fifo_A_PE_11_253_write,
        fifo_B_PE_11_182_dout,
        fifo_B_PE_11_182_num_data_valid,
        fifo_B_PE_11_182_fifo_cap,
        fifo_B_PE_11_182_empty_n,
        fifo_B_PE_11_182_read,
        fifo_B_PE_12_183_din,
        fifo_B_PE_12_183_num_data_valid,
        fifo_B_PE_12_183_fifo_cap,
        fifo_B_PE_12_183_full_n,
        fifo_B_PE_12_183_write,
        fifo_C_drain_PE_11_1109_din,
        fifo_C_drain_PE_11_1109_num_data_valid,
        fifo_C_drain_PE_11_1109_fifo_cap,
        fifo_C_drain_PE_11_1109_full_n,
        fifo_C_drain_PE_11_1109_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [255:0] fifo_A_PE_11_152_dout;
input  [1:0] fifo_A_PE_11_152_num_data_valid;
input  [1:0] fifo_A_PE_11_152_fifo_cap;
input   fifo_A_PE_11_152_empty_n;
output   fifo_A_PE_11_152_read;
output  [255:0] fifo_A_PE_11_253_din;
input  [1:0] fifo_A_PE_11_253_num_data_valid;
input  [1:0] fifo_A_PE_11_253_fifo_cap;
input   fifo_A_PE_11_253_full_n;
output   fifo_A_PE_11_253_write;
input  [255:0] fifo_B_PE_11_182_dout;
input  [1:0] fifo_B_PE_11_182_num_data_valid;
input  [1:0] fifo_B_PE_11_182_fifo_cap;
input   fifo_B_PE_11_182_empty_n;
output   fifo_B_PE_11_182_read;
output  [255:0] fifo_B_PE_12_183_din;
input  [1:0] fifo_B_PE_12_183_num_data_valid;
input  [1:0] fifo_B_PE_12_183_fifo_cap;
input   fifo_B_PE_12_183_full_n;
output   fifo_B_PE_12_183_write;
output  [31:0] fifo_C_drain_PE_11_1109_din;
input  [1:0] fifo_C_drain_PE_11_1109_num_data_valid;
input  [1:0] fifo_C_drain_PE_11_1109_fifo_cap;
input   fifo_C_drain_PE_11_1109_full_n;
output   fifo_C_drain_PE_11_1109_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_A_PE_11_152_read;
reg fifo_A_PE_11_253_write;
reg fifo_B_PE_11_182_read;
reg fifo_B_PE_12_183_write;
reg fifo_C_drain_PE_11_1109_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_PE_fu_22_ap_start;
wire    grp_PE_fu_22_ap_done;
wire    grp_PE_fu_22_ap_idle;
wire    grp_PE_fu_22_ap_ready;
wire    grp_PE_fu_22_fifo_A_PE_12_15513_read;
wire   [255:0] grp_PE_fu_22_fifo_A_PE_12_256_din;
wire    grp_PE_fu_22_fifo_A_PE_12_256_write;
wire    grp_PE_fu_22_fifo_B_PE_12_183_read;
wire   [255:0] grp_PE_fu_22_fifo_B_PE_13_184_din;
wire    grp_PE_fu_22_fifo_B_PE_13_184_write;
wire   [31:0] grp_PE_fu_22_fifo_C_drain_PE_12_1110_din;
wire    grp_PE_fu_22_fifo_C_drain_PE_12_1110_write;
reg    grp_PE_fu_22_ap_start_reg;
reg    ap_block_state1_ignore_call5;
wire    ap_CS_fsm_state2;
reg   [1:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 grp_PE_fu_22_ap_start_reg = 1'b0;
end

kernel3_PE grp_PE_fu_22(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_PE_fu_22_ap_start),
    .ap_done(grp_PE_fu_22_ap_done),
    .ap_idle(grp_PE_fu_22_ap_idle),
    .ap_ready(grp_PE_fu_22_ap_ready),
    .fifo_A_PE_12_15513_dout(fifo_A_PE_11_152_dout),
    .fifo_A_PE_12_15513_num_data_valid(2'd0),
    .fifo_A_PE_12_15513_fifo_cap(2'd0),
    .fifo_A_PE_12_15513_empty_n(fifo_A_PE_11_152_empty_n),
    .fifo_A_PE_12_15513_read(grp_PE_fu_22_fifo_A_PE_12_15513_read),
    .fifo_A_PE_12_256_din(grp_PE_fu_22_fifo_A_PE_12_256_din),
    .fifo_A_PE_12_256_num_data_valid(2'd0),
    .fifo_A_PE_12_256_fifo_cap(2'd0),
    .fifo_A_PE_12_256_full_n(fifo_A_PE_11_253_full_n),
    .fifo_A_PE_12_256_write(grp_PE_fu_22_fifo_A_PE_12_256_write),
    .fifo_B_PE_12_183_dout(fifo_B_PE_11_182_dout),
    .fifo_B_PE_12_183_num_data_valid(2'd0),
    .fifo_B_PE_12_183_fifo_cap(2'd0),
    .fifo_B_PE_12_183_empty_n(fifo_B_PE_11_182_empty_n),
    .fifo_B_PE_12_183_read(grp_PE_fu_22_fifo_B_PE_12_183_read),
    .fifo_B_PE_13_184_din(grp_PE_fu_22_fifo_B_PE_13_184_din),
    .fifo_B_PE_13_184_num_data_valid(2'd0),
    .fifo_B_PE_13_184_fifo_cap(2'd0),
    .fifo_B_PE_13_184_full_n(fifo_B_PE_12_183_full_n),
    .fifo_B_PE_13_184_write(grp_PE_fu_22_fifo_B_PE_13_184_write),
    .fifo_C_drain_PE_12_1110_din(grp_PE_fu_22_fifo_C_drain_PE_12_1110_din),
    .fifo_C_drain_PE_12_1110_num_data_valid(2'd0),
    .fifo_C_drain_PE_12_1110_fifo_cap(2'd0),
    .fifo_C_drain_PE_12_1110_full_n(fifo_C_drain_PE_11_1109_full_n),
    .fifo_C_drain_PE_12_1110_write(grp_PE_fu_22_fifo_C_drain_PE_12_1110_write)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_PE_fu_22_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_PE_fu_22_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_PE_fu_22_ap_start_reg <= 1'b1;
        end else if ((grp_PE_fu_22_ap_ready == 1'b1)) begin
            grp_PE_fu_22_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_PE_fu_22_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_PE_fu_22_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_PE_fu_22_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        fifo_A_PE_11_152_read = grp_PE_fu_22_fifo_A_PE_12_15513_read;
    end else begin
        fifo_A_PE_11_152_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        fifo_A_PE_11_253_write = grp_PE_fu_22_fifo_A_PE_12_256_write;
    end else begin
        fifo_A_PE_11_253_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        fifo_B_PE_11_182_read = grp_PE_fu_22_fifo_B_PE_12_183_read;
    end else begin
        fifo_B_PE_11_182_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        fifo_B_PE_12_183_write = grp_PE_fu_22_fifo_B_PE_13_184_write;
    end else begin
        fifo_B_PE_12_183_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        fifo_C_drain_PE_11_1109_write = grp_PE_fu_22_fifo_C_drain_PE_12_1110_write;
    end else begin
        fifo_C_drain_PE_11_1109_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_PE_fu_22_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call5 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign fifo_A_PE_11_253_din = grp_PE_fu_22_fifo_A_PE_12_256_din;

assign fifo_B_PE_12_183_din = grp_PE_fu_22_fifo_B_PE_13_184_din;

assign fifo_C_drain_PE_11_1109_din = grp_PE_fu_22_fifo_C_drain_PE_12_1110_din;

assign grp_PE_fu_22_ap_start = grp_PE_fu_22_ap_start_reg;

endmodule //kernel3_PE_wrapper_11_1
