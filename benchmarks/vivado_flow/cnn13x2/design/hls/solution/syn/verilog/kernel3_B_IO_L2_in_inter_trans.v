// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module kernel3_B_IO_L2_in_inter_trans (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_B_B_IO_L2_in_016_dout,
        fifo_B_B_IO_L2_in_016_num_data_valid,
        fifo_B_B_IO_L2_in_016_fifo_cap,
        fifo_B_B_IO_L2_in_016_empty_n,
        fifo_B_B_IO_L2_in_016_read,
        fifo_B_B_IO_L2_in_117_din,
        fifo_B_B_IO_L2_in_117_num_data_valid,
        fifo_B_B_IO_L2_in_117_fifo_cap,
        fifo_B_B_IO_L2_in_117_full_n,
        fifo_B_B_IO_L2_in_117_write,
        local_B_address1,
        local_B_ce1,
        local_B_we1,
        local_B_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [255:0] fifo_B_B_IO_L2_in_016_dout;
input  [1:0] fifo_B_B_IO_L2_in_016_num_data_valid;
input  [1:0] fifo_B_B_IO_L2_in_016_fifo_cap;
input   fifo_B_B_IO_L2_in_016_empty_n;
output   fifo_B_B_IO_L2_in_016_read;
output  [255:0] fifo_B_B_IO_L2_in_117_din;
input  [1:0] fifo_B_B_IO_L2_in_117_num_data_valid;
input  [1:0] fifo_B_B_IO_L2_in_117_fifo_cap;
input   fifo_B_B_IO_L2_in_117_full_n;
output   fifo_B_B_IO_L2_in_117_write;
output  [10:0] local_B_address1;
output   local_B_ce1;
output   local_B_we1;
output  [255:0] local_B_d1;

reg ap_idle;
reg fifo_B_B_IO_L2_in_016_read;
reg fifo_B_B_IO_L2_in_117_write;
reg local_B_ce1;
reg local_B_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln324_reg_393;
reg   [0:0] select_ln324_1_reg_405;
reg    ap_predicate_op63_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln324_fu_155_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_B_B_IO_L2_in_016_blk_n;
wire    ap_block_pp0_stage0;
reg    fifo_B_B_IO_L2_in_117_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1039_fu_176_p2;
reg   [0:0] icmp_ln1039_reg_397;
wire   [0:0] select_ln324_1_fu_194_p3;
reg   [0:0] select_ln324_1_reg_405_pp0_iter1_reg;
reg   [10:0] local_B_addr_reg_409;
reg   [255:0] fifo_data_reg_414;
reg    ap_condition_exit_pp0_iter1_stage0;
wire   [63:0] zext_ln333_1_fu_337_p1;
reg   [5:0] c5_V_fu_74;
wire   [5:0] add_ln840_82_fu_342_p2;
wire    ap_loop_init;
reg   [6:0] c4_V_fu_78;
wire   [6:0] select_ln1039_109_fu_319_p3;
reg   [12:0] indvar_flatten_fu_82;
wire   [12:0] select_ln1039_110_fu_216_p3;
reg   [12:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [1:0] c3_V_fu_86;
wire   [1:0] select_ln324_2_fu_202_p3;
reg   [1:0] ap_sig_allocacmp_c3_V_load;
reg   [12:0] indvar_flatten13_fu_90;
wire   [12:0] add_ln324_fu_161_p2;
reg   [12:0] ap_sig_allocacmp_indvar_flatten13_load;
reg    ap_block_pp0_stage0_01001;
wire   [1:0] c3_V_4_fu_170_p2;
wire   [0:0] cmp_i_i_mid1_fu_182_p2;
wire   [0:0] cmp_i_i3_fu_188_p2;
wire   [12:0] add_ln1039_fu_210_p2;
wire   [0:0] icmp_ln103911_fu_261_p2;
wire   [0:0] xor_ln324_fu_256_p2;
wire   [6:0] select_ln324_fu_249_p3;
wire   [6:0] add_ln840_fu_273_p2;
wire   [0:0] and_ln324_fu_267_p2;
wire   [0:0] or_ln1039_fu_283_p2;
wire   [5:0] trunc_ln315_fu_242_p1;
wire   [5:0] empty_313_fu_279_p1;
wire   [5:0] select_ln324_3_fu_296_p3;
wire   [5:0] select_ln333_fu_303_p3;
wire   [5:0] select_ln1039_fu_288_p3;
wire   [10:0] tmp_fu_311_p3;
wire   [10:0] zext_ln333_fu_327_p1;
wire   [10:0] add_ln333_fu_331_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel3_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln324_fu_155_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            c3_V_fu_86 <= select_ln324_2_fu_202_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            c3_V_fu_86 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c4_V_fu_78 <= 7'd0;
        end else if (((icmp_ln324_reg_393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            c4_V_fu_78 <= select_ln1039_109_fu_319_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c5_V_fu_74 <= 6'd0;
        end else if (((icmp_ln324_reg_393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            c5_V_fu_74 <= add_ln840_82_fu_342_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln324_fu_155_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten13_fu_90 <= add_ln324_fu_161_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten13_fu_90 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln324_fu_155_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_82 <= select_ln1039_110_fu_216_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_82 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln324_reg_393 <= icmp_ln324_fu_155_p2;
        select_ln324_1_reg_405_pp0_iter1_reg <= select_ln324_1_reg_405;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln324_reg_393 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_data_reg_414 <= fifo_B_B_IO_L2_in_016_dout;
        local_B_addr_reg_409 <= zext_ln333_1_fu_337_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_155_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1039_reg_397 <= icmp_ln1039_fu_176_p2;
        select_ln324_1_reg_405 <= select_ln324_1_fu_194_p3;
    end
end

always @ (*) begin
    if (((icmp_ln324_fu_155_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_reg_393 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_c3_V_load = 2'd0;
    end else begin
        ap_sig_allocacmp_c3_V_load = c3_V_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten13_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten13_load = indvar_flatten13_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_82;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln324_reg_393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_B_IO_L2_in_016_blk_n = fifo_B_B_IO_L2_in_016_empty_n;
    end else begin
        fifo_B_B_IO_L2_in_016_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln324_reg_393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_B_IO_L2_in_016_read = 1'b1;
    end else begin
        fifo_B_B_IO_L2_in_016_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op63_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_B_IO_L2_in_117_blk_n = fifo_B_B_IO_L2_in_117_full_n;
    end else begin
        fifo_B_B_IO_L2_in_117_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op63_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_B_IO_L2_in_117_write = 1'b1;
    end else begin
        fifo_B_B_IO_L2_in_117_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        local_B_ce1 = 1'b1;
    end else begin
        local_B_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln324_1_reg_405_pp0_iter1_reg == 1'd1))) begin
        local_B_we1 = 1'b1;
    end else begin
        local_B_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1039_fu_210_p2 = (ap_sig_allocacmp_indvar_flatten_load + 13'd1);

assign add_ln324_fu_161_p2 = (ap_sig_allocacmp_indvar_flatten13_load + 13'd1);

assign add_ln333_fu_331_p2 = (tmp_fu_311_p3 + zext_ln333_fu_327_p1);

assign add_ln840_82_fu_342_p2 = (select_ln1039_fu_288_p3 + 6'd1);

assign add_ln840_fu_273_p2 = (select_ln324_fu_249_p3 + 7'd1);

assign and_ln324_fu_267_p2 = (xor_ln324_fu_256_p2 & icmp_ln103911_fu_261_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op63_write_state2 == 1'b1) & (fifo_B_B_IO_L2_in_117_full_n == 1'b0)) | ((icmp_ln324_reg_393 == 1'd0) & (fifo_B_B_IO_L2_in_016_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op63_write_state2 == 1'b1) & (fifo_B_B_IO_L2_in_117_full_n == 1'b0)) | ((icmp_ln324_reg_393 == 1'd0) & (fifo_B_B_IO_L2_in_016_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op63_write_state2 == 1'b1) & (fifo_B_B_IO_L2_in_117_full_n == 1'b0)) | ((icmp_ln324_reg_393 == 1'd0) & (fifo_B_B_IO_L2_in_016_empty_n == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op63_write_state2 == 1'b1) & (fifo_B_B_IO_L2_in_117_full_n == 1'b0)) | ((icmp_ln324_reg_393 == 1'd0) & (fifo_B_B_IO_L2_in_016_empty_n == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op63_write_state2 = ((select_ln324_1_reg_405 == 1'd0) & (icmp_ln324_reg_393 == 1'd0));
end

assign c3_V_4_fu_170_p2 = (ap_sig_allocacmp_c3_V_load + 2'd1);

assign cmp_i_i3_fu_188_p2 = ((ap_sig_allocacmp_c3_V_load == 2'd0) ? 1'b1 : 1'b0);

assign cmp_i_i_mid1_fu_182_p2 = ((c3_V_4_fu_170_p2 == 2'd0) ? 1'b1 : 1'b0);

assign empty_313_fu_279_p1 = add_ln840_fu_273_p2[5:0];

assign fifo_B_B_IO_L2_in_117_din = fifo_B_B_IO_L2_in_016_dout;

assign icmp_ln103911_fu_261_p2 = ((c5_V_fu_74 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln1039_fu_176_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 13'd2048) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_155_p2 = ((ap_sig_allocacmp_indvar_flatten13_load == 13'd4096) ? 1'b1 : 1'b0);

assign local_B_address1 = local_B_addr_reg_409;

assign local_B_d1 = fifo_data_reg_414;

assign or_ln1039_fu_283_p2 = (icmp_ln1039_reg_397 | and_ln324_fu_267_p2);

assign select_ln1039_109_fu_319_p3 = ((and_ln324_fu_267_p2[0:0] == 1'b1) ? add_ln840_fu_273_p2 : select_ln324_fu_249_p3);

assign select_ln1039_110_fu_216_p3 = ((icmp_ln1039_fu_176_p2[0:0] == 1'b1) ? 13'd1 : add_ln1039_fu_210_p2);

assign select_ln1039_fu_288_p3 = ((or_ln1039_fu_283_p2[0:0] == 1'b1) ? 6'd0 : c5_V_fu_74);

assign select_ln324_1_fu_194_p3 = ((icmp_ln1039_fu_176_p2[0:0] == 1'b1) ? cmp_i_i_mid1_fu_182_p2 : cmp_i_i3_fu_188_p2);

assign select_ln324_2_fu_202_p3 = ((icmp_ln1039_fu_176_p2[0:0] == 1'b1) ? c3_V_4_fu_170_p2 : ap_sig_allocacmp_c3_V_load);

assign select_ln324_3_fu_296_p3 = ((icmp_ln1039_reg_397[0:0] == 1'b1) ? 6'd0 : trunc_ln315_fu_242_p1);

assign select_ln324_fu_249_p3 = ((icmp_ln1039_reg_397[0:0] == 1'b1) ? 7'd0 : c4_V_fu_78);

assign select_ln333_fu_303_p3 = ((and_ln324_fu_267_p2[0:0] == 1'b1) ? empty_313_fu_279_p1 : select_ln324_3_fu_296_p3);

assign tmp_fu_311_p3 = {{select_ln333_fu_303_p3}, {5'd0}};

assign trunc_ln315_fu_242_p1 = c4_V_fu_78[5:0];

assign xor_ln324_fu_256_p2 = (icmp_ln1039_reg_397 ^ 1'd1);

assign zext_ln333_1_fu_337_p1 = add_ln333_fu_331_p2;

assign zext_ln333_fu_327_p1 = select_ln1039_fu_288_p3;

endmodule //kernel3_B_IO_L2_in_inter_trans
