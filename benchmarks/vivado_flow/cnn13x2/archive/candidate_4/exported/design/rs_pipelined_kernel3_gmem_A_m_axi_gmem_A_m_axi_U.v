// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
/**   Generated by RapidStream   **/
module rs_pipelined_kernel3_gmem_A_m_axi_gmem_A_m_axi_U #(
    parameter        CONSERVATIVE           = 0,
    parameter        NUM_READ_OUTSTANDING   = 2,
    parameter        NUM_WRITE_OUTSTANDING  = 2,
    parameter        MAX_READ_BURST_LENGTH  = 16,
    parameter        MAX_WRITE_BURST_LENGTH = 16,
    parameter        C_M_AXI_ID_WIDTH       = 1,
    parameter        C_M_AXI_ADDR_WIDTH     = 32,
    parameter        C_M_AXI_DATA_WIDTH     = 32,
    parameter        C_M_AXI_AWUSER_WIDTH   = 1,
    parameter        C_M_AXI_ARUSER_WIDTH   = 1,
    parameter        C_M_AXI_WUSER_WIDTH    = 1,
    parameter        C_M_AXI_RUSER_WIDTH    = 1,
    parameter        C_M_AXI_BUSER_WIDTH    = 1,
    parameter        C_TARGET_ADDR          = 32'h00000000,
    parameter        C_USER_VALUE           = 1'b0,
    parameter        C_PROT_VALUE           = 3'b000,
    parameter        C_CACHE_VALUE          = 4'b0011,
    parameter        USER_DW                = 32,
    parameter        USER_AW                = 32,
    parameter        USER_MAXREQS           = 16,
    parameter        USER_RFIFONUM_WIDTH    = 6,
    parameter [39:0] MAXI_BUFFER_IMPL       = "block"
) (
    input wire                                   ACLK,
    input wire                                   ACLK_EN,
    output wire [    (C_M_AXI_ADDR_WIDTH - 1):0] ARADDR,
    output wire [                           1:0] ARBURST,
    output wire [                           3:0] ARCACHE,
    input wire                                   ARESET,
    output wire [      (C_M_AXI_ID_WIDTH - 1):0] ARID,
    output wire [                           7:0] ARLEN,
    output wire [                           1:0] ARLOCK,
    output wire [                           2:0] ARPROT,
    output wire [                           3:0] ARQOS,
    input wire                                   ARREADY,
    output wire [                           3:0] ARREGION,
    output wire [                           2:0] ARSIZE,
    output wire [  (C_M_AXI_ARUSER_WIDTH - 1):0] ARUSER,
    output wire                                  ARVALID,
    output wire [    (C_M_AXI_ADDR_WIDTH - 1):0] AWADDR,
    output wire [                           1:0] AWBURST,
    output wire [                           3:0] AWCACHE,
    output wire [      (C_M_AXI_ID_WIDTH - 1):0] AWID,
    output wire [                           7:0] AWLEN,
    output wire [                           1:0] AWLOCK,
    output wire [                           2:0] AWPROT,
    output wire [                           3:0] AWQOS,
    input wire                                   AWREADY,
    output wire [                           3:0] AWREGION,
    output wire [                           2:0] AWSIZE,
    output wire [  (C_M_AXI_AWUSER_WIDTH - 1):0] AWUSER,
    output wire                                  AWVALID,
    input wire  [      (C_M_AXI_ID_WIDTH - 1):0] BID,
    output wire                                  BREADY,
    input wire  [                           1:0] BRESP,
    input wire  [   (C_M_AXI_BUSER_WIDTH - 1):0] BUSER,
    input wire                                   BVALID,
    input wire  [               (USER_AW - 1):0] I_ARADDR,
    input wire  [                          31:0] I_ARLEN,
    output wire                                  I_ARREADY,
    input wire                                   I_ARVALID,
    input wire  [               (USER_AW - 1):0] I_AWADDR,
    input wire  [                          31:0] I_AWLEN,
    output wire                                  I_AWREADY,
    input wire                                   I_AWVALID,
    input wire                                   I_BREADY,
    output wire                                  I_BVALID,
    output wire [               (USER_DW - 1):0] I_RDATA,
    output wire [   (USER_RFIFONUM_WIDTH - 1):0] I_RFIFONUM,
    input wire                                   I_RREADY,
    output wire                                  I_RVALID,
    input wire  [               (USER_DW - 1):0] I_WDATA,
    output wire                                  I_WREADY,
    input wire  [           (USER_DW / 8 - 1):0] I_WSTRB,
    input wire                                   I_WVALID,
    input wire  [    (C_M_AXI_DATA_WIDTH - 1):0] RDATA,
    input wire  [      (C_M_AXI_ID_WIDTH - 1):0] RID,
    input wire                                   RLAST,
    output wire                                  RREADY,
    input wire  [                           1:0] RRESP,
    input wire  [   (C_M_AXI_RUSER_WIDTH - 1):0] RUSER,
    input wire                                   RVALID,
    output wire [    (C_M_AXI_DATA_WIDTH - 1):0] WDATA,
    output wire [      (C_M_AXI_ID_WIDTH - 1):0] WID,
    output wire                                  WLAST,
    input wire                                   WREADY,
    output wire [(C_M_AXI_DATA_WIDTH / 8 - 1):0] WSTRB,
    output wire [   (C_M_AXI_WUSER_WIDTH - 1):0] WUSER,
    output wire                                  WVALID
);

wire        rs_pipelined_ARESET;


kernel3_gmem_A_m_axi #(
    .CONSERVATIVE           (CONSERVATIVE),
    .C_CACHE_VALUE          (C_CACHE_VALUE),
    .C_M_AXI_ADDR_WIDTH     (C_M_AXI_ADDR_WIDTH),
    .C_M_AXI_ARUSER_WIDTH   (C_M_AXI_ARUSER_WIDTH),
    .C_M_AXI_AWUSER_WIDTH   (C_M_AXI_AWUSER_WIDTH),
    .C_M_AXI_BUSER_WIDTH    (C_M_AXI_BUSER_WIDTH),
    .C_M_AXI_DATA_WIDTH     (C_M_AXI_DATA_WIDTH),
    .C_M_AXI_ID_WIDTH       (C_M_AXI_ID_WIDTH),
    .C_M_AXI_RUSER_WIDTH    (C_M_AXI_RUSER_WIDTH),
    .C_M_AXI_WUSER_WIDTH    (C_M_AXI_WUSER_WIDTH),
    .C_PROT_VALUE           (C_PROT_VALUE),
    .C_USER_VALUE           (C_USER_VALUE),
    .MAX_READ_BURST_LENGTH  (MAX_READ_BURST_LENGTH),
    .MAX_WRITE_BURST_LENGTH (MAX_WRITE_BURST_LENGTH),
    .NUM_READ_OUTSTANDING   (NUM_READ_OUTSTANDING),
    .NUM_WRITE_OUTSTANDING  (NUM_WRITE_OUTSTANDING),
    .USER_AW                (USER_AW),
    .USER_DW                (USER_DW),
    .USER_MAXREQS           (USER_MAXREQS),
    .USER_RFIFONUM_WIDTH    (USER_RFIFONUM_WIDTH)
) _ /**   design_1_i/kernel3_0/inst/gmem_A_m_axi_U   **/ (
    .ACLK       (ACLK),
    .ACLK_EN    (ACLK_EN),
    .ARADDR     (ARADDR),
    .ARBURST    (ARBURST),
    .ARCACHE    (ARCACHE),
    .ARESET     (rs_pipelined_ARESET),
    .ARID       (ARID),
    .ARLEN      (ARLEN),
    .ARLOCK     (ARLOCK),
    .ARPROT     (ARPROT),
    .ARQOS      (ARQOS),
    .ARREADY    (ARREADY),
    .ARREGION   (ARREGION),
    .ARSIZE     (ARSIZE),
    .ARUSER     (ARUSER),
    .ARVALID    (ARVALID),
    .AWADDR     (AWADDR),
    .AWBURST    (AWBURST),
    .AWCACHE    (AWCACHE),
    .AWID       (AWID),
    .AWLEN      (AWLEN),
    .AWLOCK     (AWLOCK),
    .AWPROT     (AWPROT),
    .AWQOS      (AWQOS),
    .AWREADY    (AWREADY),
    .AWREGION   (AWREGION),
    .AWSIZE     (AWSIZE),
    .AWUSER     (AWUSER),
    .AWVALID    (AWVALID),
    .BID        (BID),
    .BREADY     (BREADY),
    .BRESP      (BRESP),
    .BUSER      (BUSER),
    .BVALID     (BVALID),
    .I_ARADDR   (I_ARADDR),
    .I_ARLEN    (I_ARLEN),
    .I_ARREADY  (I_ARREADY),
    .I_ARVALID  (I_ARVALID),
    .I_AWADDR   (I_AWADDR),
    .I_AWLEN    (I_AWLEN),
    .I_AWREADY  (I_AWREADY),
    .I_AWVALID  (I_AWVALID),
    .I_BREADY   (I_BREADY),
    .I_BVALID   (I_BVALID),
    .I_RDATA    (I_RDATA),
    .I_RFIFONUM (I_RFIFONUM),
    .I_RREADY   (I_RREADY),
    .I_RVALID   (I_RVALID),
    .I_WDATA    (I_WDATA),
    .I_WREADY   (I_WREADY),
    .I_WSTRB    (I_WSTRB),
    .I_WVALID   (I_WVALID),
    .RDATA      (RDATA),
    .RID        (RID),
    .RLAST      (RLAST),
    .RREADY     (RREADY),
    .RRESP      (RRESP),
    .RUSER      (RUSER),
    .RVALID     (RVALID),
    .WDATA      (WDATA),
    .WID        (WID),
    .WLAST      (WLAST),
    .WREADY     (WREADY),
    .WSTRB      (WSTRB),
    .WUSER      (WUSER),
    .WVALID     (WVALID)
);

__rs_ff_pipeline #(
    .BODY_LEVEL      (0),
    .DATA_WIDTH      (1),
    .HEAD_LEVEL      (1),
    .TAIL_LEVEL      (1),
    .__BODY_0_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_1_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_2_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_3_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_4_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_5_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_6_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_7_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_8_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__HEAD_REGION   ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__TAIL_REGION   ("SLOT_X1Y0_TO_SLOT_X1Y0")
) ff_ARESET /**   Generated by RapidStream   **/ (
    .clk     (ACLK),
    .if_din  ({ ARESET }),
    .if_dout ({ rs_pipelined_ARESET })
);

endmodule  // rs_pipelined_kernel3_gmem_A_m_axi_gmem_A_m_axi_U
