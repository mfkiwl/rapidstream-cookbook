// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
module __rs_kernel3_aux_split_aux_18 #(
    parameter C_S_AXI_CONTROL_DATA_WIDTH  = 32,
    parameter C_S_AXI_CONTROL_ADDR_WIDTH  = 6,
    parameter C_S_AXI_DATA_WIDTH          = 32,
    parameter C_M_AXI_GMEM_A_ID_WIDTH     = 1,
    parameter C_M_AXI_GMEM_A_ADDR_WIDTH   = 64,
    parameter C_M_AXI_GMEM_A_DATA_WIDTH   = 512,
    parameter C_M_AXI_GMEM_A_AWUSER_WIDTH = 1,
    parameter C_M_AXI_GMEM_A_ARUSER_WIDTH = 1,
    parameter C_M_AXI_GMEM_A_WUSER_WIDTH  = 1,
    parameter C_M_AXI_GMEM_A_RUSER_WIDTH  = 1,
    parameter C_M_AXI_GMEM_A_BUSER_WIDTH  = 1,
    parameter C_M_AXI_GMEM_A_USER_VALUE   = 0,
    parameter C_M_AXI_GMEM_A_PROT_VALUE   = 0,
    parameter C_M_AXI_GMEM_A_CACHE_VALUE  = 3,
    parameter C_M_AXI_DATA_WIDTH          = 32,
    parameter C_M_AXI_GMEM_B_ID_WIDTH     = 1,
    parameter C_M_AXI_GMEM_B_ADDR_WIDTH   = 64,
    parameter C_M_AXI_GMEM_B_DATA_WIDTH   = 512,
    parameter C_M_AXI_GMEM_B_AWUSER_WIDTH = 1,
    parameter C_M_AXI_GMEM_B_ARUSER_WIDTH = 1,
    parameter C_M_AXI_GMEM_B_WUSER_WIDTH  = 1,
    parameter C_M_AXI_GMEM_B_RUSER_WIDTH  = 1,
    parameter C_M_AXI_GMEM_B_BUSER_WIDTH  = 1,
    parameter C_M_AXI_GMEM_B_USER_VALUE   = 0,
    parameter C_M_AXI_GMEM_B_PROT_VALUE   = 0,
    parameter C_M_AXI_GMEM_B_CACHE_VALUE  = 3,
    parameter C_M_AXI_GMEM_C_ID_WIDTH     = 1,
    parameter C_M_AXI_GMEM_C_ADDR_WIDTH   = 64,
    parameter C_M_AXI_GMEM_C_DATA_WIDTH   = 512,
    parameter C_M_AXI_GMEM_C_AWUSER_WIDTH = 1,
    parameter C_M_AXI_GMEM_C_ARUSER_WIDTH = 1,
    parameter C_M_AXI_GMEM_C_WUSER_WIDTH  = 1,
    parameter C_M_AXI_GMEM_C_RUSER_WIDTH  = 1,
    parameter C_M_AXI_GMEM_C_BUSER_WIDTH  = 1,
    parameter C_M_AXI_GMEM_C_USER_VALUE   = 0,
    parameter C_M_AXI_GMEM_C_PROT_VALUE   = 0,
    parameter C_M_AXI_GMEM_C_CACHE_VALUE  = 3,
    parameter C_S_AXI_CONTROL_WSTRB_WIDTH = 4,
    parameter C_S_AXI_WSTRB_WIDTH         = 4,
    parameter C_M_AXI_GMEM_A_WSTRB_WIDTH  = 64,
    parameter C_M_AXI_WSTRB_WIDTH         = 4,
    parameter C_M_AXI_GMEM_B_WSTRB_WIDTH  = 64,
    parameter C_M_AXI_GMEM_C_WSTRB_WIDTH  = 64
) (
    output wire [1:0] A_IO_L2_in_6_U0_fifo_A_A_IO_L2_in_710_fifo_cap,
    output wire [1:0] A_IO_L2_in_6_U0_fifo_A_A_IO_L2_in_710_num_data_valid,
    output wire [1:0] A_IO_L2_in_7_U0_fifo_A_A_IO_L2_in_710_fifo_cap,
    output wire [1:0] A_IO_L2_in_7_U0_fifo_A_A_IO_L2_in_710_num_data_valid,
    input wire  [1:0] fifo_A_A_IO_L2_in_7_U_if_fifo_cap,
    input wire  [1:0] fifo_A_A_IO_L2_in_7_U_if_num_data_valid
);
assign A_IO_L2_in_6_U0_fifo_A_A_IO_L2_in_710_fifo_cap = fifo_A_A_IO_L2_in_7_U_if_fifo_cap;
assign A_IO_L2_in_6_U0_fifo_A_A_IO_L2_in_710_num_data_valid = fifo_A_A_IO_L2_in_7_U_if_num_data_valid;
assign A_IO_L2_in_7_U0_fifo_A_A_IO_L2_in_710_fifo_cap = fifo_A_A_IO_L2_in_7_U_if_fifo_cap;
assign A_IO_L2_in_7_U0_fifo_A_A_IO_L2_in_710_num_data_valid = fifo_A_A_IO_L2_in_7_U_if_num_data_valid;
endmodule
