// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
/**   Generated by RapidStream   **/
module rs_pipelined_kernel3_control_s_axi_control_s_axi_U #(
    parameter C_S_AXI_ADDR_WIDTH = 6,
    parameter C_S_AXI_DATA_WIDTH = 32,
    parameter ADDR_AP_CTRL       = 6'h00,
    parameter ADDR_GIE           = 6'h04,
    parameter ADDR_IER           = 6'h08,
    parameter ADDR_ISR           = 6'h0c,
    parameter ADDR_A_DATA_0      = 6'h10,
    parameter ADDR_A_DATA_1      = 6'h14,
    parameter ADDR_A_CTRL        = 6'h18,
    parameter ADDR_B_DATA_0      = 6'h1c,
    parameter ADDR_B_DATA_1      = 6'h20,
    parameter ADDR_B_CTRL        = 6'h24,
    parameter ADDR_C_DATA_0      = 6'h28,
    parameter ADDR_C_DATA_1      = 6'h2c,
    parameter ADDR_C_CTRL        = 6'h30,
    parameter WRIDLE             = 2'd0,
    parameter WRDATA             = 2'd1,
    parameter WRRESP             = 2'd2,
    parameter WRRESET            = 2'd3,
    parameter RDIDLE             = 2'd0,
    parameter RDDATA             = 2'd1,
    parameter RDRESET            = 2'd2,
    parameter ADDR_BITS          = 6
) (
    output wire [                          63:0] A,
    input wire                                   ACLK,
    input wire                                   ACLK_EN,
    input wire  [    (C_S_AXI_ADDR_WIDTH - 1):0] ARADDR,
    input wire                                   ARESET,
    output wire                                  ARREADY,
    input wire                                   ARVALID,
    input wire  [    (C_S_AXI_ADDR_WIDTH - 1):0] AWADDR,
    output wire                                  AWREADY,
    input wire                                   AWVALID,
    output wire [                          63:0] B,
    input wire                                   BREADY,
    output wire [                           1:0] BRESP,
    output wire                                  BVALID,
    output wire [                          63:0] C,
    output wire [    (C_S_AXI_DATA_WIDTH - 1):0] RDATA,
    input wire                                   RREADY,
    output wire [                           1:0] RRESP,
    output wire                                  RVALID,
    input wire  [    (C_S_AXI_DATA_WIDTH - 1):0] WDATA,
    output wire                                  WREADY,
    input wire  [(C_S_AXI_DATA_WIDTH / 8 - 1):0] WSTRB,
    input wire                                   WVALID,
    output wire                                  ap_continue,
    input wire                                   ap_done,
    input wire                                   ap_idle,
    input wire                                   ap_ready,
    output wire                                  ap_start,
    output wire                                  interrupt
);

wire        rs_pipelined_ARESET;
wire        rs_pipelined_ap_done;
wire        rs_pipelined_ap_idle;


kernel3_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH (C_S_AXI_ADDR_WIDTH),
    .C_S_AXI_DATA_WIDTH (C_S_AXI_DATA_WIDTH)
) _ /**   design_1_i/kernel3_0/inst/control_s_axi_U   **/ (
    .A           (A),
    .ACLK        (ACLK),
    .ACLK_EN     (ACLK_EN),
    .ARADDR      (ARADDR),
    .ARESET      (rs_pipelined_ARESET),
    .ARREADY     (ARREADY),
    .ARVALID     (ARVALID),
    .AWADDR      (AWADDR),
    .AWREADY     (AWREADY),
    .AWVALID     (AWVALID),
    .B           (B),
    .BREADY      (BREADY),
    .BRESP       (BRESP),
    .BVALID      (BVALID),
    .C           (C),
    .RDATA       (RDATA),
    .RREADY      (RREADY),
    .RRESP       (RRESP),
    .RVALID      (RVALID),
    .WDATA       (WDATA),
    .WREADY      (WREADY),
    .WSTRB       (WSTRB),
    .WVALID      (WVALID),
    .ap_continue (ap_continue),
    .ap_done     (rs_pipelined_ap_done),
    .ap_idle     (rs_pipelined_ap_idle),
    .ap_ready    (ap_ready),
    .ap_start    (ap_start),
    .interrupt   (interrupt)
);

__rs_ff_pipeline #(
    .BODY_LEVEL      (1),
    .DATA_WIDTH      (1),
    .HEAD_LEVEL      (1),
    .TAIL_LEVEL      (1),
    .__BODY_0_REGION ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__BODY_1_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_2_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_3_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_4_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_5_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_6_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_7_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_8_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__HEAD_REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__TAIL_REGION   ("SLOT_X1Y0_TO_SLOT_X1Y0")
) ff_ARESET /**   Generated by RapidStream   **/ (
    .clk     (ACLK),
    .if_din  ({ ARESET }),
    .if_dout ({ rs_pipelined_ARESET })
);

__rs_ff_pipeline #(
    .BODY_LEVEL      (0),
    .DATA_WIDTH      (1),
    .HEAD_LEVEL      (1),
    .TAIL_LEVEL      (1),
    .__BODY_0_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_1_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_2_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_3_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_4_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_5_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_6_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_7_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_8_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__HEAD_REGION   ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__TAIL_REGION   ("SLOT_X1Y0_TO_SLOT_X1Y0")
) ff_ap_done /**   Generated by RapidStream   **/ (
    .clk     (ACLK),
    .if_din  ({ ap_done }),
    .if_dout ({ rs_pipelined_ap_done })
);

__rs_ff_pipeline #(
    .BODY_LEVEL      (1),
    .DATA_WIDTH      (1),
    .HEAD_LEVEL      (1),
    .TAIL_LEVEL      (1),
    .__BODY_0_REGION ("SLOT_X1Y1_TO_SLOT_X1Y1"),
    .__BODY_1_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_2_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_3_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_4_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_5_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_6_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_7_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__BODY_8_REGION ("SLOT_X1Y0_TO_SLOT_X1Y0"),
    .__HEAD_REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1"),
    .__TAIL_REGION   ("SLOT_X1Y0_TO_SLOT_X1Y0")
) ff_ap_idle /**   Generated by RapidStream   **/ (
    .clk     (ACLK),
    .if_din  ({ ap_idle }),
    .if_dout ({ rs_pipelined_ap_idle })
);

endmodule  // rs_pipelined_kernel3_control_s_axi_control_s_axi_U
