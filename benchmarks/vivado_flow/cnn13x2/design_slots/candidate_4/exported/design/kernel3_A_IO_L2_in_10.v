`timescale 1 ns / 1 ps
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

module kernel3_A_IO_L2_in_10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_A_A_IO_L2_in_1013_dout,
        fifo_A_A_IO_L2_in_1013_num_data_valid,
        fifo_A_A_IO_L2_in_1013_fifo_cap,
        fifo_A_A_IO_L2_in_1013_empty_n,
        fifo_A_A_IO_L2_in_1013_read,
        fifo_A_A_IO_L2_in_1114_din,
        fifo_A_A_IO_L2_in_1114_num_data_valid,
        fifo_A_A_IO_L2_in_1114_fifo_cap,
        fifo_A_A_IO_L2_in_1114_full_n,
        fifo_A_A_IO_L2_in_1114_write,
        fifo_A_PE_10_048_din,
        fifo_A_PE_10_048_num_data_valid,
        fifo_A_PE_10_048_fifo_cap,
        fifo_A_PE_10_048_full_n,
        fifo_A_PE_10_048_write
);
parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [255:0] fifo_A_A_IO_L2_in_1013_dout;
input  [1:0] fifo_A_A_IO_L2_in_1013_num_data_valid;
input  [1:0] fifo_A_A_IO_L2_in_1013_fifo_cap;
input   fifo_A_A_IO_L2_in_1013_empty_n;
output   fifo_A_A_IO_L2_in_1013_read;
output  [255:0] fifo_A_A_IO_L2_in_1114_din;
input  [1:0] fifo_A_A_IO_L2_in_1114_num_data_valid;
input  [1:0] fifo_A_A_IO_L2_in_1114_fifo_cap;
input   fifo_A_A_IO_L2_in_1114_full_n;
output   fifo_A_A_IO_L2_in_1114_write;
output  [255:0] fifo_A_PE_10_048_din;
input  [1:0] fifo_A_PE_10_048_num_data_valid;
input  [1:0] fifo_A_PE_10_048_fifo_cap;
input   fifo_A_PE_10_048_full_n;
output   fifo_A_PE_10_048_write;
reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_A_A_IO_L2_in_1013_read;
reg fifo_A_A_IO_L2_in_1114_write;
reg fifo_A_PE_10_048_write;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    local_A_ping_V_ce0;
wire   [255:0] local_A_ping_V_q0;
reg    local_A_pong_V_ce0;
wire   [255:0] local_A_pong_V_q0;
reg    local_A_pong_V_ce1;
reg    local_A_pong_V_we1;
wire    grp_A_IO_L2_in_inter_trans_fu_44_ap_start;
wire    grp_A_IO_L2_in_inter_trans_fu_44_ap_done;
wire    grp_A_IO_L2_in_inter_trans_fu_44_ap_idle;
wire    grp_A_IO_L2_in_inter_trans_fu_44_ap_ready;
wire   [8:0] grp_A_IO_L2_in_inter_trans_fu_44_local_A_address1;
wire    grp_A_IO_L2_in_inter_trans_fu_44_local_A_ce1;
wire    grp_A_IO_L2_in_inter_trans_fu_44_local_A_we1;
wire   [255:0] grp_A_IO_L2_in_inter_trans_fu_44_local_A_d1;
wire    grp_A_IO_L2_in_inter_trans_fu_44_fifo_A_A_IO_L2_in_111411_read;
wire   [255:0] grp_A_IO_L2_in_inter_trans_fu_44_fifo_A_A_IO_L2_in_1215_din;
wire    grp_A_IO_L2_in_inter_trans_fu_44_fifo_A_A_IO_L2_in_1215_write;
wire    grp_A_IO_L2_in_intra_trans_fu_56_ap_start;
wire    grp_A_IO_L2_in_intra_trans_fu_56_ap_done;
wire    grp_A_IO_L2_in_intra_trans_fu_56_ap_idle;
wire    grp_A_IO_L2_in_intra_trans_fu_56_ap_ready;
wire   [8:0] grp_A_IO_L2_in_intra_trans_fu_56_local_A_address0;
wire    grp_A_IO_L2_in_intra_trans_fu_56_local_A_ce0;
reg   [255:0] grp_A_IO_L2_in_intra_trans_fu_56_local_A_q0;
wire   [255:0] grp_A_IO_L2_in_intra_trans_fu_56_fifo_A_PE_12_054_din;
wire    grp_A_IO_L2_in_intra_trans_fu_56_fifo_A_PE_12_054_write;
reg   [0:0] grp_A_IO_L2_in_intra_trans_fu_56_intra_trans_en_offset;
reg    grp_A_IO_L2_in_inter_trans_fu_44_ap_start_reg;
reg    ap_block_state1_ignore_call7;
wire    ap_CS_fsm_state2;
reg    grp_A_IO_L2_in_intra_trans_fu_56_ap_start_reg;
reg    ap_block_state1_ignore_call8;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [3:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_block_state2_on_subcall_done;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;
// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 grp_A_IO_L2_in_inter_trans_fu_44_ap_start_reg = 1'b0;
#0 grp_A_IO_L2_in_intra_trans_fu_56_ap_start_reg = 1'b0;
end
kernel3_A_IO_L2_in_local_A_ping_V_RAM_2P_BRAM_1R1W #(
    .DataWidth( 256 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
local_A_ping_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_A_IO_L2_in_intra_trans_fu_56_local_A_address0),
    .ce0(local_A_ping_V_ce0),
    .q0(local_A_ping_V_q0)
);
kernel3_A_IO_L2_in_local_A_pong_V_RAM_2P_BRAM_1R1W #(
    .DataWidth( 256 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
local_A_pong_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_A_IO_L2_in_intra_trans_fu_56_local_A_address0),
    .ce0(local_A_pong_V_ce0),
    .q0(local_A_pong_V_q0),
    .address1(grp_A_IO_L2_in_inter_trans_fu_44_local_A_address1),
    .ce1(local_A_pong_V_ce1),
    .we1(local_A_pong_V_we1),
    .d1(grp_A_IO_L2_in_inter_trans_fu_44_local_A_d1)
);
kernel3_A_IO_L2_in_inter_trans grp_A_IO_L2_in_inter_trans_fu_44(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_A_IO_L2_in_inter_trans_fu_44_ap_start),
    .ap_done(grp_A_IO_L2_in_inter_trans_fu_44_ap_done),
    .ap_idle(grp_A_IO_L2_in_inter_trans_fu_44_ap_idle),
    .ap_ready(grp_A_IO_L2_in_inter_trans_fu_44_ap_ready),
    .idx_offset(4'd10),
    .local_A_address1(grp_A_IO_L2_in_inter_trans_fu_44_local_A_address1),
    .local_A_ce1(grp_A_IO_L2_in_inter_trans_fu_44_local_A_ce1),
    .local_A_we1(grp_A_IO_L2_in_inter_trans_fu_44_local_A_we1),
    .local_A_d1(grp_A_IO_L2_in_inter_trans_fu_44_local_A_d1),
    .fifo_A_A_IO_L2_in_111411_dout(fifo_A_A_IO_L2_in_1013_dout),
    .fifo_A_A_IO_L2_in_111411_num_data_valid(2'd0),
    .fifo_A_A_IO_L2_in_111411_fifo_cap(2'd0),
    .fifo_A_A_IO_L2_in_111411_empty_n(fifo_A_A_IO_L2_in_1013_empty_n),
    .fifo_A_A_IO_L2_in_111411_read(grp_A_IO_L2_in_inter_trans_fu_44_fifo_A_A_IO_L2_in_111411_read),
    .fifo_A_A_IO_L2_in_1215_din(grp_A_IO_L2_in_inter_trans_fu_44_fifo_A_A_IO_L2_in_1215_din),
    .fifo_A_A_IO_L2_in_1215_num_data_valid(2'd0),
    .fifo_A_A_IO_L2_in_1215_fifo_cap(2'd0),
    .fifo_A_A_IO_L2_in_1215_full_n(fifo_A_A_IO_L2_in_1114_full_n),
    .fifo_A_A_IO_L2_in_1215_write(grp_A_IO_L2_in_inter_trans_fu_44_fifo_A_A_IO_L2_in_1215_write)
);
kernel3_A_IO_L2_in_intra_trans grp_A_IO_L2_in_intra_trans_fu_56(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_A_IO_L2_in_intra_trans_fu_56_ap_start),
    .ap_done(grp_A_IO_L2_in_intra_trans_fu_56_ap_done),
    .ap_idle(grp_A_IO_L2_in_intra_trans_fu_56_ap_idle),
    .ap_ready(grp_A_IO_L2_in_intra_trans_fu_56_ap_ready),
    .local_A_address0(grp_A_IO_L2_in_intra_trans_fu_56_local_A_address0),
    .local_A_ce0(grp_A_IO_L2_in_intra_trans_fu_56_local_A_ce0),
    .local_A_q0(grp_A_IO_L2_in_intra_trans_fu_56_local_A_q0),
    .fifo_A_PE_12_054_din(grp_A_IO_L2_in_intra_trans_fu_56_fifo_A_PE_12_054_din),
    .fifo_A_PE_12_054_num_data_valid(2'd0),
    .fifo_A_PE_12_054_fifo_cap(2'd0),
    .fifo_A_PE_12_054_full_n(fifo_A_PE_10_048_full_n),
    .fifo_A_PE_12_054_write(grp_A_IO_L2_in_intra_trans_fu_56_fifo_A_PE_12_054_write),
    .intra_trans_en_offset(grp_A_IO_L2_in_intra_trans_fu_56_intra_trans_en_offset)
);
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_A_IO_L2_in_intra_trans_fu_56_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_done_reg <= 1'b1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_A_IO_L2_in_inter_trans_fu_44_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_A_IO_L2_in_inter_trans_fu_44_ap_start_reg <= 1'b1;
        end else if ((grp_A_IO_L2_in_inter_trans_fu_44_ap_ready == 1'b1)) begin
            grp_A_IO_L2_in_inter_trans_fu_44_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_A_IO_L2_in_intra_trans_fu_56_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_A_IO_L2_in_intra_trans_fu_56_ap_start_reg <= 1'b1;
        end else if ((grp_A_IO_L2_in_intra_trans_fu_56_ap_ready == 1'b1)) begin
            grp_A_IO_L2_in_intra_trans_fu_56_ap_start_reg <= 1'b0;
        end
    end
end
always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end
assign ap_ST_fsm_state3_blk = 1'b0;
always @ (*) begin
    if ((grp_A_IO_L2_in_intra_trans_fu_56_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end
always @ (*) begin
    if (((grp_A_IO_L2_in_intra_trans_fu_56_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end
always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end
always @ (*) begin
    if (((grp_A_IO_L2_in_intra_trans_fu_56_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        fifo_A_A_IO_L2_in_1013_read = grp_A_IO_L2_in_inter_trans_fu_44_fifo_A_A_IO_L2_in_111411_read;
    end else begin
        fifo_A_A_IO_L2_in_1013_read = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        fifo_A_A_IO_L2_in_1114_write = grp_A_IO_L2_in_inter_trans_fu_44_fifo_A_A_IO_L2_in_1215_write;
    end else begin
        fifo_A_A_IO_L2_in_1114_write = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        fifo_A_PE_10_048_write = grp_A_IO_L2_in_intra_trans_fu_56_fifo_A_PE_12_054_write;
    end else begin
        fifo_A_PE_10_048_write = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_A_IO_L2_in_intra_trans_fu_56_intra_trans_en_offset = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_A_IO_L2_in_intra_trans_fu_56_intra_trans_en_offset = 1'd0;
    end else begin
        grp_A_IO_L2_in_intra_trans_fu_56_intra_trans_en_offset = 'bx;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_A_IO_L2_in_intra_trans_fu_56_local_A_q0 = local_A_pong_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_A_IO_L2_in_intra_trans_fu_56_local_A_q0 = local_A_ping_V_q0;
    end else begin
        grp_A_IO_L2_in_intra_trans_fu_56_local_A_q0 = 'bx;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        local_A_ping_V_ce0 = grp_A_IO_L2_in_intra_trans_fu_56_local_A_ce0;
    end else begin
        local_A_ping_V_ce0 = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        local_A_pong_V_ce0 = grp_A_IO_L2_in_intra_trans_fu_56_local_A_ce0;
    end else begin
        local_A_pong_V_ce0 = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        local_A_pong_V_ce1 = grp_A_IO_L2_in_inter_trans_fu_44_local_A_ce1;
    end else begin
        local_A_pong_V_ce1 = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        local_A_pong_V_we1 = grp_A_IO_L2_in_inter_trans_fu_44_local_A_we1;
    end else begin
        local_A_pong_V_we1 = 1'b0;
    end
end
always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_A_IO_L2_in_intra_trans_fu_56_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end
assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];
assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];
assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];
assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];
always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end
always @ (*) begin
    ap_block_state1_ignore_call7 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end
always @ (*) begin
    ap_block_state1_ignore_call8 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end
always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_A_IO_L2_in_intra_trans_fu_56_ap_done == 1'b0) | (grp_A_IO_L2_in_inter_trans_fu_44_ap_done == 1'b0));
end
assign fifo_A_A_IO_L2_in_1114_din = grp_A_IO_L2_in_inter_trans_fu_44_fifo_A_A_IO_L2_in_1215_din;
assign fifo_A_PE_10_048_din = grp_A_IO_L2_in_intra_trans_fu_56_fifo_A_PE_12_054_din;
assign grp_A_IO_L2_in_inter_trans_fu_44_ap_start = grp_A_IO_L2_in_inter_trans_fu_44_ap_start_reg;
assign grp_A_IO_L2_in_intra_trans_fu_56_ap_start = grp_A_IO_L2_in_intra_trans_fu_56_ap_start_reg;
endmodule
