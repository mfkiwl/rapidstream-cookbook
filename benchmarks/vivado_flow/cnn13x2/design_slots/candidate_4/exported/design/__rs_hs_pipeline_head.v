`timescale 1 ns / 1 ps
// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
module __rs_hs_pipeline_head #(
    parameter DATA_WIDTH = 32,
    parameter PIPELINE_READY = 1,
    parameter PIPELINE_VALID_AND_DATA = 0,
    parameter __REGION = ""
) (
    // pragma RS clk port=clk
    input wire clk,
    // pragma RS rst port=reset active=high
    input wire reset,
    // inbound
    // pragma RS handshake valid=if_write ready=if_full_n data=if_din
    output wire                  if_full_n,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    // outbound
    // pragma RS handshake valid=if_empty_n ready=if_read data=if_dout
    output wire                  if_empty_n,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
    generate
        if (PIPELINE_VALID_AND_DATA == 1) begin
            (* KEEP = "true" *) reg [DATA_WIDTH-1:0] if_din_reg;
            (* KEEP = "true" *) reg if_write_reg;
            always @ (posedge clk) begin
                if_din_reg <= if_din;
                if_write_reg <= if_write;
            end
            assign if_dout = if_din_reg;
            assign if_empty_n = if_write_reg;
        end
        else begin
            assign if_dout = if_din;
            assign if_empty_n = if_write;
        end
        if (PIPELINE_READY == 1) begin
            (* KEEP = "true" *) reg if_read_reg;
            always @ (posedge clk) begin
                if_read_reg <= if_read;
            end
            assign if_full_n = if_read_reg;
        end
        else begin
            assign if_full_n = if_read;
        end
    endgenerate
endmodule
