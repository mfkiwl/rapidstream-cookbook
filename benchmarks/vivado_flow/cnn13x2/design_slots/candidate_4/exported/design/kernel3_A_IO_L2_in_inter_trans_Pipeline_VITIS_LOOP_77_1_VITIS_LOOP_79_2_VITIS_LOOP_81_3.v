`timescale 1 ns / 1 ps
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

module kernel3_A_IO_L2_in_inter_trans_Pipeline_VITIS_LOOP_77_1_VITIS_LOOP_79_2_VITIS_LOOP_81_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_A_A_IO_L2_in_111411_dout,
        fifo_A_A_IO_L2_in_111411_num_data_valid,
        fifo_A_A_IO_L2_in_111411_fifo_cap,
        fifo_A_A_IO_L2_in_111411_empty_n,
        fifo_A_A_IO_L2_in_111411_read,
        fifo_A_A_IO_L2_in_1215_din,
        fifo_A_A_IO_L2_in_1215_num_data_valid,
        fifo_A_A_IO_L2_in_1215_fifo_cap,
        fifo_A_A_IO_L2_in_1215_full_n,
        fifo_A_A_IO_L2_in_1215_write,
        idx_offset,
        bound5,
        local_A_address1,
        local_A_ce1,
        local_A_we1,
        local_A_d1
);
parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [255:0] fifo_A_A_IO_L2_in_111411_dout;
input  [1:0] fifo_A_A_IO_L2_in_111411_num_data_valid;
input  [1:0] fifo_A_A_IO_L2_in_111411_fifo_cap;
input   fifo_A_A_IO_L2_in_111411_empty_n;
output   fifo_A_A_IO_L2_in_111411_read;
output  [255:0] fifo_A_A_IO_L2_in_1215_din;
input  [1:0] fifo_A_A_IO_L2_in_1215_num_data_valid;
input  [1:0] fifo_A_A_IO_L2_in_1215_fifo_cap;
input   fifo_A_A_IO_L2_in_1215_full_n;
output   fifo_A_A_IO_L2_in_1215_write;
input  [3:0] idx_offset;
input  [12:0] bound5;
output  [8:0] local_A_address1;
output   local_A_ce1;
output   local_A_we1;
output  [255:0] local_A_d1;
reg ap_idle;
reg fifo_A_A_IO_L2_in_111411_read;
reg fifo_A_A_IO_L2_in_1215_write;
reg local_A_ce1;
reg local_A_we1;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln1039_reg_413;
reg   [0:0] select_ln77_1_reg_425;
reg    ap_predicate_op65_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1039_fu_175_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_A_A_IO_L2_in_111411_blk_n;
wire    ap_block_pp0_stage0;
reg    fifo_A_A_IO_L2_in_1215_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1039_58_fu_196_p2;
reg   [0:0] icmp_ln1039_58_reg_417;
wire   [0:0] select_ln77_1_fu_214_p3;
reg   [0:0] select_ln77_1_reg_425_pp0_iter1_reg;
reg   [8:0] local_A_addr_reg_429;
reg   [255:0] fifo_data_reg_434;
reg    ap_condition_exit_pp0_iter1_stage0;
wire   [63:0] zext_ln86_1_fu_357_p1;
reg   [5:0] c5_V_fu_82;
wire   [5:0] add_ln840_86_fu_362_p2;
wire    ap_loop_init;
reg   [4:0] c4_V_fu_86;
wire   [4:0] select_ln1039_113_fu_339_p3;
reg   [10:0] indvar_flatten_fu_90;
wire   [10:0] select_ln1039_114_fu_236_p3;
reg   [10:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [3:0] c3_V_fu_94;
wire   [3:0] select_ln1039_fu_222_p3;
reg   [3:0] ap_sig_allocacmp_c3_V_load;
reg   [12:0] indvar_flatten14_fu_98;
wire   [12:0] add_ln1039_26_fu_181_p2;
reg   [12:0] ap_sig_allocacmp_indvar_flatten14_load;
reg    ap_block_pp0_stage0_01001;
wire   [3:0] add_ln840_fu_190_p2;
wire   [0:0] cmp_i_i_mid1_fu_202_p2;
wire   [0:0] cmp_i_i3_fu_208_p2;
wire   [10:0] add_ln1039_fu_230_p2;
wire   [0:0] icmp_ln103911_fu_281_p2;
wire   [0:0] xor_ln77_fu_276_p2;
wire   [4:0] select_ln77_fu_269_p3;
wire   [4:0] add_ln840_85_fu_293_p2;
wire   [0:0] and_ln77_fu_287_p2;
wire   [0:0] or_ln1039_fu_303_p2;
wire   [3:0] trunc_ln77_fu_262_p1;
wire   [3:0] empty_315_fu_299_p1;
wire   [3:0] select_ln77_2_fu_316_p3;
wire   [3:0] select_ln86_fu_323_p3;
wire   [5:0] select_ln1039_112_fu_308_p3;
wire   [8:0] tmp_s_fu_331_p3;
wire   [8:0] zext_ln86_fu_347_p1;
wire   [8:0] add_ln86_fu_351_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;
// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end
kernel3_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1039_fu_175_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            c3_V_fu_94 <= select_ln1039_fu_222_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            c3_V_fu_94 <= idx_offset;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c4_V_fu_86 <= 5'd0;
        end else if (((icmp_ln1039_reg_413 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            c4_V_fu_86 <= select_ln1039_113_fu_339_p3;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c5_V_fu_82 <= 6'd0;
        end else if (((icmp_ln1039_reg_413 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            c5_V_fu_82 <= add_ln840_86_fu_362_p2;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1039_fu_175_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten14_fu_98 <= add_ln1039_26_fu_181_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten14_fu_98 <= 13'd0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1039_fu_175_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_90 <= select_ln1039_114_fu_236_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_90 <= 11'd0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln1039_reg_413 <= icmp_ln1039_fu_175_p2;
        select_ln77_1_reg_425_pp0_iter1_reg <= select_ln77_1_reg_425;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1039_reg_413 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_data_reg_434 <= fifo_A_A_IO_L2_in_111411_dout;
        local_A_addr_reg_429 <= zext_ln86_1_fu_357_p1;
    end
end
always @ (posedge ap_clk) begin
    if (((icmp_ln1039_fu_175_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1039_58_reg_417 <= icmp_ln1039_58_fu_196_p2;
        select_ln77_1_reg_425 <= select_ln77_1_fu_214_p3;
    end
end
always @ (*) begin
    if (((icmp_ln1039_fu_175_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1039_reg_413 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end
always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_c3_V_load = idx_offset;
    end else begin
        ap_sig_allocacmp_c3_V_load = c3_V_fu_94;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten14_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten14_load = indvar_flatten14_fu_98;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_90;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1039_reg_413 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_A_IO_L2_in_111411_blk_n = fifo_A_A_IO_L2_in_111411_empty_n;
    end else begin
        fifo_A_A_IO_L2_in_111411_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1039_reg_413 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_A_IO_L2_in_111411_read = 1'b1;
    end else begin
        fifo_A_A_IO_L2_in_111411_read = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op65_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_A_IO_L2_in_1215_blk_n = fifo_A_A_IO_L2_in_1215_full_n;
    end else begin
        fifo_A_A_IO_L2_in_1215_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op65_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_A_IO_L2_in_1215_write = 1'b1;
    end else begin
        fifo_A_A_IO_L2_in_1215_write = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        local_A_ce1 = 1'b1;
    end else begin
        local_A_ce1 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln77_1_reg_425_pp0_iter1_reg == 1'd1))) begin
        local_A_we1 = 1'b1;
    end else begin
        local_A_we1 = 1'b0;
    end
end
always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end
assign add_ln1039_26_fu_181_p2 = (ap_sig_allocacmp_indvar_flatten14_load + 13'd1);
assign add_ln1039_fu_230_p2 = (ap_sig_allocacmp_indvar_flatten_load + 11'd1);
assign add_ln840_85_fu_293_p2 = (select_ln77_fu_269_p3 + 5'd1);
assign add_ln840_86_fu_362_p2 = (select_ln1039_112_fu_308_p3 + 6'd1);
assign add_ln840_fu_190_p2 = (ap_sig_allocacmp_c3_V_load + 4'd1);
assign add_ln86_fu_351_p2 = (tmp_s_fu_331_p3 + zext_ln86_fu_347_p1);
assign and_ln77_fu_287_p2 = (xor_ln77_fu_276_p2 & icmp_ln103911_fu_281_p2);
assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];
assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);
always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op65_write_state2 == 1'b1) & (fifo_A_A_IO_L2_in_1215_full_n == 1'b0)) | ((icmp_ln1039_reg_413 == 1'd0) & (fifo_A_A_IO_L2_in_111411_empty_n == 1'b0))));
end
always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op65_write_state2 == 1'b1) & (fifo_A_A_IO_L2_in_1215_full_n == 1'b0)) | ((icmp_ln1039_reg_413 == 1'd0) & (fifo_A_A_IO_L2_in_111411_empty_n == 1'b0))));
end
always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op65_write_state2 == 1'b1) & (fifo_A_A_IO_L2_in_1215_full_n == 1'b0)) | ((icmp_ln1039_reg_413 == 1'd0) & (fifo_A_A_IO_L2_in_111411_empty_n == 1'b0))));
end
assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);
always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op65_write_state2 == 1'b1) & (fifo_A_A_IO_L2_in_1215_full_n == 1'b0)) | ((icmp_ln1039_reg_413 == 1'd0) & (fifo_A_A_IO_L2_in_111411_empty_n == 1'b0)));
end
assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);
assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);
assign ap_enable_reg_pp0_iter0 = ap_start_int;
assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;
always @ (*) begin
    ap_predicate_op65_write_state2 = ((select_ln77_1_reg_425 == 1'd0) & (icmp_ln1039_reg_413 == 1'd0));
end
assign cmp_i_i3_fu_208_p2 = ((ap_sig_allocacmp_c3_V_load == idx_offset) ? 1'b1 : 1'b0);
assign cmp_i_i_mid1_fu_202_p2 = ((add_ln840_fu_190_p2 == idx_offset) ? 1'b1 : 1'b0);
assign empty_315_fu_299_p1 = add_ln840_85_fu_293_p2[3:0];
assign fifo_A_A_IO_L2_in_1215_din = fifo_A_A_IO_L2_in_111411_dout;
assign icmp_ln103911_fu_281_p2 = ((c5_V_fu_82 == 6'd32) ? 1'b1 : 1'b0);
assign icmp_ln1039_58_fu_196_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 11'd512) ? 1'b1 : 1'b0);
assign icmp_ln1039_fu_175_p2 = ((ap_sig_allocacmp_indvar_flatten14_load == bound5) ? 1'b1 : 1'b0);
assign local_A_address1 = local_A_addr_reg_429;
assign local_A_d1 = fifo_data_reg_434;
assign or_ln1039_fu_303_p2 = (icmp_ln1039_58_reg_417 | and_ln77_fu_287_p2);
assign select_ln1039_112_fu_308_p3 = ((or_ln1039_fu_303_p2[0:0] == 1'b1) ? 6'd0 : c5_V_fu_82);
assign select_ln1039_113_fu_339_p3 = ((and_ln77_fu_287_p2[0:0] == 1'b1) ? add_ln840_85_fu_293_p2 : select_ln77_fu_269_p3);
assign select_ln1039_114_fu_236_p3 = ((icmp_ln1039_58_fu_196_p2[0:0] == 1'b1) ? 11'd1 : add_ln1039_fu_230_p2);
assign select_ln1039_fu_222_p3 = ((icmp_ln1039_58_fu_196_p2[0:0] == 1'b1) ? add_ln840_fu_190_p2 : ap_sig_allocacmp_c3_V_load);
assign select_ln77_1_fu_214_p3 = ((icmp_ln1039_58_fu_196_p2[0:0] == 1'b1) ? cmp_i_i_mid1_fu_202_p2 : cmp_i_i3_fu_208_p2);
assign select_ln77_2_fu_316_p3 = ((icmp_ln1039_58_reg_417[0:0] == 1'b1) ? 4'd0 : trunc_ln77_fu_262_p1);
assign select_ln77_fu_269_p3 = ((icmp_ln1039_58_reg_417[0:0] == 1'b1) ? 5'd0 : c4_V_fu_86);
assign select_ln86_fu_323_p3 = ((and_ln77_fu_287_p2[0:0] == 1'b1) ? empty_315_fu_299_p1 : select_ln77_2_fu_316_p3);
assign tmp_s_fu_331_p3 = {{select_ln86_fu_323_p3}, {5'd0}};
assign trunc_ln77_fu_262_p1 = c4_V_fu_86[3:0];
assign xor_ln77_fu_276_p2 = (icmp_ln1039_58_reg_417 ^ 1'd1);
assign zext_ln86_1_fu_357_p1 = add_ln86_fu_351_p2;
assign zext_ln86_fu_347_p1 = select_ln1039_112_fu_308_p3;
endmodule
