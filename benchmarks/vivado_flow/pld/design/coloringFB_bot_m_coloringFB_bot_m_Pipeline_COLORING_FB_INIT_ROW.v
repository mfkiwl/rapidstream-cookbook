// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module coloringFB_bot_m_coloringFB_bot_m_Pipeline_COLORING_FB_INIT_ROW (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        frame_buffer_V_0_address0,
        frame_buffer_V_0_ce0,
        frame_buffer_V_0_we0,
        frame_buffer_V_0_d0,
        frame_buffer_V_0_address1,
        frame_buffer_V_0_ce1,
        frame_buffer_V_0_we1,
        frame_buffer_V_0_d1,
        frame_buffer_V_1_address0,
        frame_buffer_V_1_ce0,
        frame_buffer_V_1_we0,
        frame_buffer_V_1_d0,
        frame_buffer_V_1_address1,
        frame_buffer_V_1_ce1,
        frame_buffer_V_1_we1,
        frame_buffer_V_1_d1
);

parameter    ap_ST_fsm_state1 = 32'd1;
parameter    ap_ST_fsm_state2 = 32'd2;
parameter    ap_ST_fsm_state3 = 32'd4;
parameter    ap_ST_fsm_state4 = 32'd8;
parameter    ap_ST_fsm_state5 = 32'd16;
parameter    ap_ST_fsm_state6 = 32'd32;
parameter    ap_ST_fsm_state7 = 32'd64;
parameter    ap_ST_fsm_state8 = 32'd128;
parameter    ap_ST_fsm_state9 = 32'd256;
parameter    ap_ST_fsm_state10 = 32'd512;
parameter    ap_ST_fsm_state11 = 32'd1024;
parameter    ap_ST_fsm_state12 = 32'd2048;
parameter    ap_ST_fsm_state13 = 32'd4096;
parameter    ap_ST_fsm_state14 = 32'd8192;
parameter    ap_ST_fsm_state15 = 32'd16384;
parameter    ap_ST_fsm_state16 = 32'd32768;
parameter    ap_ST_fsm_state17 = 32'd65536;
parameter    ap_ST_fsm_state18 = 32'd131072;
parameter    ap_ST_fsm_state19 = 32'd262144;
parameter    ap_ST_fsm_state20 = 32'd524288;
parameter    ap_ST_fsm_state21 = 32'd1048576;
parameter    ap_ST_fsm_state22 = 32'd2097152;
parameter    ap_ST_fsm_state23 = 32'd4194304;
parameter    ap_ST_fsm_state24 = 32'd8388608;
parameter    ap_ST_fsm_state25 = 32'd16777216;
parameter    ap_ST_fsm_state26 = 32'd33554432;
parameter    ap_ST_fsm_state27 = 32'd67108864;
parameter    ap_ST_fsm_state28 = 32'd134217728;
parameter    ap_ST_fsm_state29 = 32'd268435456;
parameter    ap_ST_fsm_state30 = 32'd536870912;
parameter    ap_ST_fsm_state31 = 32'd1073741824;
parameter    ap_ST_fsm_state32 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] frame_buffer_V_0_address0;
output   frame_buffer_V_0_ce0;
output   frame_buffer_V_0_we0;
output  [7:0] frame_buffer_V_0_d0;
output  [13:0] frame_buffer_V_0_address1;
output   frame_buffer_V_0_ce1;
output   frame_buffer_V_0_we1;
output  [7:0] frame_buffer_V_0_d1;
output  [13:0] frame_buffer_V_1_address0;
output   frame_buffer_V_1_ce0;
output   frame_buffer_V_1_we0;
output  [7:0] frame_buffer_V_1_d0;
output  [13:0] frame_buffer_V_1_address1;
output   frame_buffer_V_1_ce1;
output   frame_buffer_V_1_we1;
output  [7:0] frame_buffer_V_1_d1;

reg ap_idle;
reg[13:0] frame_buffer_V_0_address0;
reg frame_buffer_V_0_ce0;
reg frame_buffer_V_0_we0;
reg[13:0] frame_buffer_V_0_address1;
reg frame_buffer_V_0_ce1;
reg frame_buffer_V_0_we1;
reg[13:0] frame_buffer_V_1_address0;
reg frame_buffer_V_1_ce0;
reg frame_buffer_V_1_we0;
reg[13:0] frame_buffer_V_1_address1;
reg frame_buffer_V_1_ce1;
reg frame_buffer_V_1_we1;

(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln1057_fu_1222_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state32;
wire    ap_block_state32_pp0_stage31_iter0;
wire   [14:0] tmp_1_fu_1234_p3;
reg   [14:0] tmp_1_reg_2209;
wire   [63:0] zext_ln34_fu_1242_p1;
wire   [63:0] tmp_2_fu_1254_p3;
wire   [63:0] tmp_3_fu_1274_p3;
wire    ap_CS_fsm_state2;
wire   [63:0] tmp_4_fu_1289_p3;
wire   [63:0] tmp_5_fu_1304_p3;
wire    ap_CS_fsm_state3;
wire   [63:0] tmp_6_fu_1319_p3;
wire   [63:0] tmp_7_fu_1334_p3;
wire    ap_CS_fsm_state4;
wire   [63:0] tmp_8_fu_1349_p3;
wire   [63:0] tmp_9_fu_1364_p3;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_s_fu_1379_p3;
wire   [63:0] tmp_10_fu_1394_p3;
wire    ap_CS_fsm_state6;
wire   [63:0] tmp_11_fu_1409_p3;
wire   [63:0] tmp_12_fu_1424_p3;
wire    ap_CS_fsm_state7;
wire   [63:0] tmp_13_fu_1439_p3;
wire   [63:0] tmp_14_fu_1454_p3;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_15_fu_1469_p3;
wire   [63:0] tmp_16_fu_1484_p3;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_17_fu_1499_p3;
wire   [63:0] tmp_18_fu_1514_p3;
wire    ap_CS_fsm_state10;
wire   [63:0] tmp_19_fu_1529_p3;
wire   [63:0] tmp_20_fu_1544_p3;
wire    ap_CS_fsm_state11;
wire   [63:0] tmp_21_fu_1559_p3;
wire   [63:0] tmp_22_fu_1574_p3;
wire    ap_CS_fsm_state12;
wire   [63:0] tmp_23_fu_1589_p3;
wire   [63:0] tmp_24_fu_1604_p3;
wire    ap_CS_fsm_state13;
wire   [63:0] tmp_25_fu_1619_p3;
wire   [63:0] tmp_26_fu_1634_p3;
wire    ap_CS_fsm_state14;
wire   [63:0] tmp_27_fu_1649_p3;
wire   [63:0] tmp_28_fu_1664_p3;
wire    ap_CS_fsm_state15;
wire   [63:0] tmp_29_fu_1679_p3;
wire   [63:0] tmp_30_fu_1694_p3;
wire    ap_CS_fsm_state16;
wire   [63:0] tmp_31_fu_1709_p3;
wire   [63:0] tmp_32_fu_1724_p3;
wire    ap_CS_fsm_state17;
wire   [63:0] tmp_33_fu_1739_p3;
wire   [63:0] tmp_34_fu_1754_p3;
wire    ap_CS_fsm_state18;
wire   [63:0] tmp_35_fu_1769_p3;
wire   [63:0] tmp_36_fu_1784_p3;
wire    ap_CS_fsm_state19;
wire   [63:0] tmp_37_fu_1799_p3;
wire   [63:0] tmp_38_fu_1814_p3;
wire    ap_CS_fsm_state20;
wire   [63:0] tmp_39_fu_1829_p3;
wire   [63:0] tmp_40_fu_1844_p3;
wire    ap_CS_fsm_state21;
wire   [63:0] tmp_41_fu_1859_p3;
wire   [63:0] tmp_42_fu_1874_p3;
wire    ap_CS_fsm_state22;
wire   [63:0] tmp_43_fu_1889_p3;
wire   [63:0] tmp_44_fu_1904_p3;
wire    ap_CS_fsm_state23;
wire   [63:0] tmp_45_fu_1919_p3;
wire   [63:0] tmp_46_fu_1934_p3;
wire    ap_CS_fsm_state24;
wire   [63:0] tmp_47_fu_1949_p3;
wire   [63:0] tmp_48_fu_1964_p3;
wire    ap_CS_fsm_state25;
wire   [63:0] tmp_49_fu_1979_p3;
wire   [63:0] tmp_50_fu_1994_p3;
wire    ap_CS_fsm_state26;
wire   [63:0] tmp_51_fu_2009_p3;
wire   [63:0] tmp_52_fu_2024_p3;
wire    ap_CS_fsm_state27;
wire   [63:0] tmp_53_fu_2039_p3;
wire   [63:0] tmp_54_fu_2054_p3;
wire    ap_CS_fsm_state28;
wire   [63:0] tmp_55_fu_2069_p3;
wire   [63:0] tmp_56_fu_2084_p3;
wire    ap_CS_fsm_state29;
wire   [63:0] tmp_57_fu_2099_p3;
wire   [63:0] tmp_58_fu_2114_p3;
wire    ap_CS_fsm_state30;
wire   [63:0] tmp_59_fu_2129_p3;
wire   [63:0] tmp_60_fu_2144_p3;
wire    ap_CS_fsm_state31;
wire   [63:0] tmp_61_fu_2159_p3;
wire   [63:0] tmp_62_fu_2174_p3;
wire   [63:0] tmp_63_fu_2189_p3;
reg   [8:0] i_V_fu_164;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_i_V_1;
wire   [8:0] i_V_2_fu_1228_p2;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_state31_pp0_stage30_iter0;
wire   [14:0] or_ln34_fu_1248_p2;
wire   [14:0] or_ln34_1_fu_1269_p2;
wire   [14:0] or_ln34_2_fu_1284_p2;
wire   [14:0] or_ln34_3_fu_1299_p2;
wire   [14:0] or_ln34_4_fu_1314_p2;
wire   [14:0] or_ln34_5_fu_1329_p2;
wire   [14:0] or_ln34_6_fu_1344_p2;
wire   [14:0] or_ln34_7_fu_1359_p2;
wire   [14:0] or_ln34_8_fu_1374_p2;
wire   [14:0] or_ln34_9_fu_1389_p2;
wire   [14:0] or_ln34_10_fu_1404_p2;
wire   [14:0] or_ln34_11_fu_1419_p2;
wire   [14:0] or_ln34_12_fu_1434_p2;
wire   [14:0] or_ln34_13_fu_1449_p2;
wire   [14:0] or_ln34_14_fu_1464_p2;
wire   [14:0] or_ln34_15_fu_1479_p2;
wire   [14:0] or_ln34_16_fu_1494_p2;
wire   [14:0] or_ln34_17_fu_1509_p2;
wire   [14:0] or_ln34_18_fu_1524_p2;
wire   [14:0] or_ln34_19_fu_1539_p2;
wire   [14:0] or_ln34_20_fu_1554_p2;
wire   [14:0] or_ln34_21_fu_1569_p2;
wire   [14:0] or_ln34_22_fu_1584_p2;
wire   [14:0] or_ln34_23_fu_1599_p2;
wire   [14:0] or_ln34_24_fu_1614_p2;
wire   [14:0] or_ln34_25_fu_1629_p2;
wire   [14:0] or_ln34_26_fu_1644_p2;
wire   [14:0] or_ln34_27_fu_1659_p2;
wire   [14:0] or_ln34_28_fu_1674_p2;
wire   [14:0] or_ln34_29_fu_1689_p2;
wire   [14:0] or_ln34_30_fu_1704_p2;
wire   [14:0] or_ln34_31_fu_1719_p2;
wire   [14:0] or_ln34_32_fu_1734_p2;
wire   [14:0] or_ln34_33_fu_1749_p2;
wire   [14:0] or_ln34_34_fu_1764_p2;
wire   [14:0] or_ln34_35_fu_1779_p2;
wire   [14:0] or_ln34_36_fu_1794_p2;
wire   [14:0] or_ln34_37_fu_1809_p2;
wire   [14:0] or_ln34_38_fu_1824_p2;
wire   [14:0] or_ln34_39_fu_1839_p2;
wire   [14:0] or_ln34_40_fu_1854_p2;
wire   [14:0] or_ln34_41_fu_1869_p2;
wire   [14:0] or_ln34_42_fu_1884_p2;
wire   [14:0] or_ln34_43_fu_1899_p2;
wire   [14:0] or_ln34_44_fu_1914_p2;
wire   [14:0] or_ln34_45_fu_1929_p2;
wire   [14:0] or_ln34_46_fu_1944_p2;
wire   [14:0] or_ln34_47_fu_1959_p2;
wire   [14:0] or_ln34_48_fu_1974_p2;
wire   [14:0] or_ln34_49_fu_1989_p2;
wire   [14:0] or_ln34_50_fu_2004_p2;
wire   [14:0] or_ln34_51_fu_2019_p2;
wire   [14:0] or_ln34_52_fu_2034_p2;
wire   [14:0] or_ln34_53_fu_2049_p2;
wire   [14:0] or_ln34_54_fu_2064_p2;
wire   [14:0] or_ln34_55_fu_2079_p2;
wire   [14:0] or_ln34_56_fu_2094_p2;
wire   [14:0] or_ln34_57_fu_2109_p2;
wire   [14:0] or_ln34_58_fu_2124_p2;
wire   [14:0] or_ln34_59_fu_2139_p2;
wire   [14:0] or_ln34_60_fu_2154_p2;
wire   [14:0] or_ln34_61_fu_2169_p2;
wire   [14:0] or_ln34_62_fu_2184_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [31:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 32'd1;
#0 ap_done_reg = 1'b0;
end

coloringFB_bot_m_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        if ((icmp_ln1057_fu_1222_p2 == 1'd0)) begin
            i_V_fu_164 <= i_V_2_fu_1228_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_V_fu_164 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        tmp_1_reg_2209[14 : 6] <= tmp_1_fu_1234_p3[14 : 6];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln1057_fu_1222_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_V_1 = 9'd0;
    end else begin
        ap_sig_allocacmp_i_V_1 = i_V_fu_164;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        frame_buffer_V_0_address0 = tmp_63_fu_2189_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        frame_buffer_V_0_address0 = tmp_61_fu_2159_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        frame_buffer_V_0_address0 = tmp_59_fu_2129_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        frame_buffer_V_0_address0 = tmp_57_fu_2099_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        frame_buffer_V_0_address0 = tmp_55_fu_2069_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        frame_buffer_V_0_address0 = tmp_53_fu_2039_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        frame_buffer_V_0_address0 = tmp_51_fu_2009_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        frame_buffer_V_0_address0 = tmp_49_fu_1979_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        frame_buffer_V_0_address0 = tmp_47_fu_1949_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        frame_buffer_V_0_address0 = tmp_45_fu_1919_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        frame_buffer_V_0_address0 = tmp_43_fu_1889_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        frame_buffer_V_0_address0 = tmp_41_fu_1859_p3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        frame_buffer_V_0_address0 = tmp_39_fu_1829_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        frame_buffer_V_0_address0 = tmp_37_fu_1799_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        frame_buffer_V_0_address0 = tmp_35_fu_1769_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        frame_buffer_V_0_address0 = tmp_33_fu_1739_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        frame_buffer_V_0_address0 = tmp_31_fu_1709_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        frame_buffer_V_0_address0 = tmp_29_fu_1679_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        frame_buffer_V_0_address0 = tmp_27_fu_1649_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        frame_buffer_V_0_address0 = tmp_25_fu_1619_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        frame_buffer_V_0_address0 = tmp_23_fu_1589_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        frame_buffer_V_0_address0 = tmp_21_fu_1559_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        frame_buffer_V_0_address0 = tmp_19_fu_1529_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        frame_buffer_V_0_address0 = tmp_17_fu_1499_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_0_address0 = tmp_15_fu_1469_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_0_address0 = tmp_13_fu_1439_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_0_address0 = tmp_11_fu_1409_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_0_address0 = tmp_s_fu_1379_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_0_address0 = tmp_8_fu_1349_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_0_address0 = tmp_6_fu_1319_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_0_address0 = tmp_4_fu_1289_p3;
    end else if (((icmp_ln1057_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_0_address0 = tmp_2_fu_1254_p3;
    end else begin
        frame_buffer_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        frame_buffer_V_0_address1 = tmp_62_fu_2174_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        frame_buffer_V_0_address1 = tmp_60_fu_2144_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        frame_buffer_V_0_address1 = tmp_58_fu_2114_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        frame_buffer_V_0_address1 = tmp_56_fu_2084_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        frame_buffer_V_0_address1 = tmp_54_fu_2054_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        frame_buffer_V_0_address1 = tmp_52_fu_2024_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        frame_buffer_V_0_address1 = tmp_50_fu_1994_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        frame_buffer_V_0_address1 = tmp_48_fu_1964_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        frame_buffer_V_0_address1 = tmp_46_fu_1934_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        frame_buffer_V_0_address1 = tmp_44_fu_1904_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        frame_buffer_V_0_address1 = tmp_42_fu_1874_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        frame_buffer_V_0_address1 = tmp_40_fu_1844_p3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        frame_buffer_V_0_address1 = tmp_38_fu_1814_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        frame_buffer_V_0_address1 = tmp_36_fu_1784_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        frame_buffer_V_0_address1 = tmp_34_fu_1754_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        frame_buffer_V_0_address1 = tmp_32_fu_1724_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        frame_buffer_V_0_address1 = tmp_30_fu_1694_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        frame_buffer_V_0_address1 = tmp_28_fu_1664_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        frame_buffer_V_0_address1 = tmp_26_fu_1634_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        frame_buffer_V_0_address1 = tmp_24_fu_1604_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        frame_buffer_V_0_address1 = tmp_22_fu_1574_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        frame_buffer_V_0_address1 = tmp_20_fu_1544_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        frame_buffer_V_0_address1 = tmp_18_fu_1514_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        frame_buffer_V_0_address1 = tmp_16_fu_1484_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_0_address1 = tmp_14_fu_1454_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_0_address1 = tmp_12_fu_1424_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_0_address1 = tmp_10_fu_1394_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_0_address1 = tmp_9_fu_1364_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_0_address1 = tmp_7_fu_1334_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_0_address1 = tmp_5_fu_1304_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_0_address1 = tmp_3_fu_1274_p3;
    end else if (((icmp_ln1057_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_0_address1 = zext_ln34_fu_1242_p1;
    end else begin
        frame_buffer_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1057_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        frame_buffer_V_0_ce0 = 1'b1;
    end else begin
        frame_buffer_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1057_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        frame_buffer_V_0_ce1 = 1'b1;
    end else begin
        frame_buffer_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1057_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        frame_buffer_V_0_we0 = 1'b1;
    end else begin
        frame_buffer_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1057_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        frame_buffer_V_0_we1 = 1'b1;
    end else begin
        frame_buffer_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        frame_buffer_V_1_address0 = tmp_63_fu_2189_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        frame_buffer_V_1_address0 = tmp_61_fu_2159_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        frame_buffer_V_1_address0 = tmp_59_fu_2129_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        frame_buffer_V_1_address0 = tmp_57_fu_2099_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        frame_buffer_V_1_address0 = tmp_55_fu_2069_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        frame_buffer_V_1_address0 = tmp_53_fu_2039_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        frame_buffer_V_1_address0 = tmp_51_fu_2009_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        frame_buffer_V_1_address0 = tmp_49_fu_1979_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        frame_buffer_V_1_address0 = tmp_47_fu_1949_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        frame_buffer_V_1_address0 = tmp_45_fu_1919_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        frame_buffer_V_1_address0 = tmp_43_fu_1889_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        frame_buffer_V_1_address0 = tmp_41_fu_1859_p3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        frame_buffer_V_1_address0 = tmp_39_fu_1829_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        frame_buffer_V_1_address0 = tmp_37_fu_1799_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        frame_buffer_V_1_address0 = tmp_35_fu_1769_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        frame_buffer_V_1_address0 = tmp_33_fu_1739_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        frame_buffer_V_1_address0 = tmp_31_fu_1709_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        frame_buffer_V_1_address0 = tmp_29_fu_1679_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        frame_buffer_V_1_address0 = tmp_27_fu_1649_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        frame_buffer_V_1_address0 = tmp_25_fu_1619_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        frame_buffer_V_1_address0 = tmp_23_fu_1589_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        frame_buffer_V_1_address0 = tmp_21_fu_1559_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        frame_buffer_V_1_address0 = tmp_19_fu_1529_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        frame_buffer_V_1_address0 = tmp_17_fu_1499_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_1_address0 = tmp_15_fu_1469_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_1_address0 = tmp_13_fu_1439_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_1_address0 = tmp_11_fu_1409_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_1_address0 = tmp_s_fu_1379_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_1_address0 = tmp_8_fu_1349_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_1_address0 = tmp_6_fu_1319_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_1_address0 = tmp_4_fu_1289_p3;
    end else if (((icmp_ln1057_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_1_address0 = tmp_2_fu_1254_p3;
    end else begin
        frame_buffer_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        frame_buffer_V_1_address1 = tmp_62_fu_2174_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        frame_buffer_V_1_address1 = tmp_60_fu_2144_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        frame_buffer_V_1_address1 = tmp_58_fu_2114_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        frame_buffer_V_1_address1 = tmp_56_fu_2084_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        frame_buffer_V_1_address1 = tmp_54_fu_2054_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        frame_buffer_V_1_address1 = tmp_52_fu_2024_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        frame_buffer_V_1_address1 = tmp_50_fu_1994_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        frame_buffer_V_1_address1 = tmp_48_fu_1964_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        frame_buffer_V_1_address1 = tmp_46_fu_1934_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        frame_buffer_V_1_address1 = tmp_44_fu_1904_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        frame_buffer_V_1_address1 = tmp_42_fu_1874_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        frame_buffer_V_1_address1 = tmp_40_fu_1844_p3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        frame_buffer_V_1_address1 = tmp_38_fu_1814_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        frame_buffer_V_1_address1 = tmp_36_fu_1784_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        frame_buffer_V_1_address1 = tmp_34_fu_1754_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        frame_buffer_V_1_address1 = tmp_32_fu_1724_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        frame_buffer_V_1_address1 = tmp_30_fu_1694_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        frame_buffer_V_1_address1 = tmp_28_fu_1664_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        frame_buffer_V_1_address1 = tmp_26_fu_1634_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        frame_buffer_V_1_address1 = tmp_24_fu_1604_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        frame_buffer_V_1_address1 = tmp_22_fu_1574_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        frame_buffer_V_1_address1 = tmp_20_fu_1544_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        frame_buffer_V_1_address1 = tmp_18_fu_1514_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        frame_buffer_V_1_address1 = tmp_16_fu_1484_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_1_address1 = tmp_14_fu_1454_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_1_address1 = tmp_12_fu_1424_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_1_address1 = tmp_10_fu_1394_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_1_address1 = tmp_9_fu_1364_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_1_address1 = tmp_7_fu_1334_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_1_address1 = tmp_5_fu_1304_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_1_address1 = tmp_3_fu_1274_p3;
    end else if (((icmp_ln1057_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_1_address1 = zext_ln34_fu_1242_p1;
    end else begin
        frame_buffer_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1057_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        frame_buffer_V_1_ce0 = 1'b1;
    end else begin
        frame_buffer_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1057_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        frame_buffer_V_1_ce1 = 1'b1;
    end else begin
        frame_buffer_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1057_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        frame_buffer_V_1_we0 = 1'b1;
    end else begin
        frame_buffer_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1057_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        frame_buffer_V_1_we1 = 1'b1;
    end else begin
        frame_buffer_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln1057_fu_1222_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign frame_buffer_V_0_d0 = 8'd0;

assign frame_buffer_V_0_d1 = 8'd0;

assign frame_buffer_V_1_d0 = 8'd0;

assign frame_buffer_V_1_d1 = 8'd0;

assign i_V_2_fu_1228_p2 = (ap_sig_allocacmp_i_V_1 + 9'd1);

assign icmp_ln1057_fu_1222_p2 = ((ap_sig_allocacmp_i_V_1 == 9'd256) ? 1'b1 : 1'b0);

assign or_ln34_10_fu_1404_p2 = (tmp_1_reg_2209 | 15'd11);

assign or_ln34_11_fu_1419_p2 = (tmp_1_reg_2209 | 15'd12);

assign or_ln34_12_fu_1434_p2 = (tmp_1_reg_2209 | 15'd13);

assign or_ln34_13_fu_1449_p2 = (tmp_1_reg_2209 | 15'd14);

assign or_ln34_14_fu_1464_p2 = (tmp_1_reg_2209 | 15'd15);

assign or_ln34_15_fu_1479_p2 = (tmp_1_reg_2209 | 15'd16);

assign or_ln34_16_fu_1494_p2 = (tmp_1_reg_2209 | 15'd17);

assign or_ln34_17_fu_1509_p2 = (tmp_1_reg_2209 | 15'd18);

assign or_ln34_18_fu_1524_p2 = (tmp_1_reg_2209 | 15'd19);

assign or_ln34_19_fu_1539_p2 = (tmp_1_reg_2209 | 15'd20);

assign or_ln34_1_fu_1269_p2 = (tmp_1_reg_2209 | 15'd2);

assign or_ln34_20_fu_1554_p2 = (tmp_1_reg_2209 | 15'd21);

assign or_ln34_21_fu_1569_p2 = (tmp_1_reg_2209 | 15'd22);

assign or_ln34_22_fu_1584_p2 = (tmp_1_reg_2209 | 15'd23);

assign or_ln34_23_fu_1599_p2 = (tmp_1_reg_2209 | 15'd24);

assign or_ln34_24_fu_1614_p2 = (tmp_1_reg_2209 | 15'd25);

assign or_ln34_25_fu_1629_p2 = (tmp_1_reg_2209 | 15'd26);

assign or_ln34_26_fu_1644_p2 = (tmp_1_reg_2209 | 15'd27);

assign or_ln34_27_fu_1659_p2 = (tmp_1_reg_2209 | 15'd28);

assign or_ln34_28_fu_1674_p2 = (tmp_1_reg_2209 | 15'd29);

assign or_ln34_29_fu_1689_p2 = (tmp_1_reg_2209 | 15'd30);

assign or_ln34_2_fu_1284_p2 = (tmp_1_reg_2209 | 15'd3);

assign or_ln34_30_fu_1704_p2 = (tmp_1_reg_2209 | 15'd31);

assign or_ln34_31_fu_1719_p2 = (tmp_1_reg_2209 | 15'd32);

assign or_ln34_32_fu_1734_p2 = (tmp_1_reg_2209 | 15'd33);

assign or_ln34_33_fu_1749_p2 = (tmp_1_reg_2209 | 15'd34);

assign or_ln34_34_fu_1764_p2 = (tmp_1_reg_2209 | 15'd35);

assign or_ln34_35_fu_1779_p2 = (tmp_1_reg_2209 | 15'd36);

assign or_ln34_36_fu_1794_p2 = (tmp_1_reg_2209 | 15'd37);

assign or_ln34_37_fu_1809_p2 = (tmp_1_reg_2209 | 15'd38);

assign or_ln34_38_fu_1824_p2 = (tmp_1_reg_2209 | 15'd39);

assign or_ln34_39_fu_1839_p2 = (tmp_1_reg_2209 | 15'd40);

assign or_ln34_3_fu_1299_p2 = (tmp_1_reg_2209 | 15'd4);

assign or_ln34_40_fu_1854_p2 = (tmp_1_reg_2209 | 15'd41);

assign or_ln34_41_fu_1869_p2 = (tmp_1_reg_2209 | 15'd42);

assign or_ln34_42_fu_1884_p2 = (tmp_1_reg_2209 | 15'd43);

assign or_ln34_43_fu_1899_p2 = (tmp_1_reg_2209 | 15'd44);

assign or_ln34_44_fu_1914_p2 = (tmp_1_reg_2209 | 15'd45);

assign or_ln34_45_fu_1929_p2 = (tmp_1_reg_2209 | 15'd46);

assign or_ln34_46_fu_1944_p2 = (tmp_1_reg_2209 | 15'd47);

assign or_ln34_47_fu_1959_p2 = (tmp_1_reg_2209 | 15'd48);

assign or_ln34_48_fu_1974_p2 = (tmp_1_reg_2209 | 15'd49);

assign or_ln34_49_fu_1989_p2 = (tmp_1_reg_2209 | 15'd50);

assign or_ln34_4_fu_1314_p2 = (tmp_1_reg_2209 | 15'd5);

assign or_ln34_50_fu_2004_p2 = (tmp_1_reg_2209 | 15'd51);

assign or_ln34_51_fu_2019_p2 = (tmp_1_reg_2209 | 15'd52);

assign or_ln34_52_fu_2034_p2 = (tmp_1_reg_2209 | 15'd53);

assign or_ln34_53_fu_2049_p2 = (tmp_1_reg_2209 | 15'd54);

assign or_ln34_54_fu_2064_p2 = (tmp_1_reg_2209 | 15'd55);

assign or_ln34_55_fu_2079_p2 = (tmp_1_reg_2209 | 15'd56);

assign or_ln34_56_fu_2094_p2 = (tmp_1_reg_2209 | 15'd57);

assign or_ln34_57_fu_2109_p2 = (tmp_1_reg_2209 | 15'd58);

assign or_ln34_58_fu_2124_p2 = (tmp_1_reg_2209 | 15'd59);

assign or_ln34_59_fu_2139_p2 = (tmp_1_reg_2209 | 15'd60);

assign or_ln34_5_fu_1329_p2 = (tmp_1_reg_2209 | 15'd6);

assign or_ln34_60_fu_2154_p2 = (tmp_1_reg_2209 | 15'd61);

assign or_ln34_61_fu_2169_p2 = (tmp_1_reg_2209 | 15'd62);

assign or_ln34_62_fu_2184_p2 = (tmp_1_reg_2209 | 15'd63);

assign or_ln34_6_fu_1344_p2 = (tmp_1_reg_2209 | 15'd7);

assign or_ln34_7_fu_1359_p2 = (tmp_1_reg_2209 | 15'd8);

assign or_ln34_8_fu_1374_p2 = (tmp_1_reg_2209 | 15'd9);

assign or_ln34_9_fu_1389_p2 = (tmp_1_reg_2209 | 15'd10);

assign or_ln34_fu_1248_p2 = (tmp_1_fu_1234_p3 | 15'd1);

assign tmp_10_fu_1394_p3 = {{49'd0}, {or_ln34_9_fu_1389_p2}};

assign tmp_11_fu_1409_p3 = {{49'd0}, {or_ln34_10_fu_1404_p2}};

assign tmp_12_fu_1424_p3 = {{49'd0}, {or_ln34_11_fu_1419_p2}};

assign tmp_13_fu_1439_p3 = {{49'd0}, {or_ln34_12_fu_1434_p2}};

assign tmp_14_fu_1454_p3 = {{49'd0}, {or_ln34_13_fu_1449_p2}};

assign tmp_15_fu_1469_p3 = {{49'd0}, {or_ln34_14_fu_1464_p2}};

assign tmp_16_fu_1484_p3 = {{49'd0}, {or_ln34_15_fu_1479_p2}};

assign tmp_17_fu_1499_p3 = {{49'd0}, {or_ln34_16_fu_1494_p2}};

assign tmp_18_fu_1514_p3 = {{49'd0}, {or_ln34_17_fu_1509_p2}};

assign tmp_19_fu_1529_p3 = {{49'd0}, {or_ln34_18_fu_1524_p2}};

assign tmp_1_fu_1234_p3 = {{ap_sig_allocacmp_i_V_1}, {6'd0}};

assign tmp_20_fu_1544_p3 = {{49'd0}, {or_ln34_19_fu_1539_p2}};

assign tmp_21_fu_1559_p3 = {{49'd0}, {or_ln34_20_fu_1554_p2}};

assign tmp_22_fu_1574_p3 = {{49'd0}, {or_ln34_21_fu_1569_p2}};

assign tmp_23_fu_1589_p3 = {{49'd0}, {or_ln34_22_fu_1584_p2}};

assign tmp_24_fu_1604_p3 = {{49'd0}, {or_ln34_23_fu_1599_p2}};

assign tmp_25_fu_1619_p3 = {{49'd0}, {or_ln34_24_fu_1614_p2}};

assign tmp_26_fu_1634_p3 = {{49'd0}, {or_ln34_25_fu_1629_p2}};

assign tmp_27_fu_1649_p3 = {{49'd0}, {or_ln34_26_fu_1644_p2}};

assign tmp_28_fu_1664_p3 = {{49'd0}, {or_ln34_27_fu_1659_p2}};

assign tmp_29_fu_1679_p3 = {{49'd0}, {or_ln34_28_fu_1674_p2}};

assign tmp_2_fu_1254_p3 = {{49'd0}, {or_ln34_fu_1248_p2}};

assign tmp_30_fu_1694_p3 = {{49'd0}, {or_ln34_29_fu_1689_p2}};

assign tmp_31_fu_1709_p3 = {{49'd0}, {or_ln34_30_fu_1704_p2}};

assign tmp_32_fu_1724_p3 = {{49'd0}, {or_ln34_31_fu_1719_p2}};

assign tmp_33_fu_1739_p3 = {{49'd0}, {or_ln34_32_fu_1734_p2}};

assign tmp_34_fu_1754_p3 = {{49'd0}, {or_ln34_33_fu_1749_p2}};

assign tmp_35_fu_1769_p3 = {{49'd0}, {or_ln34_34_fu_1764_p2}};

assign tmp_36_fu_1784_p3 = {{49'd0}, {or_ln34_35_fu_1779_p2}};

assign tmp_37_fu_1799_p3 = {{49'd0}, {or_ln34_36_fu_1794_p2}};

assign tmp_38_fu_1814_p3 = {{49'd0}, {or_ln34_37_fu_1809_p2}};

assign tmp_39_fu_1829_p3 = {{49'd0}, {or_ln34_38_fu_1824_p2}};

assign tmp_3_fu_1274_p3 = {{49'd0}, {or_ln34_1_fu_1269_p2}};

assign tmp_40_fu_1844_p3 = {{49'd0}, {or_ln34_39_fu_1839_p2}};

assign tmp_41_fu_1859_p3 = {{49'd0}, {or_ln34_40_fu_1854_p2}};

assign tmp_42_fu_1874_p3 = {{49'd0}, {or_ln34_41_fu_1869_p2}};

assign tmp_43_fu_1889_p3 = {{49'd0}, {or_ln34_42_fu_1884_p2}};

assign tmp_44_fu_1904_p3 = {{49'd0}, {or_ln34_43_fu_1899_p2}};

assign tmp_45_fu_1919_p3 = {{49'd0}, {or_ln34_44_fu_1914_p2}};

assign tmp_46_fu_1934_p3 = {{49'd0}, {or_ln34_45_fu_1929_p2}};

assign tmp_47_fu_1949_p3 = {{49'd0}, {or_ln34_46_fu_1944_p2}};

assign tmp_48_fu_1964_p3 = {{49'd0}, {or_ln34_47_fu_1959_p2}};

assign tmp_49_fu_1979_p3 = {{49'd0}, {or_ln34_48_fu_1974_p2}};

assign tmp_4_fu_1289_p3 = {{49'd0}, {or_ln34_2_fu_1284_p2}};

assign tmp_50_fu_1994_p3 = {{49'd0}, {or_ln34_49_fu_1989_p2}};

assign tmp_51_fu_2009_p3 = {{49'd0}, {or_ln34_50_fu_2004_p2}};

assign tmp_52_fu_2024_p3 = {{49'd0}, {or_ln34_51_fu_2019_p2}};

assign tmp_53_fu_2039_p3 = {{49'd0}, {or_ln34_52_fu_2034_p2}};

assign tmp_54_fu_2054_p3 = {{49'd0}, {or_ln34_53_fu_2049_p2}};

assign tmp_55_fu_2069_p3 = {{49'd0}, {or_ln34_54_fu_2064_p2}};

assign tmp_56_fu_2084_p3 = {{49'd0}, {or_ln34_55_fu_2079_p2}};

assign tmp_57_fu_2099_p3 = {{49'd0}, {or_ln34_56_fu_2094_p2}};

assign tmp_58_fu_2114_p3 = {{49'd0}, {or_ln34_57_fu_2109_p2}};

assign tmp_59_fu_2129_p3 = {{49'd0}, {or_ln34_58_fu_2124_p2}};

assign tmp_5_fu_1304_p3 = {{49'd0}, {or_ln34_3_fu_1299_p2}};

assign tmp_60_fu_2144_p3 = {{49'd0}, {or_ln34_59_fu_2139_p2}};

assign tmp_61_fu_2159_p3 = {{49'd0}, {or_ln34_60_fu_2154_p2}};

assign tmp_62_fu_2174_p3 = {{49'd0}, {or_ln34_61_fu_2169_p2}};

assign tmp_63_fu_2189_p3 = {{49'd0}, {or_ln34_62_fu_2184_p2}};

assign tmp_6_fu_1319_p3 = {{49'd0}, {or_ln34_4_fu_1314_p2}};

assign tmp_7_fu_1334_p3 = {{49'd0}, {or_ln34_5_fu_1329_p2}};

assign tmp_8_fu_1349_p3 = {{49'd0}, {or_ln34_6_fu_1344_p2}};

assign tmp_9_fu_1364_p3 = {{49'd0}, {or_ln34_7_fu_1359_p2}};

assign tmp_s_fu_1379_p3 = {{49'd0}, {or_ln34_8_fu_1374_p2}};

assign zext_ln34_fu_1242_p1 = tmp_1_fu_1234_p3;

always @ (posedge ap_clk) begin
    tmp_1_reg_2209[5:0] <= 6'b000000;
end

endmodule //coloringFB_bot_m_coloringFB_bot_m_Pipeline_COLORING_FB_INIT_ROW
