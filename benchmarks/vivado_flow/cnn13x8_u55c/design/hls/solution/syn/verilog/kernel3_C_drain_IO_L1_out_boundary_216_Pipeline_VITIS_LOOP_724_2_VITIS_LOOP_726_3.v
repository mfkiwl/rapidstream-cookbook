// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

module kernel3_C_drain_IO_L1_out_boundary_216_Pipeline_VITIS_LOOP_724_2_VITIS_LOOP_726_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_C_drain_C_drain_IO_L1_out_6_12447_din,
        fifo_C_drain_C_drain_IO_L1_out_6_12447_num_data_valid,
        fifo_C_drain_C_drain_IO_L1_out_6_12447_fifo_cap,
        fifo_C_drain_C_drain_IO_L1_out_6_12447_full_n,
        fifo_C_drain_C_drain_IO_L1_out_6_12447_write,
        local_C_V_address0,
        local_C_V_ce0,
        local_C_V_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [63:0] fifo_C_drain_C_drain_IO_L1_out_6_12447_din;
input  [1:0] fifo_C_drain_C_drain_IO_L1_out_6_12447_num_data_valid;
input  [1:0] fifo_C_drain_C_drain_IO_L1_out_6_12447_fifo_cap;
input   fifo_C_drain_C_drain_IO_L1_out_6_12447_full_n;
output   fifo_C_drain_C_drain_IO_L1_out_6_12447_write;
output  [8:0] local_C_V_address0;
output   local_C_V_ce0;
input  [63:0] local_C_V_q0;

reg ap_idle;
reg fifo_C_drain_C_drain_IO_L1_out_6_12447_write;
reg local_C_V_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1039_fu_108_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_C_drain_C_drain_IO_L1_out_6_12447_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [8:0] add_ln729_fu_170_p2;
reg   [8:0] add_ln729_reg_226;
reg   [63:0] local_C_V_load_reg_236;
wire   [63:0] zext_ln729_3_fu_197_p1;
reg   [5:0] c6_V_fu_58;
wire   [5:0] add_ln840_6_fu_176_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_c6_V_load;
reg   [4:0] c5_V_fu_62;
wire   [4:0] select_ln1039_14_fu_146_p3;
reg   [4:0] ap_sig_allocacmp_c5_V_load;
reg   [9:0] indvar_flatten6_fu_66;
wire   [9:0] add_ln1039_fu_114_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten6_load;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln1039_11_fu_132_p2;
wire   [4:0] add_ln840_fu_126_p2;
wire   [3:0] trunc_ln729_fu_154_p1;
wire   [5:0] select_ln1039_fu_138_p3;
wire   [8:0] tmp_5_fu_158_p3;
wire   [8:0] zext_ln729_fu_166_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel3_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1039_fu_108_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            c5_V_fu_62 <= select_ln1039_14_fu_146_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            c5_V_fu_62 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1039_fu_108_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            c6_V_fu_58 <= add_ln840_6_fu_176_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            c6_V_fu_58 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1039_fu_108_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten6_fu_66 <= add_ln1039_fu_114_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_66 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1039_fu_108_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln729_reg_226 <= add_ln729_fu_170_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        local_C_V_load_reg_236 <= local_C_V_q0;
    end
end

always @ (*) begin
    if (((icmp_ln1039_fu_108_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_c5_V_load = 5'd0;
    end else begin
        ap_sig_allocacmp_c5_V_load = c5_V_fu_62;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_c6_V_load = 6'd0;
    end else begin
        ap_sig_allocacmp_c6_V_load = c6_V_fu_58;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten6_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten6_load = indvar_flatten6_fu_66;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        fifo_C_drain_C_drain_IO_L1_out_6_12447_blk_n = fifo_C_drain_C_drain_IO_L1_out_6_12447_full_n;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_6_12447_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        fifo_C_drain_C_drain_IO_L1_out_6_12447_write = 1'b1;
    end else begin
        fifo_C_drain_C_drain_IO_L1_out_6_12447_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_ce0 = 1'b1;
    end else begin
        local_C_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1039_fu_114_p2 = (ap_sig_allocacmp_indvar_flatten6_load + 10'd1);

assign add_ln729_fu_170_p2 = (tmp_5_fu_158_p3 + zext_ln729_fu_166_p1);

assign add_ln840_6_fu_176_p2 = (select_ln1039_fu_138_p3 + 6'd1);

assign add_ln840_fu_126_p2 = (ap_sig_allocacmp_c5_V_load + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((fifo_C_drain_C_drain_IO_L1_out_6_12447_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((fifo_C_drain_C_drain_IO_L1_out_6_12447_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((fifo_C_drain_C_drain_IO_L1_out_6_12447_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (fifo_C_drain_C_drain_IO_L1_out_6_12447_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign fifo_C_drain_C_drain_IO_L1_out_6_12447_din = local_C_V_load_reg_236;

assign icmp_ln1039_11_fu_132_p2 = ((ap_sig_allocacmp_c6_V_load == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln1039_fu_108_p2 = ((ap_sig_allocacmp_indvar_flatten6_load == 10'd512) ? 1'b1 : 1'b0);

assign local_C_V_address0 = zext_ln729_3_fu_197_p1;

assign select_ln1039_14_fu_146_p3 = ((icmp_ln1039_11_fu_132_p2[0:0] == 1'b1) ? add_ln840_fu_126_p2 : ap_sig_allocacmp_c5_V_load);

assign select_ln1039_fu_138_p3 = ((icmp_ln1039_11_fu_132_p2[0:0] == 1'b1) ? 6'd0 : ap_sig_allocacmp_c6_V_load);

assign tmp_5_fu_158_p3 = {{trunc_ln729_fu_154_p1}, {5'd0}};

assign trunc_ln729_fu_154_p1 = select_ln1039_14_fu_146_p3[3:0];

assign zext_ln729_3_fu_197_p1 = add_ln729_reg_226;

assign zext_ln729_fu_166_p1 = select_ln1039_fu_138_p3;

endmodule //kernel3_C_drain_IO_L1_out_boundary_216_Pipeline_VITIS_LOOP_724_2_VITIS_LOOP_726_3
